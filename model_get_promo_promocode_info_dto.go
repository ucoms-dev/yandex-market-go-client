/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetPromoPromocodeInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPromoPromocodeInfoDTO{}

// GetPromoPromocodeInfoDTO Информация для типа `MARKET_PROMOCODE`.  Параметр заполняется только для этого типа акции. 
type GetPromoPromocodeInfoDTO struct {
	// Промокод.
	Promocode string `json:"promocode"`
	// Процент скидки по промокоду.
	Discount int32 `json:"discount"`
}

type _GetPromoPromocodeInfoDTO GetPromoPromocodeInfoDTO

// NewGetPromoPromocodeInfoDTO instantiates a new GetPromoPromocodeInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPromoPromocodeInfoDTO(promocode string, discount int32) *GetPromoPromocodeInfoDTO {
	this := GetPromoPromocodeInfoDTO{}
	this.Promocode = promocode
	this.Discount = discount
	return &this
}

// NewGetPromoPromocodeInfoDTOWithDefaults instantiates a new GetPromoPromocodeInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPromoPromocodeInfoDTOWithDefaults() *GetPromoPromocodeInfoDTO {
	this := GetPromoPromocodeInfoDTO{}
	return &this
}

// GetPromocode returns the Promocode field value
func (o *GetPromoPromocodeInfoDTO) GetPromocode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Promocode
}

// GetPromocodeOk returns a tuple with the Promocode field value
// and a boolean to check if the value has been set.
func (o *GetPromoPromocodeInfoDTO) GetPromocodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Promocode, true
}

// SetPromocode sets field value
func (o *GetPromoPromocodeInfoDTO) SetPromocode(v string) {
	o.Promocode = v
}

// GetDiscount returns the Discount field value
func (o *GetPromoPromocodeInfoDTO) GetDiscount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Discount
}

// GetDiscountOk returns a tuple with the Discount field value
// and a boolean to check if the value has been set.
func (o *GetPromoPromocodeInfoDTO) GetDiscountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Discount, true
}

// SetDiscount sets field value
func (o *GetPromoPromocodeInfoDTO) SetDiscount(v int32) {
	o.Discount = v
}

func (o GetPromoPromocodeInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPromoPromocodeInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["promocode"] = o.Promocode
	toSerialize["discount"] = o.Discount
	return toSerialize, nil
}

func (o *GetPromoPromocodeInfoDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"promocode",
		"discount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetPromoPromocodeInfoDTO := _GetPromoPromocodeInfoDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetPromoPromocodeInfoDTO)

	if err != nil {
		return err
	}

	*o = GetPromoPromocodeInfoDTO(varGetPromoPromocodeInfoDTO)

	return err
}

type NullableGetPromoPromocodeInfoDTO struct {
	value *GetPromoPromocodeInfoDTO
	isSet bool
}

func (v NullableGetPromoPromocodeInfoDTO) Get() *GetPromoPromocodeInfoDTO {
	return v.value
}

func (v *NullableGetPromoPromocodeInfoDTO) Set(val *GetPromoPromocodeInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPromoPromocodeInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPromoPromocodeInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPromoPromocodeInfoDTO(val *GetPromoPromocodeInfoDTO) *NullableGetPromoPromocodeInfoDTO {
	return &NullableGetPromoPromocodeInfoDTO{value: val, isSet: true}
}

func (v NullableGetPromoPromocodeInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPromoPromocodeInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


