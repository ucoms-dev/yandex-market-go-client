/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetOrderDeliveryTrackCodeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetOrderDeliveryTrackCodeRequest{}

// SetOrderDeliveryTrackCodeRequest struct for SetOrderDeliveryTrackCodeRequest
type SetOrderDeliveryTrackCodeRequest struct {
	// Трек‑номер посылки.
	TrackCode string `json:"trackCode"`
	// Идентификатор службы доставки. Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
	DeliveryServiceId int64 `json:"deliveryServiceId"`
}

type _SetOrderDeliveryTrackCodeRequest SetOrderDeliveryTrackCodeRequest

// NewSetOrderDeliveryTrackCodeRequest instantiates a new SetOrderDeliveryTrackCodeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetOrderDeliveryTrackCodeRequest(trackCode string, deliveryServiceId int64) *SetOrderDeliveryTrackCodeRequest {
	this := SetOrderDeliveryTrackCodeRequest{}
	this.TrackCode = trackCode
	this.DeliveryServiceId = deliveryServiceId
	return &this
}

// NewSetOrderDeliveryTrackCodeRequestWithDefaults instantiates a new SetOrderDeliveryTrackCodeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetOrderDeliveryTrackCodeRequestWithDefaults() *SetOrderDeliveryTrackCodeRequest {
	this := SetOrderDeliveryTrackCodeRequest{}
	return &this
}

// GetTrackCode returns the TrackCode field value
func (o *SetOrderDeliveryTrackCodeRequest) GetTrackCode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TrackCode
}

// GetTrackCodeOk returns a tuple with the TrackCode field value
// and a boolean to check if the value has been set.
func (o *SetOrderDeliveryTrackCodeRequest) GetTrackCodeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TrackCode, true
}

// SetTrackCode sets field value
func (o *SetOrderDeliveryTrackCodeRequest) SetTrackCode(v string) {
	o.TrackCode = v
}

// GetDeliveryServiceId returns the DeliveryServiceId field value
func (o *SetOrderDeliveryTrackCodeRequest) GetDeliveryServiceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.DeliveryServiceId
}

// GetDeliveryServiceIdOk returns a tuple with the DeliveryServiceId field value
// and a boolean to check if the value has been set.
func (o *SetOrderDeliveryTrackCodeRequest) GetDeliveryServiceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeliveryServiceId, true
}

// SetDeliveryServiceId sets field value
func (o *SetOrderDeliveryTrackCodeRequest) SetDeliveryServiceId(v int64) {
	o.DeliveryServiceId = v
}

func (o SetOrderDeliveryTrackCodeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetOrderDeliveryTrackCodeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["trackCode"] = o.TrackCode
	toSerialize["deliveryServiceId"] = o.DeliveryServiceId
	return toSerialize, nil
}

func (o *SetOrderDeliveryTrackCodeRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"trackCode",
		"deliveryServiceId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetOrderDeliveryTrackCodeRequest := _SetOrderDeliveryTrackCodeRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetOrderDeliveryTrackCodeRequest)

	if err != nil {
		return err
	}

	*o = SetOrderDeliveryTrackCodeRequest(varSetOrderDeliveryTrackCodeRequest)

	return err
}

type NullableSetOrderDeliveryTrackCodeRequest struct {
	value *SetOrderDeliveryTrackCodeRequest
	isSet bool
}

func (v NullableSetOrderDeliveryTrackCodeRequest) Get() *SetOrderDeliveryTrackCodeRequest {
	return v.value
}

func (v *NullableSetOrderDeliveryTrackCodeRequest) Set(val *SetOrderDeliveryTrackCodeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetOrderDeliveryTrackCodeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetOrderDeliveryTrackCodeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetOrderDeliveryTrackCodeRequest(val *SetOrderDeliveryTrackCodeRequest) *NullableSetOrderDeliveryTrackCodeRequest {
	return &NullableSetOrderDeliveryTrackCodeRequest{value: val, isSet: true}
}

func (v NullableSetOrderDeliveryTrackCodeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetOrderDeliveryTrackCodeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


