/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SetShipmentPalletsCountRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SetShipmentPalletsCountRequest{}

// SetShipmentPalletsCountRequest Запрос на передачу количества упаковок в отгрузке.
type SetShipmentPalletsCountRequest struct {
	// Количество упаковок в отгрузке.
	PlacesCount int32 `json:"placesCount"`
}

type _SetShipmentPalletsCountRequest SetShipmentPalletsCountRequest

// NewSetShipmentPalletsCountRequest instantiates a new SetShipmentPalletsCountRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSetShipmentPalletsCountRequest(placesCount int32) *SetShipmentPalletsCountRequest {
	this := SetShipmentPalletsCountRequest{}
	this.PlacesCount = placesCount
	return &this
}

// NewSetShipmentPalletsCountRequestWithDefaults instantiates a new SetShipmentPalletsCountRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSetShipmentPalletsCountRequestWithDefaults() *SetShipmentPalletsCountRequest {
	this := SetShipmentPalletsCountRequest{}
	return &this
}

// GetPlacesCount returns the PlacesCount field value
func (o *SetShipmentPalletsCountRequest) GetPlacesCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PlacesCount
}

// GetPlacesCountOk returns a tuple with the PlacesCount field value
// and a boolean to check if the value has been set.
func (o *SetShipmentPalletsCountRequest) GetPlacesCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlacesCount, true
}

// SetPlacesCount sets field value
func (o *SetShipmentPalletsCountRequest) SetPlacesCount(v int32) {
	o.PlacesCount = v
}

func (o SetShipmentPalletsCountRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SetShipmentPalletsCountRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["placesCount"] = o.PlacesCount
	return toSerialize, nil
}

func (o *SetShipmentPalletsCountRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"placesCount",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSetShipmentPalletsCountRequest := _SetShipmentPalletsCountRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSetShipmentPalletsCountRequest)

	if err != nil {
		return err
	}

	*o = SetShipmentPalletsCountRequest(varSetShipmentPalletsCountRequest)

	return err
}

type NullableSetShipmentPalletsCountRequest struct {
	value *SetShipmentPalletsCountRequest
	isSet bool
}

func (v NullableSetShipmentPalletsCountRequest) Get() *SetShipmentPalletsCountRequest {
	return v.value
}

func (v *NullableSetShipmentPalletsCountRequest) Set(val *SetShipmentPalletsCountRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableSetShipmentPalletsCountRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableSetShipmentPalletsCountRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSetShipmentPalletsCountRequest(val *SetShipmentPalletsCountRequest) *NullableSetShipmentPalletsCountRequest {
	return &NullableSetShipmentPalletsCountRequest{value: val, isSet: true}
}

func (v NullableSetShipmentPalletsCountRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSetShipmentPalletsCountRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


