/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrderResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrderResponse{}

// GetOrderResponse struct for GetOrderResponse
type GetOrderResponse struct {
	Order *OrderDTO `json:"order,omitempty"`
}

// NewGetOrderResponse instantiates a new GetOrderResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrderResponse() *GetOrderResponse {
	this := GetOrderResponse{}
	return &this
}

// NewGetOrderResponseWithDefaults instantiates a new GetOrderResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrderResponseWithDefaults() *GetOrderResponse {
	this := GetOrderResponse{}
	return &this
}

// GetOrder returns the Order field value if set, zero value otherwise.
func (o *GetOrderResponse) GetOrder() OrderDTO {
	if o == nil || IsNil(o.Order) {
		var ret OrderDTO
		return ret
	}
	return *o.Order
}

// GetOrderOk returns a tuple with the Order field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrderResponse) GetOrderOk() (*OrderDTO, bool) {
	if o == nil || IsNil(o.Order) {
		return nil, false
	}
	return o.Order, true
}

// HasOrder returns a boolean if a field has been set.
func (o *GetOrderResponse) HasOrder() bool {
	if o != nil && !IsNil(o.Order) {
		return true
	}

	return false
}

// SetOrder gets a reference to the given OrderDTO and assigns it to the Order field.
func (o *GetOrderResponse) SetOrder(v OrderDTO) {
	o.Order = &v
}

func (o GetOrderResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrderResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Order) {
		toSerialize["order"] = o.Order
	}
	return toSerialize, nil
}

type NullableGetOrderResponse struct {
	value *GetOrderResponse
	isSet bool
}

func (v NullableGetOrderResponse) Get() *GetOrderResponse {
	return v.value
}

func (v *NullableGetOrderResponse) Set(val *GetOrderResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrderResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrderResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrderResponse(val *GetOrderResponse) *NullableGetOrderResponse {
	return &NullableGetOrderResponse{value: val, isSet: true}
}

func (v NullableGetOrderResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrderResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


