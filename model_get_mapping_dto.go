/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetMappingDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetMappingDTO{}

// GetMappingDTO Информация о товарах в каталоге. 
type GetMappingDTO struct {
	// SKU на Маркете.
	MarketSku *int64 `json:"marketSku,omitempty"`
	// Название карточки товара.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
	MarketSkuName *string `json:"marketSkuName,omitempty"`
	// Идентификатор модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
	// Deprecated
	MarketModelId *int64 `json:"marketModelId,omitempty"`
	// Название модели на Маркете.  Может отсутствовать в ответе, если товар еще не привязан к карточке. 
	// Deprecated
	MarketModelName *string `json:"marketModelName,omitempty"`
	// Идентификатор категории на Маркете, в которую попал товар.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
	MarketCategoryId *int64 `json:"marketCategoryId,omitempty"`
	// Название категории карточки на Маркете.  Может отсутствовать в ответе, если Маркет еще не определил категорию товара. 
	MarketCategoryName *string `json:"marketCategoryName,omitempty"`
}

// NewGetMappingDTO instantiates a new GetMappingDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetMappingDTO() *GetMappingDTO {
	this := GetMappingDTO{}
	return &this
}

// NewGetMappingDTOWithDefaults instantiates a new GetMappingDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetMappingDTOWithDefaults() *GetMappingDTO {
	this := GetMappingDTO{}
	return &this
}

// GetMarketSku returns the MarketSku field value if set, zero value otherwise.
func (o *GetMappingDTO) GetMarketSku() int64 {
	if o == nil || IsNil(o.MarketSku) {
		var ret int64
		return ret
	}
	return *o.MarketSku
}

// GetMarketSkuOk returns a tuple with the MarketSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMappingDTO) GetMarketSkuOk() (*int64, bool) {
	if o == nil || IsNil(o.MarketSku) {
		return nil, false
	}
	return o.MarketSku, true
}

// HasMarketSku returns a boolean if a field has been set.
func (o *GetMappingDTO) HasMarketSku() bool {
	if o != nil && !IsNil(o.MarketSku) {
		return true
	}

	return false
}

// SetMarketSku gets a reference to the given int64 and assigns it to the MarketSku field.
func (o *GetMappingDTO) SetMarketSku(v int64) {
	o.MarketSku = &v
}

// GetMarketSkuName returns the MarketSkuName field value if set, zero value otherwise.
func (o *GetMappingDTO) GetMarketSkuName() string {
	if o == nil || IsNil(o.MarketSkuName) {
		var ret string
		return ret
	}
	return *o.MarketSkuName
}

// GetMarketSkuNameOk returns a tuple with the MarketSkuName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMappingDTO) GetMarketSkuNameOk() (*string, bool) {
	if o == nil || IsNil(o.MarketSkuName) {
		return nil, false
	}
	return o.MarketSkuName, true
}

// HasMarketSkuName returns a boolean if a field has been set.
func (o *GetMappingDTO) HasMarketSkuName() bool {
	if o != nil && !IsNil(o.MarketSkuName) {
		return true
	}

	return false
}

// SetMarketSkuName gets a reference to the given string and assigns it to the MarketSkuName field.
func (o *GetMappingDTO) SetMarketSkuName(v string) {
	o.MarketSkuName = &v
}

// GetMarketModelId returns the MarketModelId field value if set, zero value otherwise.
// Deprecated
func (o *GetMappingDTO) GetMarketModelId() int64 {
	if o == nil || IsNil(o.MarketModelId) {
		var ret int64
		return ret
	}
	return *o.MarketModelId
}

// GetMarketModelIdOk returns a tuple with the MarketModelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetMappingDTO) GetMarketModelIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MarketModelId) {
		return nil, false
	}
	return o.MarketModelId, true
}

// HasMarketModelId returns a boolean if a field has been set.
func (o *GetMappingDTO) HasMarketModelId() bool {
	if o != nil && !IsNil(o.MarketModelId) {
		return true
	}

	return false
}

// SetMarketModelId gets a reference to the given int64 and assigns it to the MarketModelId field.
// Deprecated
func (o *GetMappingDTO) SetMarketModelId(v int64) {
	o.MarketModelId = &v
}

// GetMarketModelName returns the MarketModelName field value if set, zero value otherwise.
// Deprecated
func (o *GetMappingDTO) GetMarketModelName() string {
	if o == nil || IsNil(o.MarketModelName) {
		var ret string
		return ret
	}
	return *o.MarketModelName
}

// GetMarketModelNameOk returns a tuple with the MarketModelName field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetMappingDTO) GetMarketModelNameOk() (*string, bool) {
	if o == nil || IsNil(o.MarketModelName) {
		return nil, false
	}
	return o.MarketModelName, true
}

// HasMarketModelName returns a boolean if a field has been set.
func (o *GetMappingDTO) HasMarketModelName() bool {
	if o != nil && !IsNil(o.MarketModelName) {
		return true
	}

	return false
}

// SetMarketModelName gets a reference to the given string and assigns it to the MarketModelName field.
// Deprecated
func (o *GetMappingDTO) SetMarketModelName(v string) {
	o.MarketModelName = &v
}

// GetMarketCategoryId returns the MarketCategoryId field value if set, zero value otherwise.
func (o *GetMappingDTO) GetMarketCategoryId() int64 {
	if o == nil || IsNil(o.MarketCategoryId) {
		var ret int64
		return ret
	}
	return *o.MarketCategoryId
}

// GetMarketCategoryIdOk returns a tuple with the MarketCategoryId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMappingDTO) GetMarketCategoryIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MarketCategoryId) {
		return nil, false
	}
	return o.MarketCategoryId, true
}

// HasMarketCategoryId returns a boolean if a field has been set.
func (o *GetMappingDTO) HasMarketCategoryId() bool {
	if o != nil && !IsNil(o.MarketCategoryId) {
		return true
	}

	return false
}

// SetMarketCategoryId gets a reference to the given int64 and assigns it to the MarketCategoryId field.
func (o *GetMappingDTO) SetMarketCategoryId(v int64) {
	o.MarketCategoryId = &v
}

// GetMarketCategoryName returns the MarketCategoryName field value if set, zero value otherwise.
func (o *GetMappingDTO) GetMarketCategoryName() string {
	if o == nil || IsNil(o.MarketCategoryName) {
		var ret string
		return ret
	}
	return *o.MarketCategoryName
}

// GetMarketCategoryNameOk returns a tuple with the MarketCategoryName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetMappingDTO) GetMarketCategoryNameOk() (*string, bool) {
	if o == nil || IsNil(o.MarketCategoryName) {
		return nil, false
	}
	return o.MarketCategoryName, true
}

// HasMarketCategoryName returns a boolean if a field has been set.
func (o *GetMappingDTO) HasMarketCategoryName() bool {
	if o != nil && !IsNil(o.MarketCategoryName) {
		return true
	}

	return false
}

// SetMarketCategoryName gets a reference to the given string and assigns it to the MarketCategoryName field.
func (o *GetMappingDTO) SetMarketCategoryName(v string) {
	o.MarketCategoryName = &v
}

func (o GetMappingDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetMappingDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketSku) {
		toSerialize["marketSku"] = o.MarketSku
	}
	if !IsNil(o.MarketSkuName) {
		toSerialize["marketSkuName"] = o.MarketSkuName
	}
	if !IsNil(o.MarketModelId) {
		toSerialize["marketModelId"] = o.MarketModelId
	}
	if !IsNil(o.MarketModelName) {
		toSerialize["marketModelName"] = o.MarketModelName
	}
	if !IsNil(o.MarketCategoryId) {
		toSerialize["marketCategoryId"] = o.MarketCategoryId
	}
	if !IsNil(o.MarketCategoryName) {
		toSerialize["marketCategoryName"] = o.MarketCategoryName
	}
	return toSerialize, nil
}

type NullableGetMappingDTO struct {
	value *GetMappingDTO
	isSet bool
}

func (v NullableGetMappingDTO) Get() *GetMappingDTO {
	return v.value
}

func (v *NullableGetMappingDTO) Set(val *GetMappingDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetMappingDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetMappingDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetMappingDTO(val *GetMappingDTO) *NullableGetMappingDTO {
	return &NullableGetMappingDTO{value: val, isSet: true}
}

func (v NullableGetMappingDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetMappingDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


