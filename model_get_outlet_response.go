/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOutletResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOutletResponse{}

// GetOutletResponse Ответ на запрос информации о точке продаж.
type GetOutletResponse struct {
	Outlet *FullOutletDTO `json:"outlet,omitempty"`
}

// NewGetOutletResponse instantiates a new GetOutletResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOutletResponse() *GetOutletResponse {
	this := GetOutletResponse{}
	return &this
}

// NewGetOutletResponseWithDefaults instantiates a new GetOutletResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOutletResponseWithDefaults() *GetOutletResponse {
	this := GetOutletResponse{}
	return &this
}

// GetOutlet returns the Outlet field value if set, zero value otherwise.
func (o *GetOutletResponse) GetOutlet() FullOutletDTO {
	if o == nil || IsNil(o.Outlet) {
		var ret FullOutletDTO
		return ret
	}
	return *o.Outlet
}

// GetOutletOk returns a tuple with the Outlet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOutletResponse) GetOutletOk() (*FullOutletDTO, bool) {
	if o == nil || IsNil(o.Outlet) {
		return nil, false
	}
	return o.Outlet, true
}

// HasOutlet returns a boolean if a field has been set.
func (o *GetOutletResponse) HasOutlet() bool {
	if o != nil && !IsNil(o.Outlet) {
		return true
	}

	return false
}

// SetOutlet gets a reference to the given FullOutletDTO and assigns it to the Outlet field.
func (o *GetOutletResponse) SetOutlet(v FullOutletDTO) {
	o.Outlet = &v
}

func (o GetOutletResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOutletResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Outlet) {
		toSerialize["outlet"] = o.Outlet
	}
	return toSerialize, nil
}

type NullableGetOutletResponse struct {
	value *GetOutletResponse
	isSet bool
}

func (v NullableGetOutletResponse) Get() *GetOutletResponse {
	return v.value
}

func (v *NullableGetOutletResponse) Set(val *GetOutletResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOutletResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOutletResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOutletResponse(val *GetOutletResponse) *NullableGetOutletResponse {
	return &NullableGetOutletResponse{value: val, isSet: true}
}

func (v NullableGetOutletResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOutletResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


