/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GenerateGoodsFeedbackRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateGoodsFeedbackRequest{}

// GenerateGoodsFeedbackRequest Данные, необходимые для генерации отчета. 
type GenerateGoodsFeedbackRequest struct {
	// Идентификатор кабинета.
	BusinessId int64 `json:"businessId"`
}

type _GenerateGoodsFeedbackRequest GenerateGoodsFeedbackRequest

// NewGenerateGoodsFeedbackRequest instantiates a new GenerateGoodsFeedbackRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateGoodsFeedbackRequest(businessId int64) *GenerateGoodsFeedbackRequest {
	this := GenerateGoodsFeedbackRequest{}
	this.BusinessId = businessId
	return &this
}

// NewGenerateGoodsFeedbackRequestWithDefaults instantiates a new GenerateGoodsFeedbackRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateGoodsFeedbackRequestWithDefaults() *GenerateGoodsFeedbackRequest {
	this := GenerateGoodsFeedbackRequest{}
	return &this
}

// GetBusinessId returns the BusinessId field value
func (o *GenerateGoodsFeedbackRequest) GetBusinessId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value
// and a boolean to check if the value has been set.
func (o *GenerateGoodsFeedbackRequest) GetBusinessIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessId, true
}

// SetBusinessId sets field value
func (o *GenerateGoodsFeedbackRequest) SetBusinessId(v int64) {
	o.BusinessId = v
}

func (o GenerateGoodsFeedbackRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateGoodsFeedbackRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["businessId"] = o.BusinessId
	return toSerialize, nil
}

func (o *GenerateGoodsFeedbackRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"businessId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateGoodsFeedbackRequest := _GenerateGoodsFeedbackRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenerateGoodsFeedbackRequest)

	if err != nil {
		return err
	}

	*o = GenerateGoodsFeedbackRequest(varGenerateGoodsFeedbackRequest)

	return err
}

type NullableGenerateGoodsFeedbackRequest struct {
	value *GenerateGoodsFeedbackRequest
	isSet bool
}

func (v NullableGenerateGoodsFeedbackRequest) Get() *GenerateGoodsFeedbackRequest {
	return v.value
}

func (v *NullableGenerateGoodsFeedbackRequest) Set(val *GenerateGoodsFeedbackRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateGoodsFeedbackRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateGoodsFeedbackRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateGoodsFeedbackRequest(val *GenerateGoodsFeedbackRequest) *NullableGenerateGoodsFeedbackRequest {
	return &NullableGenerateGoodsFeedbackRequest{value: val, isSet: true}
}

func (v NullableGenerateGoodsFeedbackRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateGoodsFeedbackRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


