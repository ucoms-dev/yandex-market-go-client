/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GenerateSalesGeographyRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateSalesGeographyRequest{}

// GenerateSalesGeographyRequest Данные, необходимые для генерации отчета. 
type GenerateSalesGeographyRequest struct {
	// Идентификатор кабинета.
	BusinessId int64 `json:"businessId"`
	// Начало периода, включительно.
	DateFrom string `json:"dateFrom"`
	// Конец периода, включительно.
	DateTo string `json:"dateTo"`
	// Идентификаторы категорий.
	CategoryIds []int64 `json:"categoryIds,omitempty"`
	// Идентификаторы товаров.
	OfferIds []string `json:"offerIds,omitempty"`
}

type _GenerateSalesGeographyRequest GenerateSalesGeographyRequest

// NewGenerateSalesGeographyRequest instantiates a new GenerateSalesGeographyRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateSalesGeographyRequest(businessId int64, dateFrom string, dateTo string) *GenerateSalesGeographyRequest {
	this := GenerateSalesGeographyRequest{}
	this.BusinessId = businessId
	this.DateFrom = dateFrom
	this.DateTo = dateTo
	return &this
}

// NewGenerateSalesGeographyRequestWithDefaults instantiates a new GenerateSalesGeographyRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateSalesGeographyRequestWithDefaults() *GenerateSalesGeographyRequest {
	this := GenerateSalesGeographyRequest{}
	return &this
}

// GetBusinessId returns the BusinessId field value
func (o *GenerateSalesGeographyRequest) GetBusinessId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value
// and a boolean to check if the value has been set.
func (o *GenerateSalesGeographyRequest) GetBusinessIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessId, true
}

// SetBusinessId sets field value
func (o *GenerateSalesGeographyRequest) SetBusinessId(v int64) {
	o.BusinessId = v
}

// GetDateFrom returns the DateFrom field value
func (o *GenerateSalesGeographyRequest) GetDateFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateFrom
}

// GetDateFromOk returns a tuple with the DateFrom field value
// and a boolean to check if the value has been set.
func (o *GenerateSalesGeographyRequest) GetDateFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateFrom, true
}

// SetDateFrom sets field value
func (o *GenerateSalesGeographyRequest) SetDateFrom(v string) {
	o.DateFrom = v
}

// GetDateTo returns the DateTo field value
func (o *GenerateSalesGeographyRequest) GetDateTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateTo
}

// GetDateToOk returns a tuple with the DateTo field value
// and a boolean to check if the value has been set.
func (o *GenerateSalesGeographyRequest) GetDateToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateTo, true
}

// SetDateTo sets field value
func (o *GenerateSalesGeographyRequest) SetDateTo(v string) {
	o.DateTo = v
}

// GetCategoryIds returns the CategoryIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateSalesGeographyRequest) GetCategoryIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.CategoryIds
}

// GetCategoryIdsOk returns a tuple with the CategoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateSalesGeographyRequest) GetCategoryIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.CategoryIds) {
		return nil, false
	}
	return o.CategoryIds, true
}

// HasCategoryIds returns a boolean if a field has been set.
func (o *GenerateSalesGeographyRequest) HasCategoryIds() bool {
	if o != nil && !IsNil(o.CategoryIds) {
		return true
	}

	return false
}

// SetCategoryIds gets a reference to the given []int64 and assigns it to the CategoryIds field.
func (o *GenerateSalesGeographyRequest) SetCategoryIds(v []int64) {
	o.CategoryIds = v
}

// GetOfferIds returns the OfferIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateSalesGeographyRequest) GetOfferIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.OfferIds
}

// GetOfferIdsOk returns a tuple with the OfferIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateSalesGeographyRequest) GetOfferIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OfferIds) {
		return nil, false
	}
	return o.OfferIds, true
}

// HasOfferIds returns a boolean if a field has been set.
func (o *GenerateSalesGeographyRequest) HasOfferIds() bool {
	if o != nil && !IsNil(o.OfferIds) {
		return true
	}

	return false
}

// SetOfferIds gets a reference to the given []string and assigns it to the OfferIds field.
func (o *GenerateSalesGeographyRequest) SetOfferIds(v []string) {
	o.OfferIds = v
}

func (o GenerateSalesGeographyRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateSalesGeographyRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["businessId"] = o.BusinessId
	toSerialize["dateFrom"] = o.DateFrom
	toSerialize["dateTo"] = o.DateTo
	if o.CategoryIds != nil {
		toSerialize["categoryIds"] = o.CategoryIds
	}
	if o.OfferIds != nil {
		toSerialize["offerIds"] = o.OfferIds
	}
	return toSerialize, nil
}

func (o *GenerateSalesGeographyRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"businessId",
		"dateFrom",
		"dateTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateSalesGeographyRequest := _GenerateSalesGeographyRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenerateSalesGeographyRequest)

	if err != nil {
		return err
	}

	*o = GenerateSalesGeographyRequest(varGenerateSalesGeographyRequest)

	return err
}

type NullableGenerateSalesGeographyRequest struct {
	value *GenerateSalesGeographyRequest
	isSet bool
}

func (v NullableGenerateSalesGeographyRequest) Get() *GenerateSalesGeographyRequest {
	return v.value
}

func (v *NullableGenerateSalesGeographyRequest) Set(val *GenerateSalesGeographyRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateSalesGeographyRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateSalesGeographyRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateSalesGeographyRequest(val *GenerateSalesGeographyRequest) *NullableGenerateSalesGeographyRequest {
	return &NullableGenerateSalesGeographyRequest{value: val, isSet: true}
}

func (v NullableGenerateSalesGeographyRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateSalesGeographyRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


