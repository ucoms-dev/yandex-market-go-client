/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the OrderBusinessDocumentsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderBusinessDocumentsDTO{}

// OrderBusinessDocumentsDTO Информация о документах. 
type OrderBusinessDocumentsDTO struct {
	Upd *DocumentDTO `json:"upd,omitempty"`
	Ukd *DocumentDTO `json:"ukd,omitempty"`
	TorgTwelve *DocumentDTO `json:"torgTwelve,omitempty"`
	Sf *DocumentDTO `json:"sf,omitempty"`
	Ksf *DocumentDTO `json:"ksf,omitempty"`
}

// NewOrderBusinessDocumentsDTO instantiates a new OrderBusinessDocumentsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderBusinessDocumentsDTO() *OrderBusinessDocumentsDTO {
	this := OrderBusinessDocumentsDTO{}
	return &this
}

// NewOrderBusinessDocumentsDTOWithDefaults instantiates a new OrderBusinessDocumentsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderBusinessDocumentsDTOWithDefaults() *OrderBusinessDocumentsDTO {
	this := OrderBusinessDocumentsDTO{}
	return &this
}

// GetUpd returns the Upd field value if set, zero value otherwise.
func (o *OrderBusinessDocumentsDTO) GetUpd() DocumentDTO {
	if o == nil || IsNil(o.Upd) {
		var ret DocumentDTO
		return ret
	}
	return *o.Upd
}

// GetUpdOk returns a tuple with the Upd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBusinessDocumentsDTO) GetUpdOk() (*DocumentDTO, bool) {
	if o == nil || IsNil(o.Upd) {
		return nil, false
	}
	return o.Upd, true
}

// HasUpd returns a boolean if a field has been set.
func (o *OrderBusinessDocumentsDTO) HasUpd() bool {
	if o != nil && !IsNil(o.Upd) {
		return true
	}

	return false
}

// SetUpd gets a reference to the given DocumentDTO and assigns it to the Upd field.
func (o *OrderBusinessDocumentsDTO) SetUpd(v DocumentDTO) {
	o.Upd = &v
}

// GetUkd returns the Ukd field value if set, zero value otherwise.
func (o *OrderBusinessDocumentsDTO) GetUkd() DocumentDTO {
	if o == nil || IsNil(o.Ukd) {
		var ret DocumentDTO
		return ret
	}
	return *o.Ukd
}

// GetUkdOk returns a tuple with the Ukd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBusinessDocumentsDTO) GetUkdOk() (*DocumentDTO, bool) {
	if o == nil || IsNil(o.Ukd) {
		return nil, false
	}
	return o.Ukd, true
}

// HasUkd returns a boolean if a field has been set.
func (o *OrderBusinessDocumentsDTO) HasUkd() bool {
	if o != nil && !IsNil(o.Ukd) {
		return true
	}

	return false
}

// SetUkd gets a reference to the given DocumentDTO and assigns it to the Ukd field.
func (o *OrderBusinessDocumentsDTO) SetUkd(v DocumentDTO) {
	o.Ukd = &v
}

// GetTorgTwelve returns the TorgTwelve field value if set, zero value otherwise.
func (o *OrderBusinessDocumentsDTO) GetTorgTwelve() DocumentDTO {
	if o == nil || IsNil(o.TorgTwelve) {
		var ret DocumentDTO
		return ret
	}
	return *o.TorgTwelve
}

// GetTorgTwelveOk returns a tuple with the TorgTwelve field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBusinessDocumentsDTO) GetTorgTwelveOk() (*DocumentDTO, bool) {
	if o == nil || IsNil(o.TorgTwelve) {
		return nil, false
	}
	return o.TorgTwelve, true
}

// HasTorgTwelve returns a boolean if a field has been set.
func (o *OrderBusinessDocumentsDTO) HasTorgTwelve() bool {
	if o != nil && !IsNil(o.TorgTwelve) {
		return true
	}

	return false
}

// SetTorgTwelve gets a reference to the given DocumentDTO and assigns it to the TorgTwelve field.
func (o *OrderBusinessDocumentsDTO) SetTorgTwelve(v DocumentDTO) {
	o.TorgTwelve = &v
}

// GetSf returns the Sf field value if set, zero value otherwise.
func (o *OrderBusinessDocumentsDTO) GetSf() DocumentDTO {
	if o == nil || IsNil(o.Sf) {
		var ret DocumentDTO
		return ret
	}
	return *o.Sf
}

// GetSfOk returns a tuple with the Sf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBusinessDocumentsDTO) GetSfOk() (*DocumentDTO, bool) {
	if o == nil || IsNil(o.Sf) {
		return nil, false
	}
	return o.Sf, true
}

// HasSf returns a boolean if a field has been set.
func (o *OrderBusinessDocumentsDTO) HasSf() bool {
	if o != nil && !IsNil(o.Sf) {
		return true
	}

	return false
}

// SetSf gets a reference to the given DocumentDTO and assigns it to the Sf field.
func (o *OrderBusinessDocumentsDTO) SetSf(v DocumentDTO) {
	o.Sf = &v
}

// GetKsf returns the Ksf field value if set, zero value otherwise.
func (o *OrderBusinessDocumentsDTO) GetKsf() DocumentDTO {
	if o == nil || IsNil(o.Ksf) {
		var ret DocumentDTO
		return ret
	}
	return *o.Ksf
}

// GetKsfOk returns a tuple with the Ksf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OrderBusinessDocumentsDTO) GetKsfOk() (*DocumentDTO, bool) {
	if o == nil || IsNil(o.Ksf) {
		return nil, false
	}
	return o.Ksf, true
}

// HasKsf returns a boolean if a field has been set.
func (o *OrderBusinessDocumentsDTO) HasKsf() bool {
	if o != nil && !IsNil(o.Ksf) {
		return true
	}

	return false
}

// SetKsf gets a reference to the given DocumentDTO and assigns it to the Ksf field.
func (o *OrderBusinessDocumentsDTO) SetKsf(v DocumentDTO) {
	o.Ksf = &v
}

func (o OrderBusinessDocumentsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderBusinessDocumentsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Upd) {
		toSerialize["upd"] = o.Upd
	}
	if !IsNil(o.Ukd) {
		toSerialize["ukd"] = o.Ukd
	}
	if !IsNil(o.TorgTwelve) {
		toSerialize["torgTwelve"] = o.TorgTwelve
	}
	if !IsNil(o.Sf) {
		toSerialize["sf"] = o.Sf
	}
	if !IsNil(o.Ksf) {
		toSerialize["ksf"] = o.Ksf
	}
	return toSerialize, nil
}

type NullableOrderBusinessDocumentsDTO struct {
	value *OrderBusinessDocumentsDTO
	isSet bool
}

func (v NullableOrderBusinessDocumentsDTO) Get() *OrderBusinessDocumentsDTO {
	return v.value
}

func (v *NullableOrderBusinessDocumentsDTO) Set(val *OrderBusinessDocumentsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderBusinessDocumentsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderBusinessDocumentsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderBusinessDocumentsDTO(val *OrderBusinessDocumentsDTO) *NullableOrderBusinessDocumentsDTO {
	return &NullableOrderBusinessDocumentsDTO{value: val, isSet: true}
}

func (v NullableOrderBusinessDocumentsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderBusinessDocumentsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


