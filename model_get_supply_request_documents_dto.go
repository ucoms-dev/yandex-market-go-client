/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSupplyRequestDocumentsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSupplyRequestDocumentsDTO{}

// GetSupplyRequestDocumentsDTO Информация о документах по заявке.
type GetSupplyRequestDocumentsDTO struct {
	// Список документов.
	Documents []SupplyRequestDocumentDTO `json:"documents"`
}

type _GetSupplyRequestDocumentsDTO GetSupplyRequestDocumentsDTO

// NewGetSupplyRequestDocumentsDTO instantiates a new GetSupplyRequestDocumentsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSupplyRequestDocumentsDTO(documents []SupplyRequestDocumentDTO) *GetSupplyRequestDocumentsDTO {
	this := GetSupplyRequestDocumentsDTO{}
	this.Documents = documents
	return &this
}

// NewGetSupplyRequestDocumentsDTOWithDefaults instantiates a new GetSupplyRequestDocumentsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSupplyRequestDocumentsDTOWithDefaults() *GetSupplyRequestDocumentsDTO {
	this := GetSupplyRequestDocumentsDTO{}
	return &this
}

// GetDocuments returns the Documents field value
func (o *GetSupplyRequestDocumentsDTO) GetDocuments() []SupplyRequestDocumentDTO {
	if o == nil {
		var ret []SupplyRequestDocumentDTO
		return ret
	}

	return o.Documents
}

// GetDocumentsOk returns a tuple with the Documents field value
// and a boolean to check if the value has been set.
func (o *GetSupplyRequestDocumentsDTO) GetDocumentsOk() ([]SupplyRequestDocumentDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Documents, true
}

// SetDocuments sets field value
func (o *GetSupplyRequestDocumentsDTO) SetDocuments(v []SupplyRequestDocumentDTO) {
	o.Documents = v
}

func (o GetSupplyRequestDocumentsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSupplyRequestDocumentsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["documents"] = o.Documents
	return toSerialize, nil
}

func (o *GetSupplyRequestDocumentsDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"documents",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSupplyRequestDocumentsDTO := _GetSupplyRequestDocumentsDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSupplyRequestDocumentsDTO)

	if err != nil {
		return err
	}

	*o = GetSupplyRequestDocumentsDTO(varGetSupplyRequestDocumentsDTO)

	return err
}

type NullableGetSupplyRequestDocumentsDTO struct {
	value *GetSupplyRequestDocumentsDTO
	isSet bool
}

func (v NullableGetSupplyRequestDocumentsDTO) Get() *GetSupplyRequestDocumentsDTO {
	return v.value
}

func (v *NullableGetSupplyRequestDocumentsDTO) Set(val *GetSupplyRequestDocumentsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSupplyRequestDocumentsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSupplyRequestDocumentsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSupplyRequestDocumentsDTO(val *GetSupplyRequestDocumentsDTO) *NullableGetSupplyRequestDocumentsDTO {
	return &NullableGetSupplyRequestDocumentsDTO{value: val, isSet: true}
}

func (v NullableGetSupplyRequestDocumentsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSupplyRequestDocumentsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


