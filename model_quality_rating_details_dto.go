/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the QualityRatingDetailsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QualityRatingDetailsDTO{}

// QualityRatingDetailsDTO Информация о заказах, которые повлияли на индекс качества.
type QualityRatingDetailsDTO struct {
	// Список заказов, которые повлияли на индекс качества.
	AffectedOrders []QualityRatingAffectedOrderDTO `json:"affectedOrders"`
}

type _QualityRatingDetailsDTO QualityRatingDetailsDTO

// NewQualityRatingDetailsDTO instantiates a new QualityRatingDetailsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQualityRatingDetailsDTO(affectedOrders []QualityRatingAffectedOrderDTO) *QualityRatingDetailsDTO {
	this := QualityRatingDetailsDTO{}
	this.AffectedOrders = affectedOrders
	return &this
}

// NewQualityRatingDetailsDTOWithDefaults instantiates a new QualityRatingDetailsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQualityRatingDetailsDTOWithDefaults() *QualityRatingDetailsDTO {
	this := QualityRatingDetailsDTO{}
	return &this
}

// GetAffectedOrders returns the AffectedOrders field value
func (o *QualityRatingDetailsDTO) GetAffectedOrders() []QualityRatingAffectedOrderDTO {
	if o == nil {
		var ret []QualityRatingAffectedOrderDTO
		return ret
	}

	return o.AffectedOrders
}

// GetAffectedOrdersOk returns a tuple with the AffectedOrders field value
// and a boolean to check if the value has been set.
func (o *QualityRatingDetailsDTO) GetAffectedOrdersOk() ([]QualityRatingAffectedOrderDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.AffectedOrders, true
}

// SetAffectedOrders sets field value
func (o *QualityRatingDetailsDTO) SetAffectedOrders(v []QualityRatingAffectedOrderDTO) {
	o.AffectedOrders = v
}

func (o QualityRatingDetailsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QualityRatingDetailsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["affectedOrders"] = o.AffectedOrders
	return toSerialize, nil
}

func (o *QualityRatingDetailsDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"affectedOrders",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varQualityRatingDetailsDTO := _QualityRatingDetailsDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varQualityRatingDetailsDTO)

	if err != nil {
		return err
	}

	*o = QualityRatingDetailsDTO(varQualityRatingDetailsDTO)

	return err
}

type NullableQualityRatingDetailsDTO struct {
	value *QualityRatingDetailsDTO
	isSet bool
}

func (v NullableQualityRatingDetailsDTO) Get() *QualityRatingDetailsDTO {
	return v.value
}

func (v *NullableQualityRatingDetailsDTO) Set(val *QualityRatingDetailsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableQualityRatingDetailsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableQualityRatingDetailsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQualityRatingDetailsDTO(val *QualityRatingDetailsDTO) *NullableQualityRatingDetailsDTO {
	return &NullableQualityRatingDetailsDTO{value: val, isSet: true}
}

func (v NullableQualityRatingDetailsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQualityRatingDetailsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


