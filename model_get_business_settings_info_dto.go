/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetBusinessSettingsInfoDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBusinessSettingsInfoDTO{}

// GetBusinessSettingsInfoDTO Информация о кабинете и его настройках.
type GetBusinessSettingsInfoDTO struct {
	Info *BusinessDTO `json:"info,omitempty"`
	Settings *BusinessSettingsDTO `json:"settings,omitempty"`
}

// NewGetBusinessSettingsInfoDTO instantiates a new GetBusinessSettingsInfoDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBusinessSettingsInfoDTO() *GetBusinessSettingsInfoDTO {
	this := GetBusinessSettingsInfoDTO{}
	return &this
}

// NewGetBusinessSettingsInfoDTOWithDefaults instantiates a new GetBusinessSettingsInfoDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBusinessSettingsInfoDTOWithDefaults() *GetBusinessSettingsInfoDTO {
	this := GetBusinessSettingsInfoDTO{}
	return &this
}

// GetInfo returns the Info field value if set, zero value otherwise.
func (o *GetBusinessSettingsInfoDTO) GetInfo() BusinessDTO {
	if o == nil || IsNil(o.Info) {
		var ret BusinessDTO
		return ret
	}
	return *o.Info
}

// GetInfoOk returns a tuple with the Info field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBusinessSettingsInfoDTO) GetInfoOk() (*BusinessDTO, bool) {
	if o == nil || IsNil(o.Info) {
		return nil, false
	}
	return o.Info, true
}

// HasInfo returns a boolean if a field has been set.
func (o *GetBusinessSettingsInfoDTO) HasInfo() bool {
	if o != nil && !IsNil(o.Info) {
		return true
	}

	return false
}

// SetInfo gets a reference to the given BusinessDTO and assigns it to the Info field.
func (o *GetBusinessSettingsInfoDTO) SetInfo(v BusinessDTO) {
	o.Info = &v
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *GetBusinessSettingsInfoDTO) GetSettings() BusinessSettingsDTO {
	if o == nil || IsNil(o.Settings) {
		var ret BusinessSettingsDTO
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBusinessSettingsInfoDTO) GetSettingsOk() (*BusinessSettingsDTO, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *GetBusinessSettingsInfoDTO) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given BusinessSettingsDTO and assigns it to the Settings field.
func (o *GetBusinessSettingsInfoDTO) SetSettings(v BusinessSettingsDTO) {
	o.Settings = &v
}

func (o GetBusinessSettingsInfoDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBusinessSettingsInfoDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Info) {
		toSerialize["info"] = o.Info
	}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableGetBusinessSettingsInfoDTO struct {
	value *GetBusinessSettingsInfoDTO
	isSet bool
}

func (v NullableGetBusinessSettingsInfoDTO) Get() *GetBusinessSettingsInfoDTO {
	return v.value
}

func (v *NullableGetBusinessSettingsInfoDTO) Set(val *GetBusinessSettingsInfoDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBusinessSettingsInfoDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBusinessSettingsInfoDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBusinessSettingsInfoDTO(val *GetBusinessSettingsInfoDTO) *NullableGetBusinessSettingsInfoDTO {
	return &NullableGetBusinessSettingsInfoDTO{value: val, isSet: true}
}

func (v NullableGetBusinessSettingsInfoDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBusinessSettingsInfoDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


