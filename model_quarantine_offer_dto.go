/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the QuarantineOfferDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuarantineOfferDTO{}

// QuarantineOfferDTO Товар в карантине.
type QuarantineOfferDTO struct {
	// Ваш SKU — идентификатор товара в вашей системе.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
	OfferId *string `json:"offerId,omitempty" validate:"regexp=^(?=.*\\\\S.*)[^\\\\x00-\\\\x08\\\\x0A-\\\\x1f\\\\x7f]{1,255}$"`
	CurrentPrice *BasePriceDTO `json:"currentPrice,omitempty"`
	LastValidPrice *BasePriceDTO `json:"lastValidPrice,omitempty"`
	// Причины попадания товара в карантин.
	Verdicts []PriceQuarantineVerdictDTO `json:"verdicts,omitempty"`
}

// NewQuarantineOfferDTO instantiates a new QuarantineOfferDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuarantineOfferDTO() *QuarantineOfferDTO {
	this := QuarantineOfferDTO{}
	return &this
}

// NewQuarantineOfferDTOWithDefaults instantiates a new QuarantineOfferDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuarantineOfferDTOWithDefaults() *QuarantineOfferDTO {
	this := QuarantineOfferDTO{}
	return &this
}

// GetOfferId returns the OfferId field value if set, zero value otherwise.
func (o *QuarantineOfferDTO) GetOfferId() string {
	if o == nil || IsNil(o.OfferId) {
		var ret string
		return ret
	}
	return *o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuarantineOfferDTO) GetOfferIdOk() (*string, bool) {
	if o == nil || IsNil(o.OfferId) {
		return nil, false
	}
	return o.OfferId, true
}

// HasOfferId returns a boolean if a field has been set.
func (o *QuarantineOfferDTO) HasOfferId() bool {
	if o != nil && !IsNil(o.OfferId) {
		return true
	}

	return false
}

// SetOfferId gets a reference to the given string and assigns it to the OfferId field.
func (o *QuarantineOfferDTO) SetOfferId(v string) {
	o.OfferId = &v
}

// GetCurrentPrice returns the CurrentPrice field value if set, zero value otherwise.
func (o *QuarantineOfferDTO) GetCurrentPrice() BasePriceDTO {
	if o == nil || IsNil(o.CurrentPrice) {
		var ret BasePriceDTO
		return ret
	}
	return *o.CurrentPrice
}

// GetCurrentPriceOk returns a tuple with the CurrentPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuarantineOfferDTO) GetCurrentPriceOk() (*BasePriceDTO, bool) {
	if o == nil || IsNil(o.CurrentPrice) {
		return nil, false
	}
	return o.CurrentPrice, true
}

// HasCurrentPrice returns a boolean if a field has been set.
func (o *QuarantineOfferDTO) HasCurrentPrice() bool {
	if o != nil && !IsNil(o.CurrentPrice) {
		return true
	}

	return false
}

// SetCurrentPrice gets a reference to the given BasePriceDTO and assigns it to the CurrentPrice field.
func (o *QuarantineOfferDTO) SetCurrentPrice(v BasePriceDTO) {
	o.CurrentPrice = &v
}

// GetLastValidPrice returns the LastValidPrice field value if set, zero value otherwise.
func (o *QuarantineOfferDTO) GetLastValidPrice() BasePriceDTO {
	if o == nil || IsNil(o.LastValidPrice) {
		var ret BasePriceDTO
		return ret
	}
	return *o.LastValidPrice
}

// GetLastValidPriceOk returns a tuple with the LastValidPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuarantineOfferDTO) GetLastValidPriceOk() (*BasePriceDTO, bool) {
	if o == nil || IsNil(o.LastValidPrice) {
		return nil, false
	}
	return o.LastValidPrice, true
}

// HasLastValidPrice returns a boolean if a field has been set.
func (o *QuarantineOfferDTO) HasLastValidPrice() bool {
	if o != nil && !IsNil(o.LastValidPrice) {
		return true
	}

	return false
}

// SetLastValidPrice gets a reference to the given BasePriceDTO and assigns it to the LastValidPrice field.
func (o *QuarantineOfferDTO) SetLastValidPrice(v BasePriceDTO) {
	o.LastValidPrice = &v
}

// GetVerdicts returns the Verdicts field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *QuarantineOfferDTO) GetVerdicts() []PriceQuarantineVerdictDTO {
	if o == nil {
		var ret []PriceQuarantineVerdictDTO
		return ret
	}
	return o.Verdicts
}

// GetVerdictsOk returns a tuple with the Verdicts field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *QuarantineOfferDTO) GetVerdictsOk() ([]PriceQuarantineVerdictDTO, bool) {
	if o == nil || IsNil(o.Verdicts) {
		return nil, false
	}
	return o.Verdicts, true
}

// HasVerdicts returns a boolean if a field has been set.
func (o *QuarantineOfferDTO) HasVerdicts() bool {
	if o != nil && !IsNil(o.Verdicts) {
		return true
	}

	return false
}

// SetVerdicts gets a reference to the given []PriceQuarantineVerdictDTO and assigns it to the Verdicts field.
func (o *QuarantineOfferDTO) SetVerdicts(v []PriceQuarantineVerdictDTO) {
	o.Verdicts = v
}

func (o QuarantineOfferDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuarantineOfferDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.OfferId) {
		toSerialize["offerId"] = o.OfferId
	}
	if !IsNil(o.CurrentPrice) {
		toSerialize["currentPrice"] = o.CurrentPrice
	}
	if !IsNil(o.LastValidPrice) {
		toSerialize["lastValidPrice"] = o.LastValidPrice
	}
	if o.Verdicts != nil {
		toSerialize["verdicts"] = o.Verdicts
	}
	return toSerialize, nil
}

type NullableQuarantineOfferDTO struct {
	value *QuarantineOfferDTO
	isSet bool
}

func (v NullableQuarantineOfferDTO) Get() *QuarantineOfferDTO {
	return v.value
}

func (v *NullableQuarantineOfferDTO) Set(val *QuarantineOfferDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableQuarantineOfferDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableQuarantineOfferDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuarantineOfferDTO(val *QuarantineOfferDTO) *NullableQuarantineOfferDTO {
	return &NullableQuarantineOfferDTO{value: val, isSet: true}
}

func (v NullableQuarantineOfferDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuarantineOfferDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


