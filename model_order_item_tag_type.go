/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrderItemTagType Признак товара:  * `ULTIMA` — премиум-товар. * `SAFE_TAG` — товар с [защитной меткой](*safe-tag). * `TURBO` — товар, который быстро раскупают.
type OrderItemTagType string

// List of OrderItemTagType
const (
	ULTIMA   OrderItemTagType = "ULTIMA"
	SAFE_TAG OrderItemTagType = "SAFE_TAG"
	TURBO    OrderItemTagType = "TURBO"
)

// All allowed values of OrderItemTagType enum
var AllowedOrderItemTagTypeEnumValues = []OrderItemTagType{
	"ULTIMA",
	"SAFE_TAG",
	"TURBO",
}

func (v *OrderItemTagType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderItemTagType(value)
	for _, existing := range AllowedOrderItemTagTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderItemTagType", value)
}

// NewOrderItemTagTypeFromValue returns a pointer to a valid OrderItemTagType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderItemTagTypeFromValue(v string) (*OrderItemTagType, error) {
	ev := OrderItemTagType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderItemTagType: valid values are %v", v, AllowedOrderItemTagTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderItemTagType) IsValid() bool {
	for _, existing := range AllowedOrderItemTagTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderItemTagType value
func (v OrderItemTagType) Ptr() *OrderItemTagType {
	return &v
}

type NullableOrderItemTagType struct {
	value *OrderItemTagType
	isSet bool
}

func (v NullableOrderItemTagType) Get() *OrderItemTagType {
	return v.value
}

func (v *NullableOrderItemTagType) Set(val *OrderItemTagType) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderItemTagType) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderItemTagType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderItemTagType(val *OrderItemTagType) *NullableOrderItemTagType {
	return &NullableOrderItemTagType{value: val, isSet: true}
}

func (v NullableOrderItemTagType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderItemTagType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
