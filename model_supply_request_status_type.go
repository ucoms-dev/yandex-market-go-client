/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SupplyRequestStatusType Статус заявки на поставку:  * `CREATED` — создан черновик заявки. * `FINISHED` — заявка завершена, товары:   * приняты на складе;   * переданы на другой склад при перемещении;   * переданы продавцу при вывозе;   * утилизированы. * `CANCELLED` — заявка отменена. * `INVALID` — ошибка обработки. * `VALIDATED` — заявка в обработке. * `PUBLISHED` — создана заявка. * `ARRIVED_TO_SERVICE` — поставка прибыла на склад хранения. * `ARRIVED_TO_XDOC_SERVICE` — поставка прибыла на транзитный склад. * `SHIPPED_TO_SERVICE` — поставка отправлена с транзитного склада на склад хранения. * `CANCELLATION_REQUESTED` — запрошена отмена заявки. * `CANCELLATION_REJECTED` — заявка не будет отменена. * `REGISTERED_IN_ELECTRONIC_QUEUE` — поставка зарегистрирована в электронной очереди. * `READY_FOR_UTILIZATION` — товары готовы к утилизации. * `TRANSIT_MOVING` — перемещение товаров на склад вывоза. * `WAREHOUSE_HANDLING` — вторичная приемка товаров или их сборка для вывоза или утилизации. * `ACCEPTED_BY_WAREHOUSE_SYSTEM` — информация о заявке направлена на склад. * `READY_TO_WITHDRAW` — товары готовы к выдаче.
type SupplyRequestStatusType string

// List of SupplyRequestStatusType
const (
	SupplyRequestStatusType_CREATED                        SupplyRequestStatusType = "CREATED"
	SupplyRequestStatusType_FINISHED                       SupplyRequestStatusType = "FINISHED"
	SupplyRequestStatusType_CANCELLED                      SupplyRequestStatusType = "CANCELLED"
	SupplyRequestStatusType_INVALID                        SupplyRequestStatusType = "INVALID"
	SupplyRequestStatusType_VALIDATED                      SupplyRequestStatusType = "VALIDATED"
	SupplyRequestStatusType_PUBLISHED                      SupplyRequestStatusType = "PUBLISHED"
	SupplyRequestStatusType_ARRIVED_TO_SERVICE             SupplyRequestStatusType = "ARRIVED_TO_SERVICE"
	SupplyRequestStatusType_ARRIVED_TO_XDOC_SERVICE        SupplyRequestStatusType = "ARRIVED_TO_XDOC_SERVICE"
	SupplyRequestStatusType_SHIPPED_TO_SERVICE             SupplyRequestStatusType = "SHIPPED_TO_SERVICE"
	SupplyRequestStatusType_CANCELLATION_REQUESTED         SupplyRequestStatusType = "CANCELLATION_REQUESTED"
	SupplyRequestStatusType_CANCELLATION_REJECTED          SupplyRequestStatusType = "CANCELLATION_REJECTED"
	SupplyRequestStatusType_REGISTERED_IN_ELECTRONIC_QUEUE SupplyRequestStatusType = "REGISTERED_IN_ELECTRONIC_QUEUE"
	SupplyRequestStatusType_READY_FOR_UTILIZATION          SupplyRequestStatusType = "READY_FOR_UTILIZATION"
	SupplyRequestStatusType_TRANSIT_MOVING                 SupplyRequestStatusType = "TRANSIT_MOVING"
	SupplyRequestStatusType_WAREHOUSE_HANDLING             SupplyRequestStatusType = "WAREHOUSE_HANDLING"
	SupplyRequestStatusType_ACCEPTED_BY_WAREHOUSE_SYSTEM   SupplyRequestStatusType = "ACCEPTED_BY_WAREHOUSE_SYSTEM"
	SupplyRequestStatusType_READY_TO_WITHDRAW              SupplyRequestStatusType = "READY_TO_WITHDRAW"
)

// All allowed values of SupplyRequestStatusType enum
var AllowedSupplyRequestStatusTypeEnumValues = []SupplyRequestStatusType{
	"CREATED",
	"FINISHED",
	"CANCELLED",
	"INVALID",
	"VALIDATED",
	"PUBLISHED",
	"ARRIVED_TO_SERVICE",
	"ARRIVED_TO_XDOC_SERVICE",
	"SHIPPED_TO_SERVICE",
	"CANCELLATION_REQUESTED",
	"CANCELLATION_REJECTED",
	"REGISTERED_IN_ELECTRONIC_QUEUE",
	"READY_FOR_UTILIZATION",
	"TRANSIT_MOVING",
	"WAREHOUSE_HANDLING",
	"ACCEPTED_BY_WAREHOUSE_SYSTEM",
	"READY_TO_WITHDRAW",
}

func (v *SupplyRequestStatusType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SupplyRequestStatusType(value)
	for _, existing := range AllowedSupplyRequestStatusTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SupplyRequestStatusType", value)
}

// NewSupplyRequestStatusTypeFromValue returns a pointer to a valid SupplyRequestStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSupplyRequestStatusTypeFromValue(v string) (*SupplyRequestStatusType, error) {
	ev := SupplyRequestStatusType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SupplyRequestStatusType: valid values are %v", v, AllowedSupplyRequestStatusTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SupplyRequestStatusType) IsValid() bool {
	for _, existing := range AllowedSupplyRequestStatusTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SupplyRequestStatusType value
func (v SupplyRequestStatusType) Ptr() *SupplyRequestStatusType {
	return &v
}

type NullableSupplyRequestStatusType struct {
	value *SupplyRequestStatusType
	isSet bool
}

func (v NullableSupplyRequestStatusType) Get() *SupplyRequestStatusType {
	return v.value
}

func (v *NullableSupplyRequestStatusType) Set(val *SupplyRequestStatusType) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplyRequestStatusType) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplyRequestStatusType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplyRequestStatusType(val *SupplyRequestStatusType) *NullableSupplyRequestStatusType {
	return &NullableSupplyRequestStatusType{value: val, isSet: true}
}

func (v NullableSupplyRequestStatusType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplyRequestStatusType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
