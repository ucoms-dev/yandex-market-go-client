/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the EnrichedOrderBoxLayoutDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnrichedOrderBoxLayoutDTO{}

// EnrichedOrderBoxLayoutDTO Информация о коробке.
type EnrichedOrderBoxLayoutDTO struct {
	// Список товаров в коробке.  Если в коробке едет часть большого товара, в списке может быть только один пункт. 
	Items []OrderBoxLayoutItemDTO `json:"items"`
	// Идентификатор коробки.
	BoxId *int64 `json:"boxId,omitempty"`
}

type _EnrichedOrderBoxLayoutDTO EnrichedOrderBoxLayoutDTO

// NewEnrichedOrderBoxLayoutDTO instantiates a new EnrichedOrderBoxLayoutDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnrichedOrderBoxLayoutDTO(items []OrderBoxLayoutItemDTO) *EnrichedOrderBoxLayoutDTO {
	this := EnrichedOrderBoxLayoutDTO{}
	this.Items = items
	return &this
}

// NewEnrichedOrderBoxLayoutDTOWithDefaults instantiates a new EnrichedOrderBoxLayoutDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnrichedOrderBoxLayoutDTOWithDefaults() *EnrichedOrderBoxLayoutDTO {
	this := EnrichedOrderBoxLayoutDTO{}
	return &this
}

// GetItems returns the Items field value
func (o *EnrichedOrderBoxLayoutDTO) GetItems() []OrderBoxLayoutItemDTO {
	if o == nil {
		var ret []OrderBoxLayoutItemDTO
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *EnrichedOrderBoxLayoutDTO) GetItemsOk() ([]OrderBoxLayoutItemDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *EnrichedOrderBoxLayoutDTO) SetItems(v []OrderBoxLayoutItemDTO) {
	o.Items = v
}

// GetBoxId returns the BoxId field value if set, zero value otherwise.
func (o *EnrichedOrderBoxLayoutDTO) GetBoxId() int64 {
	if o == nil || IsNil(o.BoxId) {
		var ret int64
		return ret
	}
	return *o.BoxId
}

// GetBoxIdOk returns a tuple with the BoxId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnrichedOrderBoxLayoutDTO) GetBoxIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BoxId) {
		return nil, false
	}
	return o.BoxId, true
}

// HasBoxId returns a boolean if a field has been set.
func (o *EnrichedOrderBoxLayoutDTO) HasBoxId() bool {
	if o != nil && !IsNil(o.BoxId) {
		return true
	}

	return false
}

// SetBoxId gets a reference to the given int64 and assigns it to the BoxId field.
func (o *EnrichedOrderBoxLayoutDTO) SetBoxId(v int64) {
	o.BoxId = &v
}

func (o EnrichedOrderBoxLayoutDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnrichedOrderBoxLayoutDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	if !IsNil(o.BoxId) {
		toSerialize["boxId"] = o.BoxId
	}
	return toSerialize, nil
}

func (o *EnrichedOrderBoxLayoutDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varEnrichedOrderBoxLayoutDTO := _EnrichedOrderBoxLayoutDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varEnrichedOrderBoxLayoutDTO)

	if err != nil {
		return err
	}

	*o = EnrichedOrderBoxLayoutDTO(varEnrichedOrderBoxLayoutDTO)

	return err
}

type NullableEnrichedOrderBoxLayoutDTO struct {
	value *EnrichedOrderBoxLayoutDTO
	isSet bool
}

func (v NullableEnrichedOrderBoxLayoutDTO) Get() *EnrichedOrderBoxLayoutDTO {
	return v.value
}

func (v *NullableEnrichedOrderBoxLayoutDTO) Set(val *EnrichedOrderBoxLayoutDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableEnrichedOrderBoxLayoutDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableEnrichedOrderBoxLayoutDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnrichedOrderBoxLayoutDTO(val *EnrichedOrderBoxLayoutDTO) *NullableEnrichedOrderBoxLayoutDTO {
	return &NullableEnrichedOrderBoxLayoutDTO{value: val, isSet: true}
}

func (v NullableEnrichedOrderBoxLayoutDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnrichedOrderBoxLayoutDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


