/*
Партнерский API Маркета

Testing PriceQuarantineAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package openapi

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/GIT_USER_ID/GIT_REPO_ID"
)

func Test_openapi_PriceQuarantineAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test PriceQuarantineAPIService ConfirmBusinessPrices", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId int64

		resp, httpRes, err := apiClient.PriceQuarantineAPI.ConfirmBusinessPrices(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PriceQuarantineAPIService ConfirmCampaignPrices", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId int64

		resp, httpRes, err := apiClient.PriceQuarantineAPI.ConfirmCampaignPrices(context.Background(), campaignId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PriceQuarantineAPIService GetBusinessQuarantineOffers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var businessId int64

		resp, httpRes, err := apiClient.PriceQuarantineAPI.GetBusinessQuarantineOffers(context.Background(), businessId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test PriceQuarantineAPIService GetCampaignQuarantineOffers", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var campaignId int64

		resp, httpRes, err := apiClient.PriceQuarantineAPI.GetCampaignQuarantineOffers(context.Background(), campaignId).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
