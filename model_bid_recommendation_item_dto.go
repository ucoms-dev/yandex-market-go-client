/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BidRecommendationItemDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BidRecommendationItemDTO{}

// BidRecommendationItemDTO Рекомендованная ставка, возможная доля показов и доступные дополнительные инструменты продвижения.
type BidRecommendationItemDTO struct {
	// Значение ставки.
	Bid int32 `json:"bid"`
	// Доля показов. 
	ShowPercent int64 `json:"showPercent"`
	// Список доступных субсидий.  Чтобы получить необходимый инструмент продвижения, установите ставку, которая будет рекомендована для этого инструмента или выше. 
	Benefits []BenefitType `json:"benefits,omitempty"`
}

type _BidRecommendationItemDTO BidRecommendationItemDTO

// NewBidRecommendationItemDTO instantiates a new BidRecommendationItemDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBidRecommendationItemDTO(bid int32, showPercent int64) *BidRecommendationItemDTO {
	this := BidRecommendationItemDTO{}
	this.Bid = bid
	this.ShowPercent = showPercent
	return &this
}

// NewBidRecommendationItemDTOWithDefaults instantiates a new BidRecommendationItemDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBidRecommendationItemDTOWithDefaults() *BidRecommendationItemDTO {
	this := BidRecommendationItemDTO{}
	return &this
}

// GetBid returns the Bid field value
func (o *BidRecommendationItemDTO) GetBid() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Bid
}

// GetBidOk returns a tuple with the Bid field value
// and a boolean to check if the value has been set.
func (o *BidRecommendationItemDTO) GetBidOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bid, true
}

// SetBid sets field value
func (o *BidRecommendationItemDTO) SetBid(v int32) {
	o.Bid = v
}

// GetShowPercent returns the ShowPercent field value
func (o *BidRecommendationItemDTO) GetShowPercent() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShowPercent
}

// GetShowPercentOk returns a tuple with the ShowPercent field value
// and a boolean to check if the value has been set.
func (o *BidRecommendationItemDTO) GetShowPercentOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShowPercent, true
}

// SetShowPercent sets field value
func (o *BidRecommendationItemDTO) SetShowPercent(v int64) {
	o.ShowPercent = v
}

// GetBenefits returns the Benefits field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BidRecommendationItemDTO) GetBenefits() []BenefitType {
	if o == nil {
		var ret []BenefitType
		return ret
	}
	return o.Benefits
}

// GetBenefitsOk returns a tuple with the Benefits field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BidRecommendationItemDTO) GetBenefitsOk() ([]BenefitType, bool) {
	if o == nil || IsNil(o.Benefits) {
		return nil, false
	}
	return o.Benefits, true
}

// HasBenefits returns a boolean if a field has been set.
func (o *BidRecommendationItemDTO) HasBenefits() bool {
	if o != nil && !IsNil(o.Benefits) {
		return true
	}

	return false
}

// SetBenefits gets a reference to the given []BenefitType and assigns it to the Benefits field.
func (o *BidRecommendationItemDTO) SetBenefits(v []BenefitType) {
	o.Benefits = v
}

func (o BidRecommendationItemDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BidRecommendationItemDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bid"] = o.Bid
	toSerialize["showPercent"] = o.ShowPercent
	if o.Benefits != nil {
		toSerialize["benefits"] = o.Benefits
	}
	return toSerialize, nil
}

func (o *BidRecommendationItemDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bid",
		"showPercent",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBidRecommendationItemDTO := _BidRecommendationItemDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBidRecommendationItemDTO)

	if err != nil {
		return err
	}

	*o = BidRecommendationItemDTO(varBidRecommendationItemDTO)

	return err
}

type NullableBidRecommendationItemDTO struct {
	value *BidRecommendationItemDTO
	isSet bool
}

func (v NullableBidRecommendationItemDTO) Get() *BidRecommendationItemDTO {
	return v.value
}

func (v *NullableBidRecommendationItemDTO) Set(val *BidRecommendationItemDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableBidRecommendationItemDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableBidRecommendationItemDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBidRecommendationItemDTO(val *BidRecommendationItemDTO) *NullableBidRecommendationItemDTO {
	return &NullableBidRecommendationItemDTO{value: val, isSet: true}
}

func (v NullableBidRecommendationItemDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBidRecommendationItemDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


