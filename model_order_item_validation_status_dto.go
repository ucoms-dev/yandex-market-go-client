/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OrderItemValidationStatusDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderItemValidationStatusDTO{}

// OrderItemValidationStatusDTO Идентификатор товара и статус проверки его УИНа.
type OrderItemValidationStatusDTO struct {
	// Идентификатор товара в заказе.
	Id int64 `json:"id"`
	// Статусы проверки УИНов.
	Uin []UinDTO `json:"uin"`
}

type _OrderItemValidationStatusDTO OrderItemValidationStatusDTO

// NewOrderItemValidationStatusDTO instantiates a new OrderItemValidationStatusDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderItemValidationStatusDTO(id int64, uin []UinDTO) *OrderItemValidationStatusDTO {
	this := OrderItemValidationStatusDTO{}
	this.Id = id
	this.Uin = uin
	return &this
}

// NewOrderItemValidationStatusDTOWithDefaults instantiates a new OrderItemValidationStatusDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderItemValidationStatusDTOWithDefaults() *OrderItemValidationStatusDTO {
	this := OrderItemValidationStatusDTO{}
	return &this
}

// GetId returns the Id field value
func (o *OrderItemValidationStatusDTO) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *OrderItemValidationStatusDTO) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *OrderItemValidationStatusDTO) SetId(v int64) {
	o.Id = v
}

// GetUin returns the Uin field value
func (o *OrderItemValidationStatusDTO) GetUin() []UinDTO {
	if o == nil {
		var ret []UinDTO
		return ret
	}

	return o.Uin
}

// GetUinOk returns a tuple with the Uin field value
// and a boolean to check if the value has been set.
func (o *OrderItemValidationStatusDTO) GetUinOk() ([]UinDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Uin, true
}

// SetUin sets field value
func (o *OrderItemValidationStatusDTO) SetUin(v []UinDTO) {
	o.Uin = v
}

func (o OrderItemValidationStatusDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderItemValidationStatusDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["uin"] = o.Uin
	return toSerialize, nil
}

func (o *OrderItemValidationStatusDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"uin",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderItemValidationStatusDTO := _OrderItemValidationStatusDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varOrderItemValidationStatusDTO)

	if err != nil {
		return err
	}

	*o = OrderItemValidationStatusDTO(varOrderItemValidationStatusDTO)

	return err
}

type NullableOrderItemValidationStatusDTO struct {
	value *OrderItemValidationStatusDTO
	isSet bool
}

func (v NullableOrderItemValidationStatusDTO) Get() *OrderItemValidationStatusDTO {
	return v.value
}

func (v *NullableOrderItemValidationStatusDTO) Set(val *OrderItemValidationStatusDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderItemValidationStatusDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderItemValidationStatusDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderItemValidationStatusDTO(val *OrderItemValidationStatusDTO) *NullableOrderItemValidationStatusDTO {
	return &NullableOrderItemValidationStatusDTO{value: val, isSet: true}
}

func (v NullableOrderItemValidationStatusDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderItemValidationStatusDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
