/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ParcelBoxDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParcelBoxDTO{}

// ParcelBoxDTO Параметр отображает одно грузовое место.
type ParcelBoxDTO struct {
	// Идентификатор коробки в составе заказа.
	Id *int64 `json:"id,omitempty"`
	// {% note warning \"Не используйте этот параметр.\" %}     {% endnote %} 
	// Deprecated
	FulfilmentId *string `json:"fulfilmentId,omitempty" validate:"regexp=^[\\\\p{Alnum}- ]*$"`
}

// NewParcelBoxDTO instantiates a new ParcelBoxDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParcelBoxDTO() *ParcelBoxDTO {
	this := ParcelBoxDTO{}
	return &this
}

// NewParcelBoxDTOWithDefaults instantiates a new ParcelBoxDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParcelBoxDTOWithDefaults() *ParcelBoxDTO {
	this := ParcelBoxDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ParcelBoxDTO) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParcelBoxDTO) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ParcelBoxDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *ParcelBoxDTO) SetId(v int64) {
	o.Id = &v
}

// GetFulfilmentId returns the FulfilmentId field value if set, zero value otherwise.
// Deprecated
func (o *ParcelBoxDTO) GetFulfilmentId() string {
	if o == nil || IsNil(o.FulfilmentId) {
		var ret string
		return ret
	}
	return *o.FulfilmentId
}

// GetFulfilmentIdOk returns a tuple with the FulfilmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *ParcelBoxDTO) GetFulfilmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.FulfilmentId) {
		return nil, false
	}
	return o.FulfilmentId, true
}

// HasFulfilmentId returns a boolean if a field has been set.
func (o *ParcelBoxDTO) HasFulfilmentId() bool {
	if o != nil && !IsNil(o.FulfilmentId) {
		return true
	}

	return false
}

// SetFulfilmentId gets a reference to the given string and assigns it to the FulfilmentId field.
// Deprecated
func (o *ParcelBoxDTO) SetFulfilmentId(v string) {
	o.FulfilmentId = &v
}

func (o ParcelBoxDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParcelBoxDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.FulfilmentId) {
		toSerialize["fulfilmentId"] = o.FulfilmentId
	}
	return toSerialize, nil
}

type NullableParcelBoxDTO struct {
	value *ParcelBoxDTO
	isSet bool
}

func (v NullableParcelBoxDTO) Get() *ParcelBoxDTO {
	return v.value
}

func (v *NullableParcelBoxDTO) Set(val *ParcelBoxDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParcelBoxDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParcelBoxDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParcelBoxDTO(val *ParcelBoxDTO) *NullableParcelBoxDTO {
	return &NullableParcelBoxDTO{value: val, isSet: true}
}

func (v NullableParcelBoxDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParcelBoxDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


