/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrderDocumentStatusType Статус документа:  * `READY` — готов. * `NOT_READY` — не готов. 
type OrderDocumentStatusType string

// List of OrderDocumentStatusType
const (
	READY OrderDocumentStatusType = "READY"
	NOT_READY OrderDocumentStatusType = "NOT_READY"
)

// All allowed values of OrderDocumentStatusType enum
var AllowedOrderDocumentStatusTypeEnumValues = []OrderDocumentStatusType{
	"READY",
	"NOT_READY",
}

func (v *OrderDocumentStatusType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderDocumentStatusType(value)
	for _, existing := range AllowedOrderDocumentStatusTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderDocumentStatusType", value)
}

// NewOrderDocumentStatusTypeFromValue returns a pointer to a valid OrderDocumentStatusType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderDocumentStatusTypeFromValue(v string) (*OrderDocumentStatusType, error) {
	ev := OrderDocumentStatusType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderDocumentStatusType: valid values are %v", v, AllowedOrderDocumentStatusTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderDocumentStatusType) IsValid() bool {
	for _, existing := range AllowedOrderDocumentStatusTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderDocumentStatusType value
func (v OrderDocumentStatusType) Ptr() *OrderDocumentStatusType {
	return &v
}

type NullableOrderDocumentStatusType struct {
	value *OrderDocumentStatusType
	isSet bool
}

func (v NullableOrderDocumentStatusType) Get() *OrderDocumentStatusType {
	return v.value
}

func (v *NullableOrderDocumentStatusType) Set(val *OrderDocumentStatusType) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderDocumentStatusType) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderDocumentStatusType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderDocumentStatusType(val *OrderDocumentStatusType) *NullableOrderDocumentStatusType {
	return &NullableOrderDocumentStatusType{value: val, isSet: true}
}

func (v NullableOrderDocumentStatusType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderDocumentStatusType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

