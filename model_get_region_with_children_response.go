/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetRegionWithChildrenResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetRegionWithChildrenResponse{}

// GetRegionWithChildrenResponse struct for GetRegionWithChildrenResponse
type GetRegionWithChildrenResponse struct {
	Pager *FlippingPagerDTO `json:"pager,omitempty"`
	Regions *RegionDTO `json:"regions,omitempty"`
}

// NewGetRegionWithChildrenResponse instantiates a new GetRegionWithChildrenResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetRegionWithChildrenResponse() *GetRegionWithChildrenResponse {
	this := GetRegionWithChildrenResponse{}
	return &this
}

// NewGetRegionWithChildrenResponseWithDefaults instantiates a new GetRegionWithChildrenResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetRegionWithChildrenResponseWithDefaults() *GetRegionWithChildrenResponse {
	this := GetRegionWithChildrenResponse{}
	return &this
}

// GetPager returns the Pager field value if set, zero value otherwise.
func (o *GetRegionWithChildrenResponse) GetPager() FlippingPagerDTO {
	if o == nil || IsNil(o.Pager) {
		var ret FlippingPagerDTO
		return ret
	}
	return *o.Pager
}

// GetPagerOk returns a tuple with the Pager field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionWithChildrenResponse) GetPagerOk() (*FlippingPagerDTO, bool) {
	if o == nil || IsNil(o.Pager) {
		return nil, false
	}
	return o.Pager, true
}

// HasPager returns a boolean if a field has been set.
func (o *GetRegionWithChildrenResponse) HasPager() bool {
	if o != nil && !IsNil(o.Pager) {
		return true
	}

	return false
}

// SetPager gets a reference to the given FlippingPagerDTO and assigns it to the Pager field.
func (o *GetRegionWithChildrenResponse) SetPager(v FlippingPagerDTO) {
	o.Pager = &v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *GetRegionWithChildrenResponse) GetRegions() RegionDTO {
	if o == nil || IsNil(o.Regions) {
		var ret RegionDTO
		return ret
	}
	return *o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetRegionWithChildrenResponse) GetRegionsOk() (*RegionDTO, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *GetRegionWithChildrenResponse) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given RegionDTO and assigns it to the Regions field.
func (o *GetRegionWithChildrenResponse) SetRegions(v RegionDTO) {
	o.Regions = &v
}

func (o GetRegionWithChildrenResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetRegionWithChildrenResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Pager) {
		toSerialize["pager"] = o.Pager
	}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	return toSerialize, nil
}

type NullableGetRegionWithChildrenResponse struct {
	value *GetRegionWithChildrenResponse
	isSet bool
}

func (v NullableGetRegionWithChildrenResponse) Get() *GetRegionWithChildrenResponse {
	return v.value
}

func (v *NullableGetRegionWithChildrenResponse) Set(val *GetRegionWithChildrenResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetRegionWithChildrenResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetRegionWithChildrenResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetRegionWithChildrenResponse(val *GetRegionWithChildrenResponse) *NullableGetRegionWithChildrenResponse {
	return &NullableGetRegionWithChildrenResponse{value: val, isSet: true}
}

func (v NullableGetRegionWithChildrenResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetRegionWithChildrenResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


