/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdateMappingDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateMappingDTO{}

// UpdateMappingDTO Карточка на Маркете, которая, с вашей точки зрения, подходит товару. Чтобы определить идентификатор подходящей карточки, воспользуйтесь поиском в кабинете (**Товары** → **Каталог** → **Загрузить товары**).  По результатам проверки Маркет может привязать товар к более подходящей карточке. 
type UpdateMappingDTO struct {
	// SKU на Маркете.
	MarketSku *int64 `json:"marketSku,omitempty"`
}

// NewUpdateMappingDTO instantiates a new UpdateMappingDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateMappingDTO() *UpdateMappingDTO {
	this := UpdateMappingDTO{}
	return &this
}

// NewUpdateMappingDTOWithDefaults instantiates a new UpdateMappingDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateMappingDTOWithDefaults() *UpdateMappingDTO {
	this := UpdateMappingDTO{}
	return &this
}

// GetMarketSku returns the MarketSku field value if set, zero value otherwise.
func (o *UpdateMappingDTO) GetMarketSku() int64 {
	if o == nil || IsNil(o.MarketSku) {
		var ret int64
		return ret
	}
	return *o.MarketSku
}

// GetMarketSkuOk returns a tuple with the MarketSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateMappingDTO) GetMarketSkuOk() (*int64, bool) {
	if o == nil || IsNil(o.MarketSku) {
		return nil, false
	}
	return o.MarketSku, true
}

// HasMarketSku returns a boolean if a field has been set.
func (o *UpdateMappingDTO) HasMarketSku() bool {
	if o != nil && !IsNil(o.MarketSku) {
		return true
	}

	return false
}

// SetMarketSku gets a reference to the given int64 and assigns it to the MarketSku field.
func (o *UpdateMappingDTO) SetMarketSku(v int64) {
	o.MarketSku = &v
}

func (o UpdateMappingDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateMappingDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MarketSku) {
		toSerialize["marketSku"] = o.MarketSku
	}
	return toSerialize, nil
}

type NullableUpdateMappingDTO struct {
	value *UpdateMappingDTO
	isSet bool
}

func (v NullableUpdateMappingDTO) Get() *UpdateMappingDTO {
	return v.value
}

func (v *NullableUpdateMappingDTO) Set(val *UpdateMappingDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateMappingDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateMappingDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateMappingDTO(val *UpdateMappingDTO) *NullableUpdateMappingDTO {
	return &NullableUpdateMappingDTO{value: val, isSet: true}
}

func (v NullableUpdateMappingDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateMappingDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


