/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the PromoOfferUpdateWarningDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromoOfferUpdateWarningDTO{}

// PromoOfferUpdateWarningDTO Предупреждение, которое появилось при добавлении товара в акцию или изменении его цен.
type PromoOfferUpdateWarningDTO struct {
	Code PromoOfferUpdateWarningCodeType `json:"code"`
	// Идентификаторы кампаний тех магазинов, для которых получены предупреждения.  Не возвращается, если предупреждения действуют для всех магазинов в кабинете.
	CampaignIds []int64 `json:"campaignIds,omitempty"`
}

type _PromoOfferUpdateWarningDTO PromoOfferUpdateWarningDTO

// NewPromoOfferUpdateWarningDTO instantiates a new PromoOfferUpdateWarningDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromoOfferUpdateWarningDTO(code PromoOfferUpdateWarningCodeType) *PromoOfferUpdateWarningDTO {
	this := PromoOfferUpdateWarningDTO{}
	this.Code = code
	return &this
}

// NewPromoOfferUpdateWarningDTOWithDefaults instantiates a new PromoOfferUpdateWarningDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromoOfferUpdateWarningDTOWithDefaults() *PromoOfferUpdateWarningDTO {
	this := PromoOfferUpdateWarningDTO{}
	return &this
}

// GetCode returns the Code field value
func (o *PromoOfferUpdateWarningDTO) GetCode() PromoOfferUpdateWarningCodeType {
	if o == nil {
		var ret PromoOfferUpdateWarningCodeType
		return ret
	}

	return o.Code
}

// GetCodeOk returns a tuple with the Code field value
// and a boolean to check if the value has been set.
func (o *PromoOfferUpdateWarningDTO) GetCodeOk() (*PromoOfferUpdateWarningCodeType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Code, true
}

// SetCode sets field value
func (o *PromoOfferUpdateWarningDTO) SetCode(v PromoOfferUpdateWarningCodeType) {
	o.Code = v
}

// GetCampaignIds returns the CampaignIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *PromoOfferUpdateWarningDTO) GetCampaignIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.CampaignIds
}

// GetCampaignIdsOk returns a tuple with the CampaignIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *PromoOfferUpdateWarningDTO) GetCampaignIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.CampaignIds) {
		return nil, false
	}
	return o.CampaignIds, true
}

// HasCampaignIds returns a boolean if a field has been set.
func (o *PromoOfferUpdateWarningDTO) HasCampaignIds() bool {
	if o != nil && !IsNil(o.CampaignIds) {
		return true
	}

	return false
}

// SetCampaignIds gets a reference to the given []int64 and assigns it to the CampaignIds field.
func (o *PromoOfferUpdateWarningDTO) SetCampaignIds(v []int64) {
	o.CampaignIds = v
}

func (o PromoOfferUpdateWarningDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromoOfferUpdateWarningDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["code"] = o.Code
	if o.CampaignIds != nil {
		toSerialize["campaignIds"] = o.CampaignIds
	}
	return toSerialize, nil
}

func (o *PromoOfferUpdateWarningDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"code",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPromoOfferUpdateWarningDTO := _PromoOfferUpdateWarningDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varPromoOfferUpdateWarningDTO)

	if err != nil {
		return err
	}

	*o = PromoOfferUpdateWarningDTO(varPromoOfferUpdateWarningDTO)

	return err
}

type NullablePromoOfferUpdateWarningDTO struct {
	value *PromoOfferUpdateWarningDTO
	isSet bool
}

func (v NullablePromoOfferUpdateWarningDTO) Get() *PromoOfferUpdateWarningDTO {
	return v.value
}

func (v *NullablePromoOfferUpdateWarningDTO) Set(val *PromoOfferUpdateWarningDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePromoOfferUpdateWarningDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePromoOfferUpdateWarningDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromoOfferUpdateWarningDTO(val *PromoOfferUpdateWarningDTO) *NullablePromoOfferUpdateWarningDTO {
	return &NullablePromoOfferUpdateWarningDTO{value: val, isSet: true}
}

func (v NullablePromoOfferUpdateWarningDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromoOfferUpdateWarningDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
