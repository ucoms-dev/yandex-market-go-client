openapi: 3.0.3
info:
  description: |
    API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.

    В числе возможностей интеграции:

    * управление каталогом товаров и витриной,

    * обработка заказов,

    * изменение настроек магазина,

    * получение отчетов.
  license:
    name: BSD 3-Clause
    url: https://opensource.org/license/bsd-3-clause/
  title: Партнерский API Маркета
  version: LATEST
externalDocs:
  description: Документация API
  url: https://yandex.ru/dev/market/partner-api/doc/
servers:
- url: https://api.partner.market.yandex.ru
security:
- ApiKey: []
- OAuth:
  - market:partner-api
paths:
  /businesses/{businessId}/settings:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getBusinessSettings.md) %}

        Возвращает информацию о настройках кабинета, идентификатор которого указан в запросе.
        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getBusinessSettings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessSettingsResponse'
          description: Настройки кабинета.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Настройки кабинета
      tags:
      - businesses
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /campaigns:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCampaigns.md) %}

        **Для Api-Key-токена:** возвращает список магазинов в кабинете, для которого выдан токен. Нельзя получить список только подагентских магазинов.

        **Для OAuth-токена:** возвращает список магазинов, к которым имеет доступ пользователь — владелец авторизационного токена, использованного в запросе. Для агентских пользователей список состоит из подагентских магазинов.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getCampaigns
      parameters:
      - description: |
          {% note warning "Если в методе есть `page_token`" %}

          Используйте его вместо параметра `page`.

          [Подробнее о типах пагинации и их использовании](../../concepts/pagination.md)

          {% endnote %}

          Номер страницы результатов.

          Используется вместе с параметром `page_size`.

          `page_number` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          maximum: 10000
          type: integer
      - description: |
          Размер страницы.

          Используется вместе с параметром `page_number`.

          `page_size` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignsResponse'
          description: Магазины пользователя.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список магазинов пользователя
      tags:
      - campaigns
      - dbs
      - express
      - fbs
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /campaigns/{campaignId}:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCampaign.md) %}

        Возвращает информацию о магазине.
        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getCampaign
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignResponse'
          description: Информация о магазине.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о магазине
      tags:
      - campaigns
      - dbs
      - express
      - fbs
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /campaigns/{campaignId}/settings:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCampaignSettings.md) %}

        Возвращает информацию о настройках магазина, идентификатор которого указан в запросе.
        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getCampaignSettings
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignSettingsResponse'
          description: Настройки магазина.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Настройки магазина
      tags:
      - campaigns
      - dbs
      - fbs
      - express
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /campaigns/{campaignId}/region:
    get:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCampaignRegion.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [GET campaigns/{campaignId}/settings](../../reference/campaigns/getCampaignSettings.md)

        {% endnote %}

        Возвращает регион, в котором находится магазин.
        |**⚙️ Лимит:** 5 000 запросов в час|
        |-|
      operationId: getCampaignRegion
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignRegionResponse'
          description: |
            Возвращает регион, в котором находится магазин.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Регион магазина
      tags:
      - campaigns
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
  /campaigns/{campaignId}/orders/{orderId}:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrder.md) %}

        Возвращает информацию о заказе.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый заказ или изменится его статус. А полную информацию можно получить с помощью этого метода или [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOrder
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderResponse'
          description: Информация о заказе.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация об одном заказе
      tags:
      - orders
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - communication
      - finance-and-accounting
  /campaigns/{campaignId}/orders:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrders.md) %}

        Возвращает информацию о заказах. Запрос можно использовать, чтобы узнать, нет ли новых заказов.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый заказ или изменится его статус. А полную информацию можно получить с помощью этого метода или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Доступна фильтрация по нескольким характеристикам заказов:

        * дате оформления;

        * статусу;

        * идентификаторам заказов;

        * этапу обработки или причине отмены;

        * типу (настоящий или тестовый);

        * дате отгрузки в службу доставки;

        * дате и времени обновления заказа.

        Информация о заказах, доставленных или отмененных больше 30 дней назад, не возвращается. Ее можно получить с помощью запроса информации об отдельном заказе [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) (если у вас есть идентификатор заказа) или запроса отчета по заказам [POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md).

        Максимальный диапазон дат за один запрос к ресурсу — 30 дней.

        Результаты возвращаются постранично. Для навигации по страницам используйте параметры `page_token` и `limit`.

        Получить более подробную информацию о покупателе и его номере телефона можно с помощью запроса [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOrders
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Фильтрация заказов по идентификаторам.
          <br><br>
          ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.
        in: query
        name: orderIds
        required: false
        schema:
          items:
            format: int64
            maxItems: 50
            minItems: 1
            type: integer
          type: array
      - description: |
          Статус заказа:

          * `CANCELLED` — заказ отменен.

          * `DELIVERED` — заказ получен покупателем.

          * `DELIVERY` — заказ передан в службу доставки.

          * `PICKUP` — заказ доставлен в пункт самовывоза.

          * `PROCESSING` — заказ находится в обработке.

          * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).

          Также могут возвращаться другие значения. Обрабатывать их не требуется.
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/OrderStatusType'
          type: array
          uniqueItems: true
      - description: |
          Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

          Возможные значения для заказа в статусе `PROCESSING`:

          * `STARTED` — заказ подтвержден, его можно начать обрабатывать.
          * `READY_TO_SHIP` — заказ собран и готов к отправке.
          * `SHIPPED` — заказ передан службе доставки.

          Возможные значения для заказа в статусе `CANCELLED`:

          * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

          * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

          * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:

            * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;
            * перерыв между первым и третьим звонком не менее 90 минут;
            * соединение не короче 5 секунд.

            Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400

          * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

          * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

          * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

          * `SHOP_FAILED` — магазин не может выполнить заказ.

          * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

          * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

          * `PROCESSING_EXPIRED` — значение более не используется.

          * `PICKUP_EXPIRED` — закончился срок хранения заказа в ПВЗ.

          * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.

          * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.

          * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день.

          * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.

          Также могут возвращаться другие значения. Обрабатывать их не требуется.
        in: query
        name: substatus
        required: false
        schema:
          items:
            $ref: '#/components/schemas/OrderSubstatusType'
          type: array
          uniqueItems: true
      - description: |
          Начальная дата для фильтрации заказов по дате оформления.

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.

          Значение по умолчанию: 30 дней назад от текущей даты.
        in: query
        name: fromDate
        required: false
        schema:
          format: date
          type: string
      - description: |
          Конечная дата для фильтрации заказов по дате оформления.

          Показываются заказы, созданные до 00:00 указанного дня.

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.

          Значение по умолчанию: текущая дата.

          Если промежуток времени между `toDate` и `fromDate` меньше суток, то `toDate` равен `fromDate` + сутки.
        in: query
        name: toDate
        required: false
        schema:
          format: date
          type: string
      - description: |
          Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.

          Начальная дата включается в интервал для фильтрации.
        in: query
        name: supplierShipmentDateFrom
        required: false
        schema:
          format: date
          type: string
      - description: |
          Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

          Формат даты: `ДД-ММ-ГГГГ`.

          Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.

          Конечная дата не включается в интервал для фильтрации.

          Если промежуток времени между `supplierShipmentDateTo` и `supplierShipmentDateFrom` меньше суток, то `supplierShipmentDateTo` равен `supplierShipmentDateFrom` + сутки.
        in: query
        name: supplierShipmentDateTo
        required: false
        schema:
          format: date
          type: string
      - description: |
          Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

          Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

          Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.

          Начальная дата включается в интервал для фильтрации.
        in: query
        name: updatedAtFrom
        required: false
        schema:
          format: date-time
          type: string
      - description: |
          Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

          Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

          Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.

          Конечная дата не включается в интервал для фильтрации.
        in: query
        name: updatedAtTo
        required: false
        schema:
          format: date-time
          type: string
      - description: Способ отгрузки
        in: query
        name: dispatchType
        required: false
        schema:
          $ref: '#/components/schemas/OrderDeliveryDispatchType'
      - description: |
          Фильтрация заказов по типам:

          * `false` — настоящий заказ покупателя.

          * `true` — [тестовый](../../concepts/sandbox.md) заказ Маркета.
        in: query
        name: fake
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go):

          * `true` — да.

          * `false` — нет.

          Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
        in: query
        name: hasCis
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          **Только для модели DBS**

          Фильтрация заказов по наличию запросов покупателей на отмену.

          При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.

          Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).
        in: query
        name: onlyWaitingForCancellationApprove
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:

          * `true` — возвращаются только заказы с неподтвержденной датой доставки.
          * `false` — фильтрация не применяется.
        in: query
        name: onlyEstimatedDelivery
        required: false
        schema:
          default: false
          type: boolean
      - description: |
          Фильтрация заказов по типу покупателя.
        in: query
        name: buyerType
        required: false
        schema:
          $ref: '#/components/schemas/OrderBuyerType'
      - description: |
          {% note warning "Если в методе есть `page_token`" %}

          Используйте его вместо параметра `page`.

          [Подробнее о типах пагинации и их использовании](../../concepts/pagination.md)

          {% endnote %}

          Номер страницы результатов.

          Используется вместе с параметром `page_size`.

          `page_number` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          maximum: 10000
          type: integer
      - description: |
          Размер страницы.

          Используется вместе с параметром `page_number`.

          `page_size` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersResponse'
          description: Информация о заказах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о нескольких заказах
      tags:
      - orders
      - fbs
      - dbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - communication
      - finance-and-accounting
  /campaigns/{campaignId}/orders/{orderId}/identifiers:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/provideOrderItemIdentifiers.md) %}

        {% note warning "Если вы работаете по модели FBS" %}

        Используйте метод [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).

        {% endnote %}

        Передает Маркету коды маркировки для единиц товара в указанном заказе.

        Маркировка товаров в системе [«Честный ЗНАК»](https://честныйзнак.рф/) **необязательна** для заказов от физических лиц, но **обязательна** для заказов от бизнеса.

        Принимаются коды следующих типов:

        * Коды в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).
        * УИН для ювелирных изделий.
        * РНПТ и ГТД для импортных прослеживаемых товаров.

        {% note warning "Прежде чем работать с этим методом" %}

        Обязательно прочтите [статью о работе с маркируемыми товарами](https://yandex.ru/support/marketplace/orders/cz.html).

        {% endnote %}

        Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: provideOrderItemIdentifiers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvideOrderItemIdentifiersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProvideOrderItemIdentifiersResponse'
          description: "Ответ `200` обозначает, что коды успешно записались. Ответ\
            \ содержит краткие сведения о промаркированных товарах."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача кодов маркировки единиц товара
      tags:
      - orders
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/items:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOrderItems.md) %}

        {% note warning "Если вы работаете по модели FBS" %}

        Используйте метод [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).

        {% endnote %}

        Удаляет товары из заказа, если позволяет выбранная служба доставки, в случаях:

        * покупатель уменьшил количество товара;
        * магазин не может поставить все товары в заказе.

        Для этого заказ должен находится в статусе `"status": "PROCESSING"` этапа обработки `"substatus": "STARTED"`. После передачи статуса `"substatus": "READY_TO_SHIP"` изменить состав невозможно.

        Если одинаковых товаров несколько, для уменьшения количества передайте обновленное значение в атрибуте `count` параметра `item`.

        Чтобы полностью удалить товар из заказа:

        * передайте значение `0`; или
        * не передавайте параметр `item`.

        Нельзя удалить или уменьшить количество товара, если он:

        * добавлен по акции;
        * составляет 99% стоимости заказа;
        * единственный товар в заказе.

        Если необходимо удалить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.

        {% note info "Увеличить заказ нельзя" %}

        С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.

        {% endnote %}

        **Возврат денег покупателю**

        Если покупатель оплатил товар при оформлении, Маркет вернет ему деньги за удаленные из заказа товары в течение двух дней:

        * при оплате банковской картой — с момента, когда магазин переведет заказ в статус `SHIPPED`;

        * при оплате через Apple Pay или Google Pay — с момента, когда магазин удалит товар из заказа.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: updateOrderItems
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderItemRequest'
        required: true
      responses:
        "200":
          description: Маркет успешно обработал ваш запрос. Выходные данные не ожидаются.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товара из заказа или уменьшение числа единиц
      tags:
      - orders
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/status:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOrderStatus.md) %}

        Изменяет статус заказа. Возможные изменения статусов:

        * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "PROCESSING"` и этап обработки `"substatus": "READY_TO_SHIP"`.
        * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.
        * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "READY_TO_SHIP"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: updateOrderStatus
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderStatusResponse'
          description: В случае успешного изменения статуса заказа возвращается обновленная
            информация о заказе.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение статуса одного заказа
      tags:
      - orders
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/status-update:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOrderStatuses.md) %}

        Изменяет статусы нескольких заказов.

        Возможные изменения статусов:

        * Если магазин подтвердил и подготовил заказ к отправке, то заказ из статуса `"status": "PROCESSING"`и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "PROCESSING"` и этап обработки `"substatus": "READY_TO_SHIP"`.
        * Если магазин подтвердил заказ, но не может его выполнить (например, товар числится в базе, но отсутствует на складе или нет нужного цвета), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "STARTED"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.
        * Если магазин подготовил заказ к отгрузке, но не может его выполнить (например, последний товар был поврежден или оказался с браком), то заказ из статуса `"status": "PROCESSING"` и этапа обработки `"substatus": "READY_TO_SHIP"` нужно перевести в статус `"status": "CANCELLED"` с причиной отмены заказа `"substatus": "SHOP_FAILED"`.

        |**⚙️ Лимит:** 100 000 заказов в час|
        |-|
      operationId: updateOrderStatuses
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStatusesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOrderStatusesResponse'
          description: Возвращается информация об обновленных статусах заказов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение статусов нескольких заказов
      tags:
      - orders
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/setOrderShipmentBoxes.md) %}

        {% note warning "Если вы работаете по модели FBS" %}

        Используйте метод [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).

        {% endnote %}

        Отгружаемый Маркету заказ может не влезть в одну коробку или упаковку — в этом случае получается, что он занимает несколько грузовых мест.

        Количество грузовых мест нужно обязательно передавать Маркету, если оно не равно 1. Это делается перед переводом его в статус **Готов к отгрузке**. Подробно о том, что в какой момент нужно передавать, рассказано в [пошаговой инструкции](../../step-by-step/fbs.md).

        Метод устроен немного нестандартно: количество задается длиной массива пустых объектов.

        Раньше метод требовал передачи большего количества данных. Запросы, оформленные по старому образцу, работают, но лучше делать по-новому.

        {% cut "Как было раньше" %}

        Структура тела PUT-запроса:

        ```text translate=no
        {
          "boxes":
          [
            {
              "fulfilmentId": "{string}",
              "weight": {int64},
              "width": {int64},
              "height": {int64},
              "depth": {int64},
              "items":
              [
                {
                  "id": {int64},
                  "count": {int32}
                },
                ...
              ]
            },
            ...
          ]
        }
        ```
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `boxes`       |           | Список грузовых мест.       |

        **Параметры, вложенные в `boxes`**
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `fulfilmentId`       |  String   | Идентификатор грузового места в информационной системе магазина. Сформируйте идентификатор по шаблону: `номер заказа на Маркете-номер грузового места`. Например, `7206821‑1, 7206821‑2` и т. д. |
        | `weight`       | Int64        | Масса брутто грузового места (суммарная масса упаковки и содержимого) в граммах. |
        | `width`       | Int64   | Ширина грузового места в сантиметрах.       |
        | `height`       | Int64   | Высота грузового места в сантиметрах.       |
        | `depth`       | Int64   | Глубина грузового места в сантиметрах.        |
        | `items`       | Int64   | Список товаров в грузовом месте.       |

        **Параметры, вложенные в `items`**
        | **Параметр**  | **Тип**  | **Значение**  |
        | ----------- | ----------- | ----------- |
        | `id`       | Int64     | Идентификатор товара в рамках заказа.   |
        | `count`    | Int32     | Количество единиц товара в грузовом месте.       |

        {% endcut %}

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: setOrderShipmentBoxes
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderShipmentBoxesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOrderShipmentBoxesResponse'
          description: "Имеет значение только тип ответа. Если ответ `ОК`, количес\
            тво грузомест записано."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача количества грузовых мест в заказе
      tags:
      - orders
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/cancellation/accept:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/acceptOrderCancellation.md) %}

        Подтверждает или отклоняет заявку покупателя на отмену заказа, который передан службе доставки.

        Покупатель может отменить заказ в течение его обработки или доставки. Если заказ еще обрабатывается (статус `PROCESSING`), вам не нужно подтверждать отмену заказа — он будет отменен автоматически.

        Если заказ уже передан службе доставки (статус `DELIVERY` или `PICKUP`) и пользователь отменил его, вы можете предупредить службу об отмене в течение 48 часов.

          * Служба доставки узнала об отмене до передачи заказа покупателю — подтвердите отмену с помощью запроса [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation.md).
          * Заказ уже доставлен — отклоните отмену с помощью этого же запроса. Тогда у покупателя останется заказ, и деньги за него возвращаться не будут.

        **Как узнать об отмененных заказах:**

          * Отправьте запрос [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md). В его URL добавьте входной параметр `onlyWaitingForCancellationApprove=true`.
          * В кабинете или через почту — на нее придет уведомление об отмене.
          * Подключите API-уведомления. Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новая заявка на отмену заказа. [{#T}](../../push-notifications/index.md)

        Если в течение 48 часов вы не подтвердите или отклоните отмену, заказ будет отменен автоматически.

        |**⚙️ Лимит:** 500 запросов в час|
        |-|
      operationId: acceptOrderCancellation
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptOrderCancellationRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Ответ на отмену заказа был успешно передан.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отмена заказа покупателем
      tags:
      - orders
      - dbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/deliverDigitalGoods:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/provideOrderDigitalCodes.md) %}

        Передает ключи цифровых товаров, которые покупатель заказал и оплатил. После выполнения запроса Маркет отправит ему письмо с ключами и инструкциями по активации. Если письмо будет доставлено, Маркет переведет заказ в финальный статус `DELIVERED`.

        {% note tip "После передачи кода покупателю статус заказа изменится не сразу" %}

        Подключите API-уведомления — Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда заказ перейдет в статус `DELIVERED`.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Ключ нужно передать в течение 30 минут после перехода заказа в статус `PROCESSING`.

        Если в один заказ входят несколько ключей, передавайте их все в одном запросе.

        Каждый товар с уникальным `id` передавайте в виде отдельного элемента в массиве `items`, а ключи товара — в массиве `codes`.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: provideOrderDigitalCodes
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProvideOrderDigitalCodesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: |
            Пустой ответ.

            {% note warning "Ответ 200 сам по себе не значит, что ключи переданы покупателю" %}

            Если письмо с ключами удалось доставить, Маркет переведет заказ в финальный статус `DELIVERED`.

            Статус заказа можно узнать с помощью метода [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) или [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).

            {% endnote %}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача ключей цифровых товаров
      tags:
      - orders
      - dbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
      x-restrictions:
      - market-yandex-go
  /campaigns/{campaignId}/orders/{orderId}/boxes:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/setOrderBoxLayout.md) %}

        {% note tip "Подходит и для DBS" %}

        Запрос предназначен для работы с FBS-заказами, но вы можете использовать его для обработки DBS-заказов, если это удобно.

        {% endnote %}

        Позволяет выполнить три операции:

        * передать Маркету информацию о распределении товаров по коробкам;
        * передать Маркету коды маркировки для товаров;
        * удалить товар из заказа, если его не оказалось на складе.

        Если нужно что-то поправить в переданных данных, просто повторите запрос — это можно делать сколько угодно раз до перевода заказа в статус **Готов к отгрузке**. ⚠️ Если вы меняете раскладку уже после печати и расклейки ярлыков, не забудьте перепечатать их и наклеить заново.

        ## Как передать информацию о распределении товаров

        В этом запросе вам нужно передать Маркету список коробок и указать, какие именно товары лежат в каждой из них. Коробки могут быть двух типов:

        * **Содержащие товары целиком.** Такая коробка может содержать сколько угодно единиц любых товаров.

        * **Содержащие часть товара.** Такие коробки содержат по одной части одного товара. Например, одна содержит внешний блок кондиционера, а другая — внутренний блок.

        ⚠️ Одна коробка не может содержать и товары целиком, и части товаров.

        ## Как передавать коды маркировки

        {% note info "Маркировка товаров в системе [«Честный ЗНАК»](https://честныйзнак.рф/) необязательна для заказов от физических лиц" %}

        Для заказов от бизнеса все еще нужно передавать коды маркировки.

        {% endnote %}

        Если в заказе есть товары, подлежащие маркировке, в запросе нужно передать соответствующие уникальные коды. [Что такое маркировка?](https://yandex.ru/support/marketplace/orders/cz.html)

        Принимаются коды следующих типов:

        * Коды в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).
        * УИН для ювелирных изделий.
        * РНПТ и ГТД для импортных прослеживаемых товаров.

        Для каждой позиции в заказе, требующей маркировки, нужно передать список кодов — по одному для каждой единицы товара. Например, если в заказе две пары тапочек и одна пара туфель, получится список из двух кодов для первой позиции и список из одного кода для второй.

        Если товар едет в нескольких коробках, код маркировки нужно передать для каждой из них.

        {% note warning "Для заказов, в которых есть ювелирные изделия" %}

        Заказ перейдет в статус `READY_TO_SHIP`, только когда:

        1. Вы передадите Маркету УИНы по каждому ювелирному изделию в заказе.
        2. Все УИНы успешно пройдут проверку. [Как получить статусы проверки УИНов](../../reference/orders/getOrderIdentifiersStatus.md)

        {% endnote %}

        ## Как удалить товар из заказа

        Чтобы удалить товар из заказа:

        1. Добавьте в запрос `allowRemove: true`.
        2. Передайте распределение по коробкам без товара, который нужно удалить.

        {% note warning "Удаление нельзя отменить" %}

        Эта операция необратима: покупатель сразу получит уведомление, а состав заказа изменится.

        {% endnote %}

        Чтобы удалить позицию целиком, не передавайте соответствующий `OrderBoxLayoutItemDTO`. Чтобы уменьшить количество товара, передайте уменьшенное значение в поле `fullCount`.

        Нельзя удалить или уменьшить количество товара, если он:

        * добавлен по акции;
        * составляет 99% стоимости заказа;
        * единственный товар в заказе.

        Если вы не можете отгрузить такой товар, отмените заказ. Для этого отправьте запрос методом [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) и передайте статус заказа `CANCELLED` с причиной отмены `SHOP_FAILED`.

        {% note info "Увеличить заказ нельзя" %}

        С помощью запроса нельзя увеличить количество одинаковых товаров, добавить новые товары в заказ или заменить один товар другим.

        {% endnote %}

        ## Примеры

        {% cut "Товар умещается в коробку" %}

        Вот как будет выглядеть запрос, если в одной коробке едут:

          * три единицы одного товара, требующего маркировки;
          * одна единица другого товара, не требущего маркировки.

          ```json translate=no
          {
              "boxes": [
                  {
                      "items": [
                          {
                              "id": 123456,
                              "fullCount": 3,
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  },
                                  {
                                      "cis": "010304109478gftJ14545762!\u001dhGt264"
                                  },
                                  {
                                      "cis": "010304109478fRs28323ks23!\u001dhet201"
                                  }
                              ]
                          },
                          {
                              "id": 654321,
                              "fullCount": 1
                          }
                      ]
                  }
              ]
          }
          ```

        {% endcut %}

        {% cut "Товар едет в разных коробках" %}

        Вот как будет выглядеть запрос, если товар едет в двух коробках:

          ```json translate=no
          {
              "boxes": [
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 1,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 2,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  }
              ]
          }
          ```

        {% endcut %}

        {% cut "Одинаковые товары, где каждый едет в нескольких коробках" %}

        Вот как будет выглядеть запрос, если каждый из двух одинаковых товаров едет в двух коробках:

          ```json translate=no
          {
              "boxes": [
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 1,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 2,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 1,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  },
                  {
                      "items": [
                          {
                              "id": 123456,
                              "partialCount": {
                                  "current": 2,
                                  "total": 2
                              },
                              "instances": [
                                  {
                                      "cis": "01030410947874432155Qbag!\u001d93Zjqw"
                                  }
                              ]
                          }
                      ]
                  }
              ]
          }
          ```

        {% endcut %}

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: setOrderBoxLayout
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderBoxLayoutRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetOrderBoxLayoutResponse'
          description: |
            В ответ придет переданная раскладка с идентификаторами коробок — они понадобятся для запроса ярлыков.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Подготовка заказа
      tags:
      - orders
      - fbs
      - express
      - dbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/external-id:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateExternalOrderId.md) %}

        При первом использовании запроса передает Маркету идентификатор заказа в системе магазина. При повторном — изменяет его в системе Маркета.

        Передать данные можно до перехода заказа в статус `PROCESSING` с подстатусом `READY_TO_SHIP`.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: updateExternalOrderId
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateExternalOrderIdRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Дополнительный идентификатор заказа успешно передан или изменен.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача или изменение дополнительного идентификатора заказа
      tags:
      - orders
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/identifiers/status:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrderIdentifiersStatus.md) %}

        Возвращает статусы проверки [УИНов](*uin) в заказе.

        Заказ, в котором есть ювелирные изделия, перейдет в статус `READY_TO_SHIP`, только когда:

        1. Вы передадите Маркету УИНы по каждому ювелирному изделию в заказе — метод [PUT campaigns/{campaignId}/orders/{orderId}/boxes](../../reference/orders/setOrderBoxLayout.md).
        2. Все УИНы успешно пройдут проверку.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOrderIdentifiersStatus
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderIdentifiersStatusResponse'
          description: Информация по проверке УИНов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Статусы проверки УИНов
      tags:
      - orders
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/orders/{orderId}/delivery/date:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/setOrderDeliveryDate.md) %}

        Метод изменяет дату доставки заказа в статусе `PROCESSING` или `DELIVERY`. Для заказов с другими статусами дату доставки изменить нельзя.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: setOrderDeliveryDate
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderDeliveryDateRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Успешное изменение даты доставки.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение даты доставки заказа
      tags:
      - order-delivery
      - dbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/delivery/track:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/setOrderDeliveryTrackCode.md) %}

        Передает Маркету трек‑номер, по которому покупатель может отследить посылку со своим заказом через службу доставки. Если покупатели смогут узнать, на каком этапе доставки находятся их заказы, доверие покупателей к вашему магазину может возрасти.

        Передать трек‑номер можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: setOrderDeliveryTrackCode
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetOrderDeliveryTrackCodeRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Трек‑номер посылки и идентификатор службы доставки были успешно
            переданы.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача трек‑номера посылки
      tags:
      - order-delivery
      - dbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/buyer:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrderBuyerInfo.md) %}

        Возвращает информацию о покупателе по идентификатору заказа.

        {% note info "Как получить информацию о покупателе, который является юридическим лицом" %}

        Воспользуйтесь запросом [POST campaigns/{campaignId}/orders/{orderId}/business-buyer](../../reference/order-business-information/getOrderBusinessBuyerInfo.md).

        {% endnote %}

        Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY` или `PICKUP`.

        |**⚙️ Лимит:** 3 000 запросов в час|
        |-|
      operationId: getOrderBuyerInfo
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderBuyerInfoResponse'
          description: Информация о покупателе.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о покупателе — физическом лице
      tags:
      - order-delivery
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/orders/{orderId}/verifyEac:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/verifyOrderEac.md) %}

        Отправляет Маркету код подтверждения для его проверки.

        **Если у магазина настроена работа с кодами подтверждения:**

          В запросах [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md), [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md), [PUT campaigns/{campaignId}/orders/{orderId}/status](../../reference/orders/updateOrderStatus.md) в параметре `delivery`, вложенном в `order`, возвращается параметр `eacType` с типом `Enum` — тип кода подтверждения для передачи заказа.

          Возможные значения:

          * `MERCHANT_TO_COURIER` (временно не возвращается) — продавец передает код курьеру для получения невыкупа;
          * `COURIER_TO_MERCHANT` — курьер передает код продавцу для получения заказа.

          Параметр `eacType` возвращается при статусах заказа `COURIER_FOUND`, `COURIER_ARRIVED_TO_SENDER` и `DELIVERY_SERVICE_UNDELIVERED`. Если заказ в других статусах, параметр может отсутствовать.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: verifyOrderEac
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyOrderEacRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyOrderEacResponse'
          description: Проверка кода выполнена успешно.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача кода подтверждения
      tags:
      - order-delivery
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/delivery/storage-limit:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOrderStorageLimit.md) %}

        Продлевает срок хранения заказа в пункте выдачи продавца.

        Заказ должен быть в статусе `PICKUP`. Продлить срок можно только один раз, не больше чем на 30 дней.

        Новый срок хранения можно получить в параметре `outletStorageLimitDate` запроса [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: updateOrderStorageLimit
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOrderStorageLimitRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Продление срока хранения заказа
      tags:
      - order-delivery
      - dbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateOrderLabel.md) %}

        Формирует ярлык‑наклейку для коробки в заказе и возвращает ярлык в PDF‑файле.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: generateOrderLabel
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор грузоместа.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор коробки.
        in: path
        name: boxId
        required: true
        schema:
          format: int64
          type: integer
      - description: "Настройка размещения ярлыков на странице. Если параметра нет\
          , возвращается PDF с ярлыками формата A7."
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/PageFormatType'
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF‑файл с ярлыками для коробки. Файл содержит одну страницу
            с ярлыком.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Готовый ярлык‑наклейка для коробки в заказе
      tags:
      - order-labels
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/delivery/labels:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateOrderLabels.md) %}

        Возвращает PDF-файл с ярлыками, которые нужно наклеить на коробки перед отгрузкой. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).

        На вход нужно передать идентификатор заказа и один необязательный параметр, который управляет версткой PDF-файла.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: generateOrderLabels
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: "Настройка размещения ярлыков на странице. Если параметра нет\
          , возвращается PDF с ярлыками формата A7."
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/PageFormatType'
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF‑файл с ярлыками на все коробки.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Готовые ярлыки‑наклейки на все коробки в одном заказе
      tags:
      - order-labels
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/delivery/labels/data:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrderLabelsData.md) %}

        Возвращает информацию на ярлыках, которые клеятся на коробки в заказе.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOrderLabelsData
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrderLabelsDataResponse'
          description: Информация для печати ярлыков.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Данные для самостоятельного изготовления ярлыков
      tags:
      - order-labels
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      x-restrictions:
      - market-yandex-go
  /campaigns/{campaignId}/orders/{orderId}/business-buyer:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrderBusinessBuyerInfo.md) %}

        Возвращает информацию о покупателе по идентификатору заказа.

        {% note info "Как получить информацию о покупателе, который является физическим лицом" %}

        Воспользуйтесь запросом [GET campaigns/{campaignId}/orders/{orderId}/buyer](../../reference/orders/getOrderBuyerInfo.md).

        {% endnote %}

        Получить данные можно, только если заказ находится в статусе `PROCESSING`, `DELIVERY`, `PICKUP` или `DELIVERED`.

        |**⚙️ Лимит:** 3 000 запросов в час|
        |-|
      operationId: getOrderBusinessBuyerInfo
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessBuyerInfoResponse'
          description: Информация о покупателе.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о покупателе — юридическом лице
      tags:
      - order-business-information
      - fbs
      - fby
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/orders/{orderId}/documents:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrderBusinessDocumentsInfo.md) %}

        Возвращает информацию о документах по идентификатору заказа.

        Получить данные можно после того, как заказ перейдет в статус `DELIVERED`.

        |**⚙️ Лимит:** 3 000 запросов в час|
        |-|
      operationId: getOrderBusinessDocumentsInfo
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBusinessDocumentsInfoResponse'
          description: Информация о документах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о документах
      tags:
      - order-business-information
      - fbs
      - fby
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/returns:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getReturns.md) %}

        Получает список невыкупов и возвратов.

        Чтобы получить информацию по одному невыкупу или возврату, выполните запрос [GET campaigns/{campaignId}/orders/{orderId}/returns/{returnId}](../../reference/orders/getReturn.md).

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый невыкуп или возврат.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturns
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Идентификаторы заказов — для фильтрации результатов.

          Несколько идентификаторов перечисляются через запятую без пробела.
        in: query
        name: orderIds
        required: false
        schema:
          items:
            example: 123543
            format: int64
            type: integer
          maxItems: 50
          type: array
          uniqueItems: true
      - description: |
          Статусы невыкупов или возвратов — для фильтрации результатов.

          Несколько статусов перечисляются через запятую.
        example: "STARTED_BY_USER,WAITING_FOR_DECISION"
        in: query
        name: statuses
        required: false
        schema:
          items:
            $ref: '#/components/schemas/RefundStatusType'
          type: array
          uniqueItems: true
      - description: |
          Тип заказа для фильтрации:

          * `UNREDEEMED` — невыкуп.

          * `RETURN` — возврат.

          Если не указать, в ответе будут и невыкупы, и возвраты.
        in: query
        name: type
        required: false
        schema:
          $ref: '#/components/schemas/ReturnType'
      - description: |
          Начальная дата для фильтрации невыкупов или возвратов по дате обновления.

          Формат: `ГГГГ-ММ-ДД`.
        example: 2022-10-31
        in: query
        name: fromDate
        required: false
        schema:
          format: date
          type: string
      - description: |
          Конечная дата для фильтрации невыкупов или возвратов по дате обновления.

          Формат: `ГГГГ-ММ-ДД`.
        example: 2022-11-30
        in: query
        name: toDate
        required: false
        schema:
          format: date
          type: string
      - deprecated: true
        description: |
          {% note warning "Вместо него используйте `fromDate`." %}

           

          {% endnote %}

          Начальная дата для фильтрации невыкупов или возвратов по дате обновления.
        example: 2022-10-31
        in: query
        name: from_date
        required: false
        schema:
          format: date
          type: string
      - deprecated: true
        description: |
          {% note warning "Вместо него используйте `toDate`." %}

           

          {% endnote %}

          Конечная дата для фильтрации невыкупов или возвратов по дате обновления.
        example: 2022-11-30
        in: query
        name: to_date
        required: false
        schema:
          format: date
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnsResponse'
          description: Постраничные невыкупы или возвраты магазина.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список невыкупов и возвратов
      tags:
      - returns
      - fbs
      - dbs
      - express
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getReturn.md) %}

        Получает информацию по одному невыкупу или возврату.

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый невыкуп или возврат.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturn
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор невыкупа или возврата.
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReturnResponse'
          description: Детали невыкупа или возврата.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о невыкупе или возврате
      tags:
      - returns
      - fbs
      - dbs
      - express
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/setReturnDecision.md) %}

        Выбирает решение по возврату от покупателя. После этого для подтверждения решения нужно выполнить запрос [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit](../../reference/orders/submitReturnDecision.md).

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: setReturnDecision
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор невыкупа или возврата.
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetReturnDecisionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Детали возврата.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Принятие или изменение решения по возврату
      tags:
      - returns
      - dbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/submit:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/submitReturnDecision.md) %}

        Подтверждает выбранное решение по возврату, отправленное в запросе [POST campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision](../../reference/orders/setReturnDecision.md).

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: submitReturnDecision
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор невыкупа или возврата.
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitReturnDecisionRequest'
        description: description
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Статус выполнения операции.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Подтверждение решения по возврату
      tags:
      - returns
      - dbs
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/application:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getReturnApplication.md) %}

        Загружает заявление покупателя на возврат товара.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturnApplication
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор невыкупа или возврата.
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Заявление на возврат.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение заявления на возврат
      tags:
      - returns
      - fbs
      - fby
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/orders/{orderId}/returns/{returnId}/decision/{itemId}/image/{imageHash}:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getReturnPhoto.md) %}

        Получает фотографии товаров, которые покупатель приложил к заявлению на возврат.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getReturnPhoto
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор заказа.
        in: path
        name: orderId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор невыкупа или возврата.
        in: path
        name: returnId
        required: true
        schema:
          format: int64
          type: integer
      - description: Идентификатор товара в возврате.
        in: path
        name: itemId
        required: true
        schema:
          format: int64
          type: integer
      - description: Хеш ссылки изображения для загрузки.
        in: path
        name: imageHash
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Фотография товаров.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение фотографий товаров в возврате
      tags:
      - returns
      - fbs
      - dbs
      - express
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /regions:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/searchRegionsByName.md) %}

        Возвращает информацию о регионе, удовлетворяющем заданным в запросе условиям поиска.

        Если найдено несколько регионов, удовлетворяющих условиям поиска, возвращается информация по каждому найденному региону (но не более десяти регионов) для возможности определения нужного региона по родительским регионам.

        Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).

        Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.

        |**⚙️ Лимит:** 50 000 запросов в час|
        |-|
      operationId: searchRegionsByName
      parameters:
      - description: |
          Название региона.

          Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`.
        in: query
        name: name
        required: true
        schema:
          type: string
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResponse'
          description: Список найденных регионов.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Поиск регионов по их имени
      tags:
      - regions
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /regions/{regionId}:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/searchRegionsById.md) %}

        Возвращает информацию о регионе.

        Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).

        Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.

        |**⚙️ Лимит:** 50 000 запросов в час|
        |-|
      operationId: searchRegionsById
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
        in: path
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsResponse'
          description: Найденный регион.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о регионе
      tags:
      - regions
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /regions/{regionId}/children:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/searchRegionChildren.md) %}

        Возвращает информацию о регионах, являющихся дочерними по отношению к региону, идентификатор которого указан в запросе.

        Для методов `GET regions`, `GET regions/{regionId}` и `GET regions/{regionId}/children` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество регионов, информация о которых запрошена при помощи этих методов (не более 100 000 регионов).

        Объем запросов к ресурсу, который возможно выполнить в течение суток, зависит от суммарного количества регионов.

        |**⚙️ Лимит:** 50 000 запросов в час|
        |-|
      operationId: searchRegionChildren
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
        in: path
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          {% note warning "Если в методе есть `page_token`" %}

          Используйте его вместо параметра `page`.

          [Подробнее о типах пагинации и их использовании](../../concepts/pagination.md)

          {% endnote %}

          Номер страницы результатов.

          Используется вместе с параметром `page_size`.

          `page_number` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          maximum: 10000
          type: integer
      - description: |
          Размер страницы.

          Используется вместе с параметром `page_number`.

          `page_size` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionWithChildrenResponse'
          description: "Регионы, являющиеся дочерними к указанному в запросе."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о дочерних регионах
      tags:
      - regions
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /regions/countries:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getRegionsCodes.md) %}

        Возвращает список стран с их кодами в формате ISO 3166-1 alpha-2.

        Страна производства `countryCode` понадобится при продаже товаров из-за рубежа для бизнеса. [Инструкция](../../step-by-step/business-info.md)

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getRegionsCodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRegionsCodesResponse'
          description: Список стран с их кодами в формате ISO 3166-1 alpha-2.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список допустимых кодов стран
      tags:
      - regions
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /campaigns/{campaignId}/shipments/reception-transfer-act:
    get:
      description: "{% include notitle [access](../../_auto/method_scopes/downloadShipmentReceptionTransferAct.md)\
        \ %}\n\nЗапрос подтверждает ближайшую отгрузку и возвращает акт приема-пер\
        едачи в формате PDF.\n\n{% note warning \"Экспресс‑доставка\" %}\n\nЕсли в\
        аш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам [Я\
        ндекс Go](https://go.yandex/), подготавливать акт приема‑передачи не нужно\
        .\n\n{% endnote %}\n\nВ акт входят собранные и готовые к отправке заказы,\
        \ которые отгружаются в сортировочный центр или пункт приема или курьерам\
        \ Маркета.\n\nПри формировании акта Маркет автоматически находит и подстав\
        ляет в шаблон следующие данные:\n\n{% cut \"Данные, из которых Маркет форм\
        ирует акт\" %}\n\n#|\n|| **Данные в акте**\t                             \
        \    | **Описание**                                                      \
        \                                                                        \
        \                                                                        \
        \                                                   ||\n|| Отправитель\t \
        \                                      | Название вашего юридического лица\
        , указанное в кабинете продавца на Маркете.                              \
        \                                                                        \
        \                                                                        \
        \           ||\n|| Исполнитель                                         | Н\
        азвание юридического лица сортировочного центра или службы доставки.     \
        \                                                                        \
        \                                                                        \
        \                                           ||\n|| № отправления в системе\
        \ заказчика                   |\n  {% note warning \"Поле больше не исполь\
        зуется\" %}\n\n  \_\n\n  {% endnote %}\n\n  Ваш идентификатор заказа, кото\
        рый вы указали в ответе на запрос `POST order/accept` от Маркета.        \
        \                                                                        \
        \                                                                        \
        \              ||\n|| № отправления в системе исполнителя (субподрядчика)\
        \ | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).\
        \                                                                        \
        \                                                     ||\n|| Объявленная ц\
        енность                                | Общая сумма заказа без учета стои\
        мости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md)\
        \ или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).\
        \                       ||\n|| Стоимость всех товаров в заказе           \
        \          | Стоимость всех заказанных товаров.                          \
        \                                                                        \
        \                                                                        \
        \                                                         ||\n|| Вес     \
        \                                            | Масса брутто грузового мест\
        а (суммарная масса упаковки и содержимого), как в выходных данных запроса\
        \ [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md)\
        \ или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).\
        \ ||\n|| Количество мест                                     | Количество\
        \ грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md)\
        \ или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).\
        \                                     ||\n|#\n\n{% endcut %}\n\nОстальные\
        \ поля нужно заполнить самостоятельно в распечатанном акте.\n|**⚙️ Лимит:**\
        \ 100 запросов в час|\n|-|\n"
      operationId: downloadShipmentReceptionTransferAct
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор склада.
        example: 123123
        in: query
        name: warehouse_id
        required: false
        schema:
          format: int32
          minimum: 1
          type: integer
      - description: |
          Логин пользователя в Яндекс ID, от имени которого будет подписываться электронный акт приема-передачи.

          Указывается без `@yandex.ru`.

          Где его найти:

          * на странице [Яндекс ID](https://id.yandex.ru);
          * в [кабинете продавца на Маркете](https://partner.market.yandex.ru/):

            * слева снизу под иконкой пользователя;
            * на странице **Настройки** → **Сотрудники и доступы**.
        in: query
        name: signatory
        required: false
        schema:
          type: string
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Акт приема-передачи в формате PDF.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Подтверждение ближайшей отгрузки и получение акта приема-передачи для
        нее
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getShipment.md) %}

        Возвращает информацию об отгрузке по ее идентификатору.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getShipment
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Возвращать ли отмененные заказы.

          Значение по умолчанию: `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.
        in: query
        name: cancelledOrders
        required: false
        schema:
          default: true
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShipmentResponse'
          description: Найденная отгрузка.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации об одной отгрузке
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/info:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getShipmentOrdersInfo.md) %}

        Возвращает информацию о возможности печати ярлыков-наклеек для заказов в отгрузке.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getShipmentOrdersInfo
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetShipmentOrdersInfoResponse'
          description: Информация по годным/негодным для печати ярлыков заказам в
            отгрузке.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации о возможности печати ярлыков
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/confirm:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/confirmShipment.md) %}

        Подтверждает отгрузку товаров в сортировочный центр или пункт приема заказов.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: confirmShipment
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmShipmentRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Подтверждение отгрузки
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/act:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/downloadShipmentAct.md) %}

        {% note warning "Экспресс‑доставка" %}

        Если ваш магазин подключен к экспресс‑доставке и вы отгружаете заказы курьерам Яндекс Go, подготавливать акт приема‑передачи не нужно.

        {% endnote %}

        Запрос формирует акт приема-передачи заказов, входящих в отгрузку, и возвращает акт в формате PDF. В акте содержатся собранные и готовые к отправке заказы.

        При формировании акта Маркет автоматически находит и подставляет в шаблон следующие данные:

        {% cut "Данные, из которых Маркет формирует акт" %}

        #|
        || **Данные в акте**                                         | **Описание**                                                                                                                                                                                                                                                         ||
        || Дата                                                      | Дата запроса.                                                                                                                                                                                                                                                        ||
        || Отправитель                                               | Название вашего юридического лица, указанное в кабинете продавца на Маркете.                                                                                                                                                                                         ||
        || Исполнитель                                               | Название юридического лица сортировочного центра или службы доставки.                                                                                                                                                                                                ||
        || № отправления в системе заказчика                         |
          {% note warning "Поле больше не используется" %}

           

          {% endnote %}

          Ваш идентификатор заказа, который вы указали в ответе на запрос `POST order/accept` от Маркета.                                                                                                                                                                      ||
        || № отправления в системе исполнителя (субподрядчика)       | Идентификатор заказа на Маркете, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md).                                                                                                                             ||
        || Объявленная ценность                                      | Общая сумма заказа без учета стоимости доставки, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                       ||
        || Вес                                                       | Масса брутто грузового места (суммарная масса упаковки и содержимого), как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md). ||
        || Количество мест                                           | Количество грузовых мест в заказе, как в выходных данных запроса [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).                                     ||
        |#

        {% endcut %}

        Остальные поля нужно заполнить самостоятельно в распечатанном акте.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: downloadShipmentAct
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Акт приема-передачи для отгрузки в формате PDF.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение акта приема-передачи
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/inbound-act:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/downloadShipmentInboundAct.md) %}

        Возвращает фактический акт приема-передачи для заданной отгрузки.

        Такой акт становится доступен спустя несколько часов после завершения отгрузки. Он может понадобиться, если после отгрузки обнаружатся расхождения.

        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: downloadShipmentInboundAct
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: Акт в формате PDF.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение фактического акта приема-передачи
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/transportation-waybill:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/downloadShipmentTransportationWaybill.md) %}

        Возвращает транспортную накладную для заданной отгрузки.

        Транспортная накладная понадобится, если вы отгружаете товары непосредственно со своего склада. [Подробно об этом способе отгрузки](https://yandex.ru/support/marketplace/orders/fbs/settings/shipment.html#at-your-warehouse)

        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: downloadShipmentTransportationWaybill
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
          description: Транспортная накладная в формате XLSX.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение транспортной накладной
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/discrepancy-act:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/downloadShipmentDiscrepancyAct.md) %}

        Возвращает акт расхождений для заданной отгрузки.
        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: downloadShipmentDiscrepancyAct
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/vnd.ms-excel:
              schema:
                format: binary
                type: string
          description: Акт расхождений в формате XLSX.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение акта расхождений
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/setShipmentPalletsCount.md) %}

        Передает Маркету количество коробов или палет в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).

        Получить PDF-файл с ярлыками для упаковок можно с помощью запроса [GET campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels](../../reference/shipments/downloadShipmentPalletLabels.md).
        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: setShipmentPalletsCount
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetShipmentPalletsCountRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Имеет значение только тип ответа. Если ответ `ОК`, количес\
            тво упаковок записано."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача количества упаковок в отгрузке
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallet/labels:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/downloadShipmentPalletLabels.md) %}

        PDF-файл с ярлыками на каждый короб или палету в отгрузке для доверительной приемки. Подробнее про доверительную приемку написано в [Справке Маркета](https://yandex.ru/support/marketplace/orders/fbs/process.html#acceptance).

        Распечатайте по несколько копий каждого ярлыка: на одну тару нужно наклеить минимум 2 ярлыка с разных сторон.

        Количество упаковок в отгрузке задается в запросе [PUT campaigns/{campaignId}/first-mile/shipments/{shipmentId}/pallets](../../reference/shipments/setShipmentPalletsCount.md).
        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: downloadShipmentPalletLabels
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Формат страниц PDF-файла с ярлыками:

          * `A4` — по 16 ярлыков на странице.
          * `A8` — по одному ярлыку на странице.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ShipmentPalletLabelPageFormatType'
      responses:
        "200":
          content:
            application/pdf:
              schema:
                format: binary
                type: string
          description: PDF‑файл с ярлыками на все упаковки в отгрузке.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Ярлыки для доверительной приемки
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /campaigns/{campaignId}/first-mile/shipments:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/searchShipments.md) %}

        Возвращает информацию об отгрузках по заданным параметрам:

        * дате;
        * статусу;
        * идентификаторам заказов.

        Результаты возвращаются постранично.
        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: searchShipments
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchShipmentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchShipmentsResponse'
          description: Найденные отгрузки.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации о нескольких отгрузках
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/first-mile/shipments/{shipmentId}/orders/transfer:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/transferOrdersFromShipment.md) %}

        Переносит указанные заказы из указанной отгрузки в следующую отгрузку. [Что такое отгрузка?](https://yandex.ru/support/marketplace/orders/fbs/process.html#ship)

        Используйте этот запрос, если не успеваете собрать и упаковать заказы вовремя.

        {% note warning "Такие переносы снижают индекс качества магазина" %}

        Этот запрос предназначен для исключительных случаев. Если вы будете переносить заказы слишком часто, магазин столкнется с ограничениями. [Что за ограничения?](https://yandex.ru/support/marketplace/quality/score/fbs.html)

        {% endnote %}

        Переносить заказы можно, если до формирования отгрузки осталось больше получаса.

        Перенос происходит не мгновенно, а занимает несколько минут.

        |**⚙️ Лимит:** 200 запросов в час|
        |-|
      operationId: transferOrdersFromShipment
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор отгрузки.
        in: path
        name: shipmentId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferOrdersFromShipmentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Запрос на перенос заказов проверен и принят, и они будут п\
            еренесены спустя несколько минут."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Перенос заказов в следующую отгрузку
      tags:
      - shipments
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /businesses/{businessId}/offer-mappings/delete:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deleteOffers.md) %}

        Удаляет товары из каталога.

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: deleteOffers
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOffersResponse'
          description: "Если удалось удалить не все товары, с ответом 200 вернется\
            \ список тех, что были в запросе, но остались в магазине."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товаров из каталога
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /businesses/{businessId}/offer-mappings:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOfferMappings.md) %}

        Возвращает список товаров в каталоге, их категории на Маркете и характеристики каждого товара.

        Можно использовать тремя способами:
        * задать список интересующих SKU;
        * задать фильтр — в этом случае результаты возвращаются постранично;
        * не передавать тело запроса, чтобы получить список всех товаров в каталоге.

        |**⚙️ Лимит:** 600 запросов в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: getOfferMappings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: |
          Язык, на котором принимаются и возвращаются значения в параметрах `name` и `description`.

          Значение по умолчанию: `RU`.
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/CatalogLanguageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferMappingsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferMappingsResponse'
          description: Информация о товарах в каталоге.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о товарах в каталоге
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /businesses/{businessId}/offer-mappings/update:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOfferMappings.md) %}

        Добавляет товары в каталог и передает:

        * их категории на Маркете и категорийные характеристики;
        * основные характеристики;
        * цены на товары в кабинете.

        Также объединяет товары на карточке, редактирует и удаляет информацию об уже добавленных товарах, в том числе цены в кабинете и категории товаров.

        Список категорий Маркета можно получить с помощью запроса [POST categories/tree](../../reference/categories/getCategoriesTree.md), а характеристики товаров по категориям с помощью [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).

        {% cut "Добавить новый товар" %}

        Передайте его с новым идентификатором, который раньше никогда не использовался в каталоге.

        Обязательно укажите параметры: `offerId`, `name`, `marketCategoryId`, `pictures`, `vendor`, `description`.

        Старайтесь сразу передать как можно больше информации — она потребуется Маркету для подбора подходящей карточки или создания новой.

        Если известно, какой карточке на Маркете соответствует товар, можно сразу указать идентификатор этой карточки (**SKU на Маркете**) в поле `marketSKU`.

        **Для продавцов Market Yandex Go:**

        Когда вы добавляете товары в каталог, указывайте значения параметров `name` и `description` на русском языке. Чтобы на витрине они отображались и на другом языке, еще раз выполните запрос `POST businesses/{businessId}/offer-mappings/update`, где укажите:

          * язык в параметре `language`;
          * значения параметров `name` и `description` на указанном языке.

          Повторно передавать остальные характеристики товара не нужно.

        {% endcut %}

        {% cut "Изменить информацию о товаре" %}

        Передайте новые данные, указав в `offerId` соответствующий **ваш SKU**.

        Поля, в которых ничего не меняется, можно не передавать.

        {% endcut %}

        {% cut "Удалить переданные ранее параметры товара" %}

        В `deleteParameters` укажите значения параметров, которые хотите удалить. Можно передать сразу несколько значений.

        Для параметров с типом `string` также можно передать пустое значение.

        {% endcut %}

        Параметр `offerId` должен быть **уникальным** для всех товаров, которые вы передаете.

        {% note warning "Правила использования SKU" %}

        * У каждого товара SKU должен быть свой.

        * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

        SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

        {% endnote %}

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 100 товаров в одном запросе|
        |-|
      operationId: updateOfferMappings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Язык, на котором принимаются и возвращаются значения в параметрах `name` и `description`.

          Значение по умолчанию: `RU`.
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/CatalogLanguageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferMappingsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOfferMappingsResponse'
          description: |
            Запрос выполнен корректно, данные обработаны.

            {% note warning "Ответ 200 сам по себе не значит, что переданные значения корректны" %}

            Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.

            Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.

            {% endnote %}
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление товаров в каталог и изменение информации о них
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /businesses/{businessId}/offer-mappings/suggestions:
    post:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getSuggestedOfferMappings.md) %}

        Возвращает идентификаторы карточек на Маркете, которые соответствуют товарам с заданными параметрами.

        Пользоваться этим запросом необязательно: он просто помогает заранее убедиться, что Маркет верно определяет карточки по предоставленным вами данным.

        **Как пользоваться запросом**

        1. Передайте Маркету список товаров, которые нужно проверить.
        2. В ответ вы получите список SKU на Маркете с расшифровкой: названием, идентификатором модели, категорией.
        3. Если расшифровки мало, вы можете открыть карточку. Для этого перейдите по ссылке вида `https://market.yandex.ru/product/<marketModelId>?sku=<marketSku>`.
        4. Если карточка соответствует товару, значит его можно добавлять в каталог с теми данными, что вы указали. Если карточка определилась неправильно — проверьте данные о товаре. Возможно, их нужно уточнить или дополнить. Кроме того, на этапе добавления товара вы можете указать `marketSKU`, который ему подходит по вашему мнению.

        {% note info "Как определить `marketSku` товара, найденного на Маркете?" %}

        Он есть в адресе страницы товара — расположен после `sku=`.

        Например, `https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016`

        {% endnote %}

        |**⚙️ Лимит:** 100 000 товаров в час|
        |-|
      operationId: getSuggestedOfferMappings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuggestedOfferMappingsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuggestedOfferMappingsResponse'
          description: |
            Подобранные карточки на Маркете.

            По результатам проверки товара полученная через этот запрос карточка может быть заменена на другую.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Просмотр карточек на Маркете, которые подходят вашим товарам"
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /businesses/{businessId}/offer-mappings/archive:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/addOffersToArchive.md) %}

        Помещает товары в архив. Товары, помещенные в архив, скрыты с витрины во всех магазинах кабинета.

        {% note warning "В архив нельзя отправить товар, который хранится на складе Маркета" %}

        Вначале такой товар нужно распродать или вывезти.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: addOffersToArchive
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddOffersToArchiveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddOffersToArchiveResponse'
          description: |
            Если некоторые товары добавить в архив не удалось, в ответе 200 будет их список.

            Список успешно добавленных товаров не возвращается.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление товаров в архив
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /businesses/{businessId}/offer-mappings/unarchive:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deleteOffersFromArchive.md) %}

        Восстанавливает товары из архива.

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: deleteOffersFromArchive
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteOffersFromArchiveRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteOffersFromArchiveResponse'
          description: |
            Если некоторые товары восстановить из архива не удалось, в ответе 200 будет их список.

            Список успешно восстановленных товаров не возвращается.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товаров из архива
      tags:
      - business-offer-mappings
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /campaigns/{campaignId}/offer-mapping-entries:
    get:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOfferMappingEntries.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md)

        {% endnote %}

        Для каждого товара, который вы размещаете на Маркете, возвращается информация о карточках Маркета, к которым привязан этот товар:

        * Идентификатор текущей карточки (marketSku), карточки, которая проходит модерацию и последней отклоненной карточки.
        * Описание товара, которое указано на карточке Маркета. Например, размер упаковки и вес товара.

        Результаты возвращаются постранично. Выходные данные содержат идентификатор следующей страницы.

        {% note info "Как считается количество товаров в каталоге магазина" %}

        По данным за последние семь дней (не включая сегодня).

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: суточный лимит товаров — количество товаров в каталоге магазина * 25)
      operationId: getOfferMappingEntries
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор товара в каталоге.
        in: query
        name: offer_id
        required: false
        schema:
          items:
            type: string
          type: array
      - description: |
          Ваш SKU товара.

          Параметр может быть указан несколько раз, например:

          ```text translate=no
          ...shop_sku=123&shop_sku=129&shop_sku=141...
          ```

          В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
        in: query
        name: shop_sku
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      - description: Тип маппинга.
        in: query
        name: mapping_kind
        required: false
        schema:
          $ref: '#/components/schemas/OfferMappingKindType'
      - description: |
          Фильтрация по статусу публикации товара:

          * `READY` — товар прошел модерацию.
          * `IN_WORK` — товар проходит модерацию.
          * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.
          * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.
          * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
          * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
          * `OTHER` — товар не прошел модерацию по другой причине.

          Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```text translate=no
          ...status=READY,IN_WORK...
          ...status=READY&status=IN_WORK...
          ```

          В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
        in: query
        name: status
        required: false
        schema:
          items:
            $ref: '#/components/schemas/OfferProcessingStatusType'
          type: array
      - description: |
          Фильтрация по планам поставок товара:

          * `ACTIVE` — поставки будут.
          * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.
          * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.

          Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```text translate=no
          ...availability=INACTIVE,DELISTED...
          ...availability=INACTIVE&availability=DELISTED...
          ```

          В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
        in: query
        name: availability
        required: false
        schema:
          items:
            $ref: '#/components/schemas/OfferAvailabilityStatusType'
          type: array
      - description: |
          Фильтрация по идентификатору категории на Маркете.

          Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).

          Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```text translate=no
          ...category_id=14727164,14382343...
          ...category_id=14727164&category_id=14382343...
          ```

          В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
        in: query
        name: category_id
        required: false
        schema:
          items:
            type: integer
          type: array
      - description: |
          Фильтрация по бренду товара.

          Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

          ```text translate=no
          ...vendor=Aqua%20Minerale,Borjomi...
          ...vendor=Aqua%20Minerale&vendor=Borjomi...
          ```

          Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.

          Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).

          В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
        in: query
        name: vendor
        required: false
        schema:
          items:
            type: string
          type: array
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferMappingEntriesResponse'
          description: Информация о товарах в каталоге.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список товаров в каталоге
      tags:
      - offer-mappings
      - fby
      - fbs
      - express
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /campaigns/{campaignId}/offer-mapping-entries/updates:
    post:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOfferMappingEntries.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md)

        {% endnote %}

        Добавляет товары, указанные в запросе, в ваш каталог товаров и редактирует уже имеющиеся товары.

        Информацию о товарах нужно передать в теле POST-запроса.

        У каждого товара должен быть ваш SKU — уникальный код, который вы используете для идентификации товара:

        * Чтобы добавить в каталог новый товар, укажите в параметре `shopSku` ваш SKU, которого еще нет в каталоге.
        * Чтобы отредактировать товар из каталога, укажите в параметре `shopSku` ваш SKU этого товара в каталоге.

        В обоих случаях в запросе нужно передать полное описание товара, даже если вы хотите изменить только несколько характеристик.

        Если вы знаете, какой карточке товара на Маркете соответствует ваш товар, укажите ее идентификатор (SKU на Маркете) во входном параметре mapping. Получить SKU на Маркете рекомендованной карточки товара можно через кабинет. Если SKU на Маркете не указан, сотрудники Маркета сами подберут или создадут подходящую карточку товара, либо у него появится статус `NEED_CONTENT` (нужно найти карточку или создать ее самостоятельно) в выходных данных запроса [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        Перед публикацией товары проходят модерацию. Если в одном из отправленных товаров найдена ошибка, ответ на запрос будет иметь HTTP-код 400 Bad Request, и ни один из товаров не отправится на модерацию. При этом если вы не передадите все обязательные параметры для какого‑либо товара, после модерации у него появится статус `NEED_INFO` (в описании товара не хватает информации) в выходных данных запроса [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        В одном запросе можно добавить не более 500 товаров.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 5 000 товаров в минуту|
        |-|
      operationId: updateOfferMappingEntries
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferMappingEntryRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Статус выполнения операции.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление и редактирование товаров в каталоге
      tags:
      - offer-mappings
      - fby
      - fbs
      - express
      - dbs
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /campaigns/{campaignId}/offer-mapping-entries/suggestions:
    post:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getSuggestedOfferMappingEntries.md) %}

        Возвращает идентификаторы карточек товаров на Маркете, рекомендованных для ваших товаров.

        Каждому товару, который вы размещаете, должна соответствовать карточка товара на Маркете со своим идентификатором — SKU на Маркете. Он указывается в URL карточки товара, после «...sku=», например:

        ##https://market.yandex.ru/product--yandex-kniga/484830016?sku=484830016…##

        Чтобы получить для товаров рекомендованные SKU на Маркете, передайте в теле POST-запроса как можно больше информации о них: названия, производителей, штрихкоды, цены и т. д.

        Полученные SKU можно передать вместе с информацией о ваших товарах с помощью запроса [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        В одном запросе можно получить не более 500 рекомендаций.

        |**⚙️ Лимит:** 100 000 рекомендаций в час|
        |-|
      operationId: getSuggestedOfferMappingEntries
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSuggestedOfferMappingEntriesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSuggestedOfferMappingEntriesResponse'
          description: Информация о товарах в каталоге.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Рекомендованные карточки для товаров
      tags:
      - offer-mappings
      - fby
      - fbs
      - express
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /businesses/{businessId}/offer-prices/updates:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateBusinessPrices.md) %}

        Устанавливает цены, которые действуют во всех магазинах. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).

        При необходимости передавайте НДС с помощью параметра `vat` в запросе [POST campaigns/{campaignId}/offers/update](../../reference/assortment/updateCampaignOffers.md).

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: updateBusinessPrices
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBusinessPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Маркет принял информацию о новых ценах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Установка цен на товары для всех магазинов
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - pricing
  /campaigns/{campaignId}/offer-prices/updates:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updatePrices.md) %}

        Устанавливает цены на товары в магазине. Чтобы получить рекомендации Маркета, касающиеся цен, выполните запрос [POST businesses/{businessId}/offers/recommendations](../../reference/business-assortment/getOfferRecommendations.md).

        {% note warning "Метод только для отдельных магазинов" %}

        Вам доступен этот метод, если в кабинете продавца на Маркете есть возможность установить уникальные цены в отдельных магазинах. Как это проверить — в методе [POST businesses/{businessId}/settings](../../reference/businesses/getBusinessSettings.md) в параметре `onlyDefaultPrice` возвращается значение `false`.

        В ином случае используйте метод управления ценами, которые действуют во всех магазинах, — [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).

        {% endnote %}

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: updatePrices
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Маркет принял информацию о новых ценах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Установка цен на товары в конкретном магазине
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - pricing
  /campaigns/{campaignId}/offer-prices:
    get:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getPrices.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST campaigns/{campaignId}/offer-prices](../../reference/assortment/getPricesByOfferIds.md)

        {% endnote %}

        Возвращает список цен, установленных вами на товары любым способом: например, через партнерский API или в файле с каталогом.

        {% note info "Как считается общее количество товаров" %}

        По данным за последние семь дней (не включая сегодня) и не может быть выше 2 миллионов.

        {% endnote %}

        Способы установки цен описаны [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/assortment/operations/prices.html).

        |**⚙️ Лимит:** ```(количество товаров партнера на витрине) * 25``` товаров в сутки|
        |-|
      operationId: getPrices
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      - description: Фильтр по нахождению в архиве.
        in: query
        name: archived
        required: false
        schema:
          default: false
          type: boolean
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricesResponse'
          description: Список всех товаров с установленными ценами.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список цен
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getPricesByOfferIds.md) %}

        Возвращает список цен на указанные товары в магазине.

        {% note warning "Метод только для отдельных магазинов" %}

        Используйте этот метод, только если в кабинете установлены уникальные цены в отдельных магазинах.

        Для просмотра цен, которые действуют во всех магазинах, используйте [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md).

        {% endnote %}

        |**⚙️ Лимит:** рассчитывается по [формуле](*rule)|
        |-|

        [//]: <> (rule: суточный лимит товаров — количество товаров на витрине * 25)
      operationId: getPricesByOfferIds
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPricesByOfferIdsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPricesByOfferIdsResponse'
          description: Список товаров с установленными для заданного магазина ценами.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Просмотр цен на указанные товары в магазине
      tags:
      - prices
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
  /campaigns/{campaignId}/offer-prices/suggestions:
    post:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getSuggestedPrices.md) %}

        {% note warning "Не используйте его, это может привести к ошибкам. Информацию о ценах вы можете получить в помощью [отчета «Цены на рынке»](../../reference/reports/generatePricesReport.md)." %}

         

        {% endnote %}

        {% note warning "Метод только для некоторых магазинов" %}

        Этот метод подходит только тем магазинам, которые устанавливают цены на товары в рублях.

        {% endnote %}

        Возвращает цены для продвижения товаров, которые вы размещаете на Маркете.

        Товары, для которых нужно получить цены, передаются в теле POST-запроса.

        Цены для продвижения зависят от цен, установленных на товары другими партнерами. Если один товар поставляют несколько партнеров, на Маркете сначала продается товар с более низкой ценой. Когда закончится товар по низкой цене, начнет продаваться товар по более высокой цене.

        Выходные данные содержат для каждого товара несколько цен, соответствующих разным типам продвижения.

        Установить цены на товары можно с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md) или другими способами: например, указать их в файле с каталогом. Также вы можете использовать стратегии для автоматической установки рекомендованных цен или минимальных цен на Маркете.

        Подробно об автоматическом управлении ценами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/prices.html).

        |**⚙️ Лимит:** 100 000 товаров в час|
        |-|
      operationId: getSuggestedPrices
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SuggestPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuggestPricesResponse'
          description: Список цен для продвижения на Маркете.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Цены для продвижения товаров
      tags:
      - prices
      - fby
      - fbs
      - express
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
  /businesses/{businessId}/price-quarantine:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getBusinessQuarantineOffers.md) %}

        Возвращает список товаров, которые находятся в карантине по цене, установленной для всех магазинов кабинета.

        Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST businesses/{businessId}/price-quarantine/confirm](../../reference/business-assortment/confirmBusinessPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).

        {% note info "Что такое карантин?" %}

        Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        {% endnote %}

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: getBusinessQuarantineOffers
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuarantineOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuarantineOffersResponse'
          description: Список товаров в карантине.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Список товаров, находящихся в карантине по цене в кабинете"
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
  /businesses/{businessId}/price-quarantine/confirm:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/confirmBusinessPrices.md) %}

        Подтверждает во всех магазинах цену на товары, которые попали в карантин, и удаляет их из карантина.

        Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST businesses/{businessId}/price-quarantine](getBusinessQuarantineOffers.md).

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 200 товаров в одном запросе|
        |-|
      operationId: confirmBusinessPrices
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Ответ 200 обозначает, что цены подтверждены."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товара из карантина по цене в кабинете
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - pricing
  /campaigns/{campaignId}/price-quarantine:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCampaignQuarantineOffers.md) %}

        Возвращает список товаров, которые находятся в карантине по цене, установленной в заданном магазине.

        Проверьте цену каждого из товаров, который попал в карантин. Если ошибки нет и цена правильная, подтвердите ее с помощью запроса [POST campaigns/{campaignId}/price-quarantine/confirm](../../reference/assortment/confirmCampaignPrices.md). Если цена в самом деле ошибочная, установите верную с помощью запроса [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).

        {% note info "Что такое карантин?" %}

        Товар попадает в карантин, если его цена меняется слишком резко или слишком сильно отличается от рыночной. [Подробнее](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        {% endnote %}

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: getCampaignQuarantineOffers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQuarantineOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuarantineOffersResponse'
          description: Список товаров в карантине.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Список товаров, находящихся в карантине по цене в магазине"
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
  /campaigns/{campaignId}/price-quarantine/confirm:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/confirmCampaignPrices.md) %}

        Подтверждает в заданном магазине цену на товары, которые попали в карантин, и удаляет их из карантина.

        Товар попадает в карантин, если его цена меняется слишком резко. [Как настроить карантин](https://yandex.ru/support/marketplace/assortment/operations/prices.html#quarantine)

        Чтобы увидеть список товаров, которые попали в карантин, используйте запрос [POST campaigns/{campaignId}/price-quarantine](getCampaignQuarantineOffers.md).

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: confirmCampaignPrices
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfirmPricesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Ответ 200 обозначает, что цены подтверждены."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товара из карантина по цене в магазине
      tags:
      - price-quarantine
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - pricing
  /campaigns/{campaignId}/hidden-offers:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getHiddenOffers.md) %}

        Возвращает список скрытых вами товаров для заданного магазина.

        В списке будут товары, скрытые любым способом — через API, с помощью YML-фида, в кабинете и так далее.

        |**⚙️ Лимит:** 10 000 товаров в минуту, не более 500 товаров в одном запросе|
        |-|
      operationId: getHiddenOffers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор скрытого предложения.
        in: query
        name: offer_id
        schema:
          items:
            $ref: '#/components/schemas/ShopSku'
          type: array
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetHiddenOffersResponse'
          description: Информация о скрытых вами товарах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о скрытых вами товарах
      tags:
      - hidden-offers
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/addHiddenOffers.md) %}

        Скрывает товары магазина на Маркете.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: addHiddenOffers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddHiddenOffersRequest'
        description: Запрос на скрытие оферов.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Настройки скрытия получены и скоро вступят в силу.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Скрытие товаров и настройки скрытия
      tags:
      - hidden-offers
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /campaigns/{campaignId}/hidden-offers/delete:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deleteHiddenOffers.md) %}

        Возобновляет показ скрытых вами товаров магазина на Маркете.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: deleteHiddenOffers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteHiddenOffersRequest'
        description: Запрос на возобновление показа оферов.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Показ товаров возобновлен.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Возобновление показа товаров
      tags:
      - hidden-offers
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /campaigns/{campaignId}/offers/stocks:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getStocks.md) %}

        Возвращает данные об остатках товаров (для всех моделей) и об [оборачиваемости](*turnover) товаров (для модели FBY).

        **Для модели FBY:** информация об остатках может возвращаться с нескольких складов Маркета, у которых будут разные `warehouseId`. Получить список складов Маркета можно с помощью метода [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).

        {% note info "По умолчанию данные по оборачивамости не возращаются" %}

        Чтобы они были в ответе, передавайте `true` в поле `withTurnover`.

        {% endnote %}

        |**⚙️ Лимит:** 100 000 товаров в минуту|
        |-|

        [//]: <> (turnover: Среднее количество дней, за которое товар продается. Подробно об оборачиваемости рассказано в Справке Маркета для продавцов https://yandex.ru/support/marketplace/analytics/turnover.html.)
      operationId: getStocks
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetWarehouseStocksRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehouseStocksResponse'
          description: Остатки товаров на складах.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация об остатках и оборачиваемости
      tags:
      - stocks
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateStocks.md) %}

        Передает данные об остатках товаров на витрине.

        Для группы складов передавайте остатки только для **одного любого склада**. Информация для остальных складов в этой группе обновится автоматически.

        Обязательно указывайте SKU **в точности** так, как он указан в каталоге. Например, _557722_ и _0557722_ — это два разных SKU.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 100 000 товаров в минуту|
        |-|
      operationId: updateStocks
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateStocksRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Передача информации об остатках
      tags:
      - stocks
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /delivery/services:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getDeliveryServices.md) %}

        Возвращает справочник служб доставки: идентификаторы и наименования.
        |**⚙️ Лимит:** 5 000 запросов в час|
        |-|
      operationId: getDeliveryServices
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeliveryServicesResponse'
          description: Информация о службах доставки.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Справочник служб доставки
      tags:
      - delivery-services
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /campaigns/{campaignId}/stats/orders:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOrdersStats.md) %}

        Возвращает информацию по заказам на Маркете, в которых есть ваши товары.

        С помощью нее вы можете собрать статистику по вашим заказам и узнать, например, какие из товаров чаще всего возвращаются покупателями, какие, наоборот, пользуются большим спросом и т. п.

        {% note tip "Информация по созданным или обновленным заказам может появиться с задержкой до 40 минут" %}

        Чтобы получить данные без задержки, используйте [метод получения информации о заказах](../../reference/orders/getOrders.md).

        {% endnote %}

        В одном запросе можно получить информацию не более чем по 200 заказам.

        |**⚙️ Лимит:** 1 000 000 заказов в час|
        |-|
      operationId: getOrdersStats
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOrdersStatsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOrdersStatsResponse'
          description: Информация по заказам.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Детальная информация по заказам
      tags:
      - orders-stats
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/stats/skus:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getGoodsStats.md) %}

        Возвращает подробный отчет по товарам, которые вы разместили на Маркете. С помощью отчета вы можете узнать, например, об остатках на складе, об условиях хранения ваших товаров и т. д.

        |**⚙️ Лимит:** 5 000 товаров в минуту|
        |-|
      operationId: getGoodsStats
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGoodsStatsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoodsStatsResponse'
          description: Отчет по товарам.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по товарам
      tags:
      - goods-stats
      - fby
      - fbs
      - express
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /reports/info/{reportId}:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getReportInfo.md) %}

        Возвращает статус генерации заданного отчета и, если отчет готов, ссылку для скачивания.

        Чтобы воспользоваться этим запросом, вначале нужно запустить генерацию отчета. [Инструкция](../../step-by-step/reports.md)

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getReportInfo
      parameters:
      - description: |
          Идентификатор отчета, который вы получили после запуска генерации.
        in: path
        name: reportId
        required: true
        schema:
          maxLength: 255
          minLength: 1
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetReportInfoResponse'
          description: |
            Статус генерации отчета и ссылка, если она уже есть.

            {% note tip "Статус генерации отчета `FAILED` или `NO_DATA`" %}

            Проверьте корректность запроса на генерацию. Например, верно ли указан идентификатор кампании, период или номер платежного поручения.

            {% endnote %}

             
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение заданного отчета
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /reports/united-netting/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateUnitedNettingReport.md) %}

        Запускает генерацию **отчета по платежам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#all-pay)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        Тип отчета зависит от того, какие поля заполнены в запросе:

        #|
        || **Тип отчета** | **Какие поля нужны** ||
        || О платежах за период | `dateFrom` и `dateTo` ||
        || О платежном поручении | `bankOrderId` и `bankOrderDateTime` ||
        || [О баллах Маркета](*баллы_маркета) | `monthOfYear` ||
        |#

        Заказать отчеты нескольких типов одним запросом нельзя.

        {% include notitle [reports](../../_auto/reports/united/netting/generator/united_netting.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateUnitedNettingReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      - description: Язык отчета.
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/ReportLanguageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedNettingReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по платежам
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
  /reports/united-marketplace-services/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateUnitedMarketplaceServicesReport.md) %}

        Запускает генерацию **отчета по стоимости услуг** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#reports)

        Тип отчета зависит от того, какие поля заполнены в запросе:

        |**Тип отчета**               |**Какие поля нужны**             |
        |-----------------------------|---------------------------------|
        |По дате начисления услуги    |`dateFrom` и `dateTo`            |
        |По дате формирования акта    |`year` и `month`                 |

        Заказать отчеты обоих типов одним запросом нельзя.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/united/services/generator/united_marketplace_services.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateUnitedMarketplaceServicesReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      - description: Язык отчета.
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/ReportLanguageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedMarketplaceServicesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по стоимости услуг
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
  /reports/united-orders/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateUnitedOrdersReport.md) %}

        Запускает генерацию **отчета по заказам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#get-report)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/united/orders/generator/united_orders.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateUnitedOrdersReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      - description: Язык отчета.
        in: query
        name: language
        required: false
        schema:
          $ref: '#/components/schemas/ReportLanguageType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedOrdersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по заказам
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
      - promotion
      - inventory-and-order-processing
  /reports/united-returns/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateUnitedReturnsReport.md) %}

        Запускает генерацию **сводного отчета по невыкупам и возвратам** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/orders/returns/logistic#rejected-orders)

        Отчет содержит информацию о невыкупах и возвратах за указанный период, а также о тех, которые готовы к выдаче.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/united/returns/generator/united_returns.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateUnitedReturnsReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateUnitedReturnsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по невыкупам и возвратам
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
      - inventory-and-order-processing
  /reports/goods-realization/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateGoodsRealizationReport.md) %}

        Запускает генерацию **отчета по реализации** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/ru/accounting/transactions#sales-report)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% list tabs %}

        - FBY, FBS, Экспресс

          {% include notitle [reports](../../_auto/reports/united/statistics/generator/united_statistics_v2.md) %}

        - DBS

          {% include notitle [reports](../../_auto/reports/united/statistics/generator/united_statistics_v2_dbs.md) %}

        {% endlist %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateGoodsRealizationReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsRealizationReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по реализации
      tags:
      - reports
      - fby
      - fbs
      - express
      - dbs
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
  /reports/prices/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generatePricesReport.md) %}

        Запускает генерацию **отчета «Цены на рынке»**.

        В отчете возвращается информация только по 50 000 товаров. Если у вас их больше, используйте фильтры.

        {% note warning "Данные в этом отчете постоянно обновляются" %}

        Поэтому информация в нем и в кабинете продавца на Маркете на странице **Цены** может отличаться.

        {% endnote %}

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/prices/business_prices_v2.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generatePricesReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GeneratePricesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет «Цены на рынке»
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
      - pricing
      - promotion
  /reports/stocks-on-warehouses/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateStocksOnWarehousesReport.md) %}

        Запускает генерацию **отчета по остаткам на складах**. [Что это за отчет](https://yandex.ru/support/marketplace/ru/storage/logistics#remains-history)

        Отчет содержит данные:

        * Для модели FBY — об остатках на складах Маркета.
        * Для остальных моделей — об остатках на соответствующем складе магазина.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/stocks/stocks_on_warehouses.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateStocksOnWarehousesReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateStocksOnWarehousesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по остаткам на складах
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /reports/goods-movement/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateGoodsMovementReport.md) %}

        Запускает генерацию **отчета по движению товаров**. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/reports-fby-fbs.html#flow)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/sku/movement/movement_config.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateGoodsMovementReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsMovementReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по движению товаров
      tags:
      - reports
      - fby
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
      - inventory-and-order-processing
  /reports/shows-sales/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateShowsSalesReport.md) %}

        Запускает генерацию **отчета «Аналитика продаж»** за заданный период. [Что это за отчет](https://yandex.ru/support/marketplace/analytics/shows-sales.html)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/masterstat/sales_funnel_promotions.md) %}

        |**⚙️ Лимит:** 10 запросов в час|
        |-|
      operationId: generateShowsSalesReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShowsSalesReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет «Аналитика продаж»
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
  /reports/competitors-position/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateCompetitorsPositionReport.md) %}

        Запускает генерацию **отчета «Конкурентная позиция»** за заданный период. [Что это за отчет](https://yandex.ru/support2/marketplace/ru/analytics/competitors.html)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% note info "Значение -1 в отчете" %}

        Если в CSV-файле в столбце **POSITION** стоит -1, в этот день не было заказов с товарами в указанной категории.

        {% endnote %}

        {% include notitle [reports](../../_auto/reports/masterstat/competitors_position.md) %}

        |**⚙️ Лимит:** 10 запросов в час|
        |-|
      operationId: generateCompetitorsPositionReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateCompetitorsPositionReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет «Конкурентная позиция»
      tags:
      - reports
      - fby
      - dbs
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - promotion
      - finance-and-accounting
  /reports/goods-turnover/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateGoodsTurnoverReport.md) %}

        Запускает генерацию **отчета по оборачиваемости** за заданную дату.  [Что это за отчет](https://yandex.ru/support/marketplace/ru/storage/logistics#turnover)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/turnover/turnover.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateGoodsTurnoverReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsTurnoverRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по оборачиваемости
      tags:
      - reports
      - fby
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
      - finance-and-accounting
  /reports/boost-consolidated/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateBoostConsolidatedReport.md) %}

        Запускает генерацию **сводного отчета по бусту продаж** за заданный период. [Что такое буст продаж](https://yandex.ru/support/marketplace/ru/marketing/campaigns)

        Отчет содержит информацию по всем кампаниям, созданным и через API, и в кабинете.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/boost/consolidated/business_boost_consolidated.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateBoostConsolidatedReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateBoostConsolidatedRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по бусту продаж
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - promotion
      - finance-and-accounting
      x-restrictions:
      - market-yandex-go
  /reports/documents/shipment-list/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateShipmentListDocumentReport.md) %}

        Запускает генерацию **листа сборки** для отгрузки.

        Узнать статус генерации и получить ссылку на готовый документ можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateShipmentListDocumentReport
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShipmentListDocumentReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый документ."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение листа сборки
      tags:
      - reports
      - fbs
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /reports/shelf-statistics/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateShelfsStatisticsReport.md) %}

        Запускает генерацию **сводного отчета по полкам** — рекламным блокам с баннером или видео и набором товаров. Подробнее о них читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf).

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/incuts/shelfs_statistics.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateShelfsStatisticsReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShelfsStatisticsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по полкам
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
      - promotion
  /reports/documents/labels/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateMassOrderLabelsReport.md) %}

        Запускает генерацию PDF-файла с ярлыками для переданных заказов. Подробно о том, зачем они нужны и как выглядят, рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/fbs/packaging/marking.html).

        Узнать статус генерации и получить ссылку на готовый файл можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: generateMassOrderLabelsReport
      parameters:
      - description: "Настройка размещения ярлыков на странице. Если параметра нет\
          , возвращается PDF с ярлыками формата A7."
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/PageFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateMassOrderLabelsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: |
            В ответ приходит идентификатор, который позволяет узнавать статус генерации и скачать готовый файл.

            Если при генерации не удалось найти часть заказов, в ответе на запрос получения готового файла вернется подстатус `RESOURCE_NOT_FOUND`.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Готовые ярлыки‑наклейки на все коробки в нескольких заказах
      tags:
      - reports
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /reports/goods-feedback/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateGoodsFeedbackReport.md) %}

        Запускает генерацию **отчета по отзывам о товарах**. [Что это за отчет](https://yandex.ru/support/marketplace/ru/marketing/plus-reviews#stat)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/paid_opinion_models/paid_opinion_models.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateGoodsFeedbackReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateGoodsFeedbackRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по отзывам о товарах
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - communication
      x-restrictions:
      - market-yandex-go
  /reports/shows-boost/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateShowsBoostReport.md) %}

        Запускает генерацию **сводного отчета по бусту показов** за заданный период. [Что такое буст показов](https://yandex.ru/support/marketplace/ru/marketing/boost-shows)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/cpm_boost/business_cpm_boost_consolidated.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateShowsBoostReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateShowsBoostRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по бусту показов
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - promotion
      - finance-and-accounting
      x-restrictions:
      - market-yandex-go
  /reports/banners-statistics/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateBannersStatisticsReport.md) %}

        Запускает генерацию **сводного отчета по охватному продвижению**. Что это за отчет: [для баннеров](https://yandex.ru/support/marketplace/ru/marketing/advertising-tools/banner#statistics), [для пуш-уведомлений](https://yandex.ru/support/marketplace/ru/marketing/advertising-tools/push-notifications#statistics).

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/incuts/banners_statistics.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateBannersStatisticsReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateBannersStatisticsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по охватному продвижению
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
      - promotion
      x-restrictions:
      - market-yandex-go
  /reports/jewelry-fiscal/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateJewelryFiscalReport.md) %}

        Запускает генерацию **отчета по заказам с ювелирными изделиями**.

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/identifiers/jewelry/orders_jewelry_fiscal.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateJewelryFiscalReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateJewelryFiscalReportRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по заказам с ювелирными изделиями
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
      - inventory-and-order-processing
  /reports/sales-geography/generate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/generateSalesGeographyReport.md) %}

        Запускает генерацию **отчета по географии продаж**. [Что это за отчет](https://yandex.ru/support/marketplace/ru/analytics/sales-geography)

        Узнать статус генерации и получить ссылку на готовый отчет можно с помощью запроса [GET reports/info/{reportId}](../../reference/reports/getReportInfo.md).

        {% include notitle [reports](../../_auto/reports/locality/locality_offers_report_v2.md) %}

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: generateSalesGeographyReport
      parameters:
      - description: Формат отчета.
        in: query
        name: format
        required: false
        schema:
          $ref: '#/components/schemas/ReportFormatType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateSalesGeographyRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenerateReportResponse'
          description: "В ответ приходит идентификатор, который позволяет узнавать\
            \ статус генерации и скачать готовый отчет."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отчет по географии продаж
      tags:
      - reports
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - finance-and-accounting
  /campaigns/{campaignId}/outlets:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOutlets.md) %}

        Возвращает список точек продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOutlets
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Идентификатор региона.
          Если задать идентификатор родительского региона любого уровня, в выходных данных будут отображены точки продаж всех дочерних регионов.
          Идентификатор региона можно получить c помощью метода [GET regions](../../reference/regions/searchRegionsByName.md).
        in: query
        name: region_id
        required: false
        schema:
          format: int64
          type: integer
      - description: "Идентификатор точки продаж, присвоенный магазином."
        in: query
        name: shop_outlet_code
        required: false
        schema:
          type: string
      - deprecated: true
        description: |
          {% note warning "Вместо него используйте `region_id`." %}

           

          {% endnote %}
        in: query
        name: regionId
        required: false
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletsResponse'
          description: Информация о точках продаж.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о нескольких точках продаж
      tags:
      - outlets
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/createOutlet.md) %}

        Создает точку продаж магазина на Маркете.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: createOutlet
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOutletRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateOutletResponse'
          description: Информация о созданной точке продаж.
        "400":
          description: |
            | **Описание**                       | **Пояснение**                                                                                                                                                               | **Способы решения**                                                                                  |
            |------------------------------------|-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------|
            | **datediff-is-to-big-local**       | При доставке по своему региону разница между максимальным и минимальным сроком доставки не должна превышать двух дней.                                                      | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает двух дней.           |
            | **datediff-is-to-big-remote**      | При доставке в другие регионы разница между максимальным и минимальным сроком доставки не должна превышать четырех дней.                                                    | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает четырех дней.        |
            | **datediff-is-to-big-long-period** | При доставке в другие регионы, где минимальный срок доставки больше 18 дней, разница между максимальным и минимальным сроком доставки не должна превышать минимальный срок. | Убедитесь, что разница между `maxDeliveryDays` и `minDeliveryDays` не превышает `minDeliveryDays`.   |
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Создание точки продаж
      tags:
      - outlets
      - dbs
      x-auth-scopes:
      - all-methods
      - settings-management
  /campaigns/{campaignId}/outlets/{outletId}:
    delete:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deleteOutlet.md) %}

        Удаляет точку продаж магазина на Маркете.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: deleteOutlet
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор точки продаж.
        in: path
        name: outletId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление точки продаж
      tags:
      - outlets
      - dbs
      x-auth-scopes:
      - all-methods
      - settings-management
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOutlet.md) %}

        Возвращает информацию о точках продаж магазина.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOutlet
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор точки продаж.
        in: path
        name: outletId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletResponse'
          description: Информация о точке продаж.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация об одной точке продаж
      tags:
      - outlets
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOutlet.md) %}

        Изменяет информацию о точке продаж магазина на Маркете.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: updateOutlet
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор точки продаж.
        in: path
        name: outletId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeOutletRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение информации о точке продаж
      tags:
      - outlets
      - dbs
      x-auth-scopes:
      - all-methods
      - settings-management
  /campaigns/{campaignId}/outlets/licenses:
    delete:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deleteOutletLicenses.md) %}

        Удаляет информацию о лицензиях для точек продаж.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: deleteOutletLicenses
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Список идентификаторов лицензий для удаления.
        in: query
        name: ids
        required: true
        schema:
          items:
            format: int64
            type: integer
          minItems: 1
          type: array
          uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление лицензий для точек продаж
      tags:
      - outlet-licenses
      - dbs
      x-auth-scopes:
      - all-methods
      - settings-management
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOutletLicenses.md) %}

        Возвращает информацию о лицензиях для точек продаж.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getOutletLicenses
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.

          В запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке.
        in: query
        name: outletIds
        required: false
        schema:
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
      - description: Список идентификаторов лицензий.
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            minimum: 1
            type: integer
          type: array
          uniqueItems: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOutletLicensesResponse'
          description: Найденные лицензии собственных точек продаж.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о лицензиях для точек продаж
      tags:
      - outlet-licenses
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOutletLicenses.md) %}

        Передает информацию о новых и существующих лицензиях для точек продаж. Поддерживаются только лицензии на розничную продажу алкоголя.

        Чтобы размещать алкогольную продукцию на Маркете, надо также прислать гарантийное письмо (если вы еще не делали этого раньше) и правильно оформить предложения в прайс-листе. Далее информация о лицензиях проходит проверку.

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: updateOutletLicenses
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOutletLicenseRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Создание и изменение лицензий для точек продаж
      tags:
      - outlet-licenses
      - dbs
      x-auth-scopes:
      - all-methods
      - settings-management
  /businesses/{businessId}/goods-feedback:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getGoodsFeedbacks.md) %}

        Возвращает отзывы о товарах продавца по указанным фильтрам. **Исключение:** отзывы, которые удалили покупатели или Маркет.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый отзыв. А полную информацию о нем можно получить с помощью этого метода.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Результаты возвращаются постранично, одна страница содержит не более 50 отзывов.

        Отзывы расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getGoodsFeedbacks
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGoodsFeedbackRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoodsFeedbackResponse'
          description: Список отзывов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение отзывов о товарах продавца
      tags:
      - goods-feedback
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - communication
  /businesses/{businessId}/goods-feedback/skip-reaction:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/skipGoodsFeedbacksReaction.md) %}

        Пропускает реакцию на отзыв — параметр `needReaction` принимает значение `false` в методе получения всех отзывов [POST businesses/{businessId}/goods-feedback](../../reference/goods-feedback/getGoodsFeedbacks.md).

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: skipGoodsFeedbacksReaction
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SkipGoodsFeedbackReactionRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Пропуск реакции на отзывы
      tags:
      - goods-feedback
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - communication
  /businesses/{businessId}/goods-feedback/comments/update:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateGoodsFeedbackComment.md) %}

        Добавляет новый комментарий магазина или изменяет комментарий, который магазин оставлял ранее.

        Для создания комментария к отзыву передайте только идентификатор отзыва `feedbackId`.

        Чтобы добавить комментарий к другому комментарию, передайте:

        * `feedbackId` — идентификатор отзыва;
        * `comment.parentId` — идентификатор родительского комментария.

        Чтобы изменить комментарий, передайте:

        * `feedbackId`— идентификатор отзыва;
        * `comment.id` — идентификатор комментария, который нужно изменить.

        Если передать одновременно `comment.parentId` и `comment.id`, будет изменен существующий комментарий.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: updateGoodsFeedbackComment
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGoodsFeedbackCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGoodsFeedbackCommentResponse'
          description: Информация о добавленном или измененном комментарии.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление нового или изменение созданного комментария
      tags:
      - goods-feedback
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - communication
  /businesses/{businessId}/goods-feedback/comments/delete:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deleteGoodsFeedbackComment.md) %}

        Удаляет комментарий магазина.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: deleteGoodsFeedbackComment
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGoodsFeedbackCommentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление комментария к отзыву
      tags:
      - goods-feedback
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - communication
  /businesses/{businessId}/goods-feedback/comments:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getGoodsFeedbackComments.md) %}

        Возвращает комментарии к отзыву, кроме:

          * тех, которые удалили пользователи или Маркет;
          * комментариев к удаленным отзывам.

        {% note tip "Вы также можете настроить API-уведомления" %}

        Маркет отправит вам [запрос](../../push-notifications/reference/sendNotification.md), когда появится новый комментарий. А полную информацию о нем можно получить с помощью этого метода.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        Результаты возвращаются постранично, одна страница содержит не более 50 комментариев.

        Комментарии расположены в порядке публикации, поэтому вы можете передавать определенный идентификатор страницы в `page_token`, если вы получали его ранее.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getGoodsFeedbackComments
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGoodsFeedbackCommentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGoodsFeedbackCommentsResponse'
          description: Дерево комментариев к отзыву.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение комментариев к отзыву
      tags:
      - goods-feedback
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - communication
  /campaigns/{campaignId}/offers:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCampaignOffers.md) %}

        Возвращает список товаров, которые размещены в заданном магазине. Для каждого товара указываются параметры размещения.

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: getCampaignOffers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCampaignOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCampaignOffersResponse'
          description: "Список товаров, размещенных в заданном магазине."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Информация о товарах, которые размещены в заданном магазине"
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /campaigns/{campaignId}/offers/update:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateCampaignOffers.md) %}

        Изменяет параметры продажи товаров в конкретном магазине: доступность товара, условия доставки и самовывоза, применяемый НДС.

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: updateCampaignOffers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCampaignOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Ответ 200 обозначает, что новые параметры получены Маркето\
            м и скоро вступят в силу."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение условий продажи товаров в магазине
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /campaigns/{campaignId}/offers/delete:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deleteCampaignOffers.md) %}

        Удаляет заданные товары из заданного магазина.

        {% note warning "Запрос удаляет товары из конкретного магазина" %}

        На продажи в других магазинах и на наличие товара в общем каталоге он не влияет.

        {% endnote %}

        Товар не получится удалить, если он хранится на складах Маркета.

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: deleteCampaignOffers
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCampaignOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCampaignOffersResponse'
          description: "Если удалось удалить не все товары, с ответом 200 вернется\
            \ список тех, что были в запросе, но остались в магазине."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товаров из ассортимента магазина
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /businesses/{businessId}/offers/recommendations:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOfferRecommendations.md) %}

        Метод возвращает рекомендации нескольких типов.

        **1. Порог для привлекательной цены. Он нужен для участия в софинансировании скидок.**

        Показывает, какие **цены для участия** нужно установить, чтобы получить максимальные шансы на срабатывание скидок, софинансируемых Маркетом. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

        **2. Оценка привлекательности цен на витрине.**

        Привлекательность влияет на вероятность срабатывания скидок за счет Маркета. [Как это устроено](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#validation)

        В запросе можно использовать фильтры.

        Результаты возвращаются постранично.

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getOfferRecommendations
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferRecommendationsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferRecommendationsResponse'
          description: Список товаров с рекомендациями.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Рекомендации Маркета, касающиеся цен"
      tags:
      - offers
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
      x-restrictions:
      - market-yandex-go
  /models:
    get:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/searchModels.md) %}

        Возвращает информацию о моделях, удовлетворяющих заданным в запросе условиям поиска.

        В одном запросе можно получить информацию не более чем о 100 моделях.

        Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** 100 000 моделей в час|
        |-|
      operationId: searchModels
      parameters:
      - description: Поисковый запрос по названию модели товара.
        in: query
        name: query
        required: true
        schema:
          type: string
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      - description: |
          {% note warning "Если в методе есть `page_token`" %}

          Используйте его вместо параметра `page`.

          [Подробнее о типах пагинации и их использовании](../../concepts/pagination.md)

          {% endnote %}

          Номер страницы результатов.

          Используется вместе с параметром `page_size`.

          `page_number` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          maximum: 10000
          type: integer
      - description: |
          Размер страницы.

          Используется вместе с параметром `page_number`.

          `page_size` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: pageSize
        required: false
        schema:
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchModelsResponse'
          description: Информация о моделях.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Поиск модели товара
      tags:
      - models
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      x-restrictions:
      - market-yandex-go
    post:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getModels.md) %}

        Возвращает информацию о моделях товаров.

        В одном запросе можно получить информацию не более чем о 100 моделях.

        Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** 100 000 моделей в час|
        |-|
      operationId: getModels
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'
          description: Информация о моделях.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация о нескольких моделях
      tags:
      - models
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      x-restrictions:
      - market-yandex-go
  /models/{modelId}:
    get:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getModel.md) %}

        Возвращает информацию о модели товара.

        Для методов `GET models`, `GET models/{modelId}` и `POST models` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** 100 000 моделей в час|
        |-|
      operationId: getModel
      parameters:
      - description: Идентификатор модели товара.
        in: path
        name: modelId
        required: true
        schema:
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsResponse'
          description: Информация о модели.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация об одной модели
      tags:
      - models
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      x-restrictions:
      - market-yandex-go
  /models/offers:
    post:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getModelsOffers.md) %}

        Возвращает информацию о первых десяти предложениях, расположенных на карточках моделей, идентификаторы которых указаны в запросе.

        Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.

        Для групповых моделей выдача предложений не поддерживается. Идентификаторы групповых моделей игнорируются.

        В одном запросе можно получить информацию о предложениях не более чем для 100 моделей.

        Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** 100 000 предложений в час|
        |-|
      operationId: getModelsOffers
      parameters:
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      - description: |
          Направление сортировки по цене.

          Возможные значения:
          * `ASC` — сортировка по возрастанию.
          * `DESC` — сортировка по убыванию.

          Значение по умолчанию: предложения выводятся в произвольном порядке.
        in: query
        name: orderByPrice
        required: false
        schema:
          $ref: '#/components/schemas/SortOrderType'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetModelsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsOffersResponse'
          description: Список предложений для моделей.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список предложений для нескольких моделей
      tags:
      - models
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      x-restrictions:
      - market-yandex-go
  /models/{modelId}/offers:
    get:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getModelOffers.md) %}

        Возвращает информацию о первых десяти предложениях, расположенных на карточке модели.

        Предложения выдаются для определенного региона и располагаются в том же порядке, в котором они показываются в выдаче Маркета на карточке модели.

        Для групповых моделей метод не поддерживается. Идентификатор групповой модели игнорируется.

        Для методов `GET models/{modelId}/offers` и `POST models/offers` действует групповое ресурсное ограничение. Ограничение вводится на суммарное количество моделей, информация о которых запрошена при помощи этих методов.

        |**⚙️ Лимит:** 100 000 предложений в час|
        |-|
      operationId: getModelOffers
      parameters:
      - description: Идентификатор модели товара.
        in: path
        name: modelId
        required: true
        schema:
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
      - description: |
          Идентификатор региона.

          Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
        in: query
        name: regionId
        required: true
        schema:
          format: int64
          type: integer
      - description: |
          Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

          Возможные значения:

          * `BYN` — белорусский рубль.

          * `KZT` — казахстанский тенге.

          * `RUR` — российский рубль.

          * `UAH` — украинская гривна.

          Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
        in: query
        name: currency
        required: false
        schema:
          $ref: '#/components/schemas/CurrencyType'
      - description: |
          Направление сортировки по цене.

          Возможные значения:
          * `ASC` — сортировка по возрастанию.
          * `DESC` — сортировка по убыванию.

          Значение по умолчанию: предложения выводятся в произвольном порядке.
        in: query
        name: orderByPrice
        required: false
        schema:
          $ref: '#/components/schemas/SortOrderType'
      - description: Количество предложений на странице ответа.
        in: query
        name: count
        required: false
        schema:
          default: 10
          format: int32
          type: integer
      - description: |
          {% note warning "Если в методе есть `page_token`" %}

          Используйте его вместо параметра `page`.

          [Подробнее о типах пагинации и их использовании](../../concepts/pagination.md)

          {% endnote %}

          Номер страницы результатов.

          Используется вместе с параметром `page_size`.

          `page_number` игнорируется, если задан `page_token` или `limit`.
        in: query
        name: page
        required: false
        schema:
          default: 1
          format: int32
          maximum: 10000
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetModelsOffersResponse'
          description: Список предложений для модели.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список предложений для одной модели
      tags:
      - models
      - dbs
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      x-restrictions:
      - market-yandex-go
  /businesses/{businessId}/bids:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/putBidsForBusiness.md) %}

        Запускает буст продаж — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.

        {% cut "Как в кабинете выглядит кампания, созданная через API" %}

        ![](../../_images/api-boost.png)

        {% endcut %}

        При первом использовании запроса Маркет: создаст единую на все магазины бизнес-аккаунта кампанию, добавит в нее товары с указанными ставками, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).

        Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.

        Запрос всегда работает с одной и той же созданной через API кампанией. Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. Другими кампаниями управлять через API не получится. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.

        Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.

        Внести другие изменения в созданную через API кампанию можно в кабинете:

        * выключить или включить кампанию;
        * изменить ее название;
        * выключить или включить ценовую стратегию.

        Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.

        Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).

        {% note info "Как посмотреть расходы на буст продаж?" %}

        Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.

        {% endnote %}

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1 000 запросов в минуту|
        |-|
      operationId: putBidsForBusiness
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuBidsRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: |
            Все получилось: ставки установлены или обновлены. Если нужно, добавлены новые товары и запущена кампания.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Включение буста продаж и установка ставок
      tags:
      - bids
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - pricing
      - promotion
      x-restrictions:
      - market-yandex-go
  /campaigns/{campaignId}/bids:
    put:
      description: |
        {% include notitle [access](../../_auto/method_scopes/putBidsForCampaign.md) %}

        Запускает буст продаж в указанном магазине — создает и включает кампанию, добавляет в нее товары и назначает на них ставки.

        При первом использовании запроса Маркет: создаст кампанию, добавит в нее товары с указанными ставками для заданного магазина, включит для них ценовую стратегию и запустит продвижение. Повторное использование запроса позволит обновить ставки на товары в этой кампании или добавить новые. Подробнее о ценовой стратегии читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html#price-strategy).

        Если товара с указанным SKU нет, он будет проигнорирован. Если в будущем в каталоге появится товар с таким SKU, он автоматически будет добавлен в кампанию с указанной ставкой.

        Запрос всегда работает с одной и той же кампанией, созданной через этот запрос или [PUT businesses/{businessId}/bids](/reference/bids/putBidsForBusiness). Если в кабинете удалить ее, при следующем выполнении запроса Маркет создаст новую. У созданной через API кампании всегда наибольший приоритет над остальными — изменить его нельзя.

        Выполнение запроса включает кампанию и ценовую стратегию, если они были отключены.

        Внести другие изменения в созданную через API кампанию можно в кабинете:

        * выключить или включить кампанию;
        * изменить ее название;
        * выключить или включить ценовую стратегию.

        Чтобы остановить продвижение отдельных товаров и удалить их из кампании, передайте для них нулевую ставку в параметре `bid`.

        Подробнее о том, как работает буст продаж, читайте в [Справке Маркета для продавцов](https://yandex.ru/support/marketplace/marketing/campaigns.html).

        {% note info "Как посмотреть расходы на буст продаж?" %}

        Фактические расходы на буст указаны в отчете по заказам ([POST campaigns/{campaignId}/stats/orders](../../reference/stats/getOrdersStats.md)). Сумма содержится в поле `bidFee`.

        {% endnote %}

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1 000 запросов в минуту|
        |-|
      operationId: putBidsForCampaign
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutSkuBidsRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: Пустой ответ.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Включение буста продаж и установка ставок для магазина
      tags:
      - bids
      - dbs
      - fbs
      - express
      - fby
      x-auth-scopes:
      - all-methods
      - pricing
      - promotion
      x-restrictions:
      - market-yandex-go
  /businesses/{businessId}/bids/info:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getBidsInfoForBusiness.md) %}

        Возвращает значения ставок для заданных товаров.

        {% note warning "Получить информацию по кампаниям, созданным в кабинете, не получится" %}

        В ответе возвращаются значения только тех ставок, которые вы установили через запрос [PUT businesses/{businessId}/bids](../../reference/bids/putBidsForBusiness.md).

        {% endnote %}

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1 000 запросов в минуту|
        |-|
      operationId: getBidsInfoForBusiness
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBidsInfoRequest'
        description: description
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBidsInfoResponse'
          description: "Значения ставок для заданных товаров. В ответ попадают тол\
            ько товары, на которые установлены ставки."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Информация об установленных ставках
      tags:
      - bids
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
      - promotion
      - promotion:read-only
      x-restrictions:
      - market-yandex-go
  /businesses/{businessId}/bids/recommendations:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getBidsRecommendations.md) %}

        Возвращает рекомендованные ставки для заданных товаров, что обеспечивает вашим предложениям определенную долю показов, и дополнительные инструменты продвижения.

        Для одного товара может возвращаться одна рекомендованная ставка или несколько. Во втором случае разные ставки предназначены для достижения разной доли показов и получения дополнительных инструментов продвижения.

        Если товар только добавлен в каталог, но пока не продается, рекомендованной ставки для него не будет.

        В одном запросе может быть максимум 1500 товаров.

        |**⚙️ Лимит:** 1 000 запросов в минуту|
        |-|
      operationId: getBidsRecommendations
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBidsRecommendationsRequest'
        description: description.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBidsRecommendationsResponse'
          description: Рекомендованные ставки для заданных товаров.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Рекомендованные ставки для заданных товаров
      tags:
      - bids
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
      - promotion
      - promotion:read-only
      x-restrictions:
      - market-yandex-go
  /businesses/{businessId}/warehouses:
    get:
      deprecated: true
      description: |
        {% include notitle [access](../../_auto/method_scopes/getWarehouses.md) %}

        {% note warning "Какой метод использовать вместо устаревшего" %}

        [POST businesses/{businessId}/warehouses](../../reference/warehouses/getPagedWarehouses.md)

        {% endnote %}

        Возвращает список складов и, если склады объединены, список групп складов. [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)

        Среди прочего запрос позволяет определить идентификатор, который нужно использовать при передаче остатков для группы складов.

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getWarehouses
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetWarehousesResponse'
          description: Список складов и групп складов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список складов и групп складов
      tags:
      - warehouses
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getPagedWarehouses.md) %}

        Возвращает список складов и информацию о них.

        {% note warning "Ограничение для параметра `limit`" %}

        Не передавайте значение больше 25.

        {% endnote %}

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getPagedWarehouses
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPagedWarehousesRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPagedWarehousesResponse'
          description: "Список складов и их свойства, которые вы запрашивали."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Список складов
      tags:
      - warehouses
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /warehouses:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getFulfillmentWarehouses.md) %}

        Возвращает список складов Маркета с их идентификаторами.

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: getFulfillmentWarehouses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetFulfillmentWarehousesResponse'
          description: Список складов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Идентификаторы складов Маркета
      tags:
      - warehouses
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /campaigns/{campaignId}/warehouse/status:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateWarehouseStatus.md) %}

        Отключает или включает склад.

        После отключения склада товары, которые находятся на нем, скрываются через 15 минут. После включения они возвращаются на витрину через 15 минут, а если склад был выключен 30 дней или дольше — через 4 часа.

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: updateWarehouseStatus
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateWarehouseStatusRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateWarehouseStatusResponse'
          description: Новый статус склада.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Изменение статуса склада
      tags:
      - warehouses
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - inventory-and-order-processing
  /category/{categoryId}/parameters:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCategoryContentParameters.md) %}

        Возвращает список характеристик с допустимыми значениями для заданной листовой категории — той, у которой нет дочерних категорий.

        |**⚙️ Лимит:** 100 категорий в минуту |
        |-|
      operationId: getCategoryContentParameters
      parameters:
      - description: |
          Идентификатор категории на Маркете.

          Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).
        in: path
        name: categoryId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoryContentParametersResponse'
          description: Список характеристик товаров из заданной категории.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Списки характеристик товаров по категориям
      tags:
      - content
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /businesses/{businessId}/offer-cards:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getOfferCardsContentStatus.md) %}

        Возвращает сведения о состоянии контента для заданных товаров:

        * создана ли карточка товара и в каком она статусе;
        * рейтинг карточки — на сколько процентов она заполнена;
        * переданные характеристики товаров;
        * есть ли ошибки или предупреждения, связанные с контентом;
        * рекомендации по заполнению карточки.

        |**⚙️ Лимит:** 600 запросов в минуту|
        |-|
      operationId: getOfferCardsContentStatus
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetOfferCardsContentStatusRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetOfferCardsContentStatusResponse'
          description: Информация о карточках указанных товаров.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации о заполненности карточек магазина
      tags:
      - content
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /businesses/{businessId}/offer-cards/update:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updateOfferContent.md) %}

        Редактирует характеристики товара, которые специфичны для категории, к которой он относится.

        {% note warning "Здесь только то, что относится к конкретной категории" %}

        Если вам нужно изменить основные параметры товара (название, описание, изображения, видео, производитель, штрихкод), воспользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        {% endnote %}

        Чтобы удалить характеристики, которые заданы в параметрах с типом `string`, передайте пустое значение.

        {% note info "Данные в каталоге обновляются не мгновенно" %}

        Это занимает до нескольких минут.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 товаров в минуту|
        |-|
      operationId: updateOfferContent
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateOfferContentRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateOfferContentResponse'
          description: |
            Запрос выполнен корректно, данные обработаны.

            {% note warning "Ответ 200 сам по себе не значит, что переданные значения корректны" %}

            Обязательно посмотрите детали ответа: `status` и перечень ошибок, если он есть.

            Даже если ошибка допущена в характеристиках всего одного товара, никакие изменения из запроса в каталог не попадут.

            {% endnote %}

            Если в `status` вернулось `ERROR`, убедитесь, что:

            * все обязательные характеристики заполнены;
            * характеристики действительно существуют в указанных категориях;
            * значения соответствуют характеристикам;
            * ваши собственные значения имеют нужный тип данных.

            Найти проблемы помогут поля `errors` и `warnings`.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "423":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLockedErrorResponse'
          description: К ресурсу нельзя применить указанный метод.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Редактирование категорийных характеристик товара
      tags:
      - content
      - dbs
      - fby
      - fbs
      - express
      x-auth-scopes:
      - all-methods
      - offers-and-cards-management
  /businesses/{businessId}/chats/new:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/createChat.md) %}

        Создает новый чат с покупателем.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: createChat
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateChatRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateChatResponse'
          description: |
            Все получилось: чат создан.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Создание нового чата с покупателем
      tags:
      - chats
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - communication
  /businesses/{businessId}/chats:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getChats.md) %}

        Возвращает чаты с покупателями.

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый чат или сообщение.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getChats
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatsRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatsResponse'
          description: |
            Список чатов.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение доступных чатов
      tags:
      - chats
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - communication
  /businesses/{businessId}/chat:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getChat.md) %}

        Возвращает чат по его идентификатору.

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый чат или сообщение.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getChat
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор чата.
        in: query
        name: chatId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatResponse'
          description: |
            Информация о чате.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение чата по идентификатору
      tags:
      - chats
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - communication
  /businesses/{businessId}/chats/file/send:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/sendFileToChat.md) %}

        Отправляет файл в чат с покупателем.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: sendFileToChat
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор чата.
        in: query
        name: chatId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendFileToChatRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Пустой ответ. Означает, что файл отправлен."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отправка файла в чат
      tags:
      - chats
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - communication
  /businesses/{businessId}/chats/message:
    get:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getChatMessage.md) %}

        Возвращает сообщение по его идентификатору.

        {% note tip "Подключите API-уведомления" %}

        Маркет отправит вам запрос [POST notification](../../push-notifications/reference/sendNotification.md), когда появится новый чат или сообщение.

        [{#T}](../../push-notifications/index.md)

        {% endnote %}

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getChatMessage
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор чата.
        in: query
        name: chatId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор сообщения.
        in: query
        name: messageId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatMessageResponse'
          description: |
            Сообщение и информация о нем.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение сообщения в чате
      tags:
      - chats
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - communication
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/sendMessageToChat.md) %}

        Отправляет сообщение в чат с покупателем.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: sendMessageToChat
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор чата.
        in: query
        name: chatId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageToChatRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmptyApiResponse'
          description: "Пустой ответ. Означает, что сообщение отправлено."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Отправка сообщения в чат
      tags:
      - chats
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - communication
  /businesses/{businessId}/chats/history:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getChatHistory.md) %}

        Возвращает историю сообщений в чате с покупателем.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getChatHistory
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: Идентификатор чата.
        in: query
        name: chatId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetChatHistoryRequest'
        description: description
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetChatHistoryResponse'
          description: |
            История сообщений успешно получена.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение истории сообщений в чате
      tags:
      - chats
      - dbs
      - fbs
      - fby
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - communication
  /tariffs/calculate:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/calculateTariffs.md) %}

        Рассчитывает стоимость услуг Маркета для товаров с заданными параметрами. Порядок товаров в запросе и ответе сохраняется, чтобы определить,
        для какого товара рассчитана стоимость услуги.

        Обратите внимание: калькулятор осуществляет примерные расчеты. Финальная стоимость для каждого заказа зависит от предоставленных услуг.

        В запросе можно указать либо параметр `campaignId`, либо `sellingProgram`. Совместное использование параметров приведет к ошибке.

        |**⚙️ Лимит:** 100 запросов в минуту|
        |-|
      operationId: calculateTariffs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CalculateTariffsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CalculateTariffsResponse'
          description: Стоимость услуг.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Калькулятор стоимости услуг
      tags:
      - tariffs
      - fbs
      - fby
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - finance-and-accounting
      - pricing
      - pricing:read-only
      x-restrictions:
      - market-yandex-go
  /categories/tree:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCategoriesTree.md) %}

        Возвращает дерево категорий Маркета.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getCategoriesTree
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCategoriesRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriesResponse'
          description: Категории Маркета.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Дерево категорий
      tags:
      - categories
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
  /categories/max-sale-quantum:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getCategoriesMaxSaleQuantum.md) %}

        Возвращает лимит на установку [кванта](*quantum) и минимального количества товаров в заказе, которые вы можете задать для товаров указанных категорий.

        Если вы передадите значение кванта или минимального количества товаров выше установленного Маркетом ограничения, товар будет скрыт с витрины.

        Подробнее о том, как продавать товары по несколько штук, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/fields/quantum).

        |**⚙️ Лимит:** 5 000 запросов в час|
        |-|
      operationId: getCategoriesMaxSaleQuantum
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetCategoriesMaxSaleQuantumRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCategoriesMaxSaleQuantumResponse'
          description: Лимит на установку кванта и минимального количества товаров.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Лимит на установку кванта продажи и минимального количества товаров
        в заказе
      tags:
      - categories
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - offers-and-cards-management
      - offers-and-cards-management:read-only
  /businesses/{businessId}/ratings/quality:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getQualityRatings.md) %}

        Возвращает значение индекса качества магазинов и его составляющие.

        Подробнее об индексе качества читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/score/).

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: getQualityRatings
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetQualityRatingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualityRatingResponse'
          description: Значение индекса качества магазинов и его составляющие.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Индекс качества магазинов
      tags:
      - ratings
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /campaigns/{campaignId}/ratings/quality/details:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getQualityRatingDetails.md) %}

        Возвращает список заказов, которые повлияли на индекс качества магазина. Чтобы узнать значение индекса качества, выполните запрос [POST businesses/{businessId}/ratings/quality](../../reference/ratings/getQualityRatings.md).

        |**⚙️ Лимит:** 100 000 запросов в час|
        |-|
      operationId: getQualityRatingDetails
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQualityRatingDetailsResponse'
          description: "Информация о заказах, которые повлияли на индекс качества."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Заказы, которые повлияли на индекс качества"
      tags:
      - ratings
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
  /businesses/{businessId}/promos:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getPromos.md) %}

        Возвращает информацию об акциях Маркета.

        По умолчанию возвращаются акции, в которых продавец участвует или может принять участие.

        Чтобы получить текущие или завершенные акции, передайте параметр `participation`.

        Типы акций, которые возвращаются в ответе:

        * прямая скидка;
        * флеш-акция;
        * скидка по промокоду.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getPromos
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPromosRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPromosResponse'
          description: Список акций Маркета.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение списка акций
      tags:
      - promos
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - promotion
      - promotion:read-only
      - pricing
      - pricing:read-only
      x-restrictions:
      - market-yandex-go
  /businesses/{businessId}/promos/offers:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getPromoOffers.md) %}

        Возвращает список товаров, которые участвуют или могут участвовать в акции.

        {% note warning "Условия участия в акциях могут меняться" %}

        Например, `maxPromoPrice`.

        Установленные цены меняться не будут — `price` и `promoPrice`.

        {% endnote %}

        |**⚙️ Лимит:** 10 000 запросов в час, не более 500 товаров в запросе|
        |-|
      operationId: getPromoOffers
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPromoOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPromoOffersResponse'
          description: "Список товаров, которые участвуют или могут участвовать в\
            \ акции."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Получение списка товаров, которые участвуют или могут участвовать\
        \ в акции"
      tags:
      - promos
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - pricing
      - pricing:read-only
      - promotion
      - promotion:read-only
      x-restrictions:
      - market-yandex-go
  /businesses/{businessId}/promos/offers/update:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/updatePromoOffers.md) %}

        Добавляет товары в акцию или изменяет цены на товары, которые участвуют в акции.

        Изменения начинают действовать в течение 4–6 часов.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: updatePromoOffers
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdatePromoOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatePromoOffersResponse'
          description: Результат добавления товаров в акцию или обновления их цен.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Добавление товаров в акцию или изменение их цен
      tags:
      - promos
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - pricing
      - promotion
      x-restrictions:
      - market-yandex-go
  /businesses/{businessId}/promos/offers/delete:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/deletePromoOffers.md) %}

        Убирает товары из акции.

        Изменения начинают действовать в течение 4–6 часов.

        |**⚙️ Лимит:** 10 000 запросов в час|
        |-|
      operationId: deletePromoOffers
      parameters:
      - description: |
          Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

          ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
        in: path
        name: businessId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeletePromoOffersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePromoOffersResponse'
          description: Результат удаления товаров из акции.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Удаление товаров из акции
      tags:
      - promos
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - pricing
      - promotion
      x-restrictions:
      - market-yandex-go
  /campaigns/{campaignId}/supply-requests:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getSupplyRequests.md) %}

        По указанным фильтрам возвращает заявки на поставку, вывоз и утилизацию, а также информацию по ним.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getSupplyRequests
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSupplyRequestsRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupplyRequestsResponse'
          description: Список заявок и информация по ним.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Получение информации о заявках на поставку, вывоз и утилизацию"
      tags:
      - supply-requests
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - supplies-management:read-only
  /campaigns/{campaignId}/supply-requests/items:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getSupplyRequestItems.md) %}

        Возвращает список товаров в заявке и информацию по ним.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getSupplyRequestItems
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      - description: |
          Идентификатор страницы c результатами.

          Если параметр не указан, возвращается первая страница.

          Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

          Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
        example: eyBuZXh0SWQ6IDIzNDIgfQ==
        in: query
        name: page_token
        required: false
        schema:
          type: string
      - description: |
          Количество значений на одной странице.
        example: 20
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSupplyRequestItemsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupplyRequestItemsResponse'
          description: Список товаров в заявке и информация по ним.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Получение товаров в заявке на поставку, вывоз или утилизацию"
      tags:
      - supply-requests
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - supplies-management:read-only
  /campaigns/{campaignId}/supply-requests/documents:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getSupplyRequestDocuments.md) %}

        Возвращает документы по заявке.

        |**⚙️ Лимит:** 1 000 запросов в час|
        |-|
      operationId: getSupplyRequestDocuments
      parameters:
      - description: |
          Идентификатор кампании.

          Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

            * **Модули и API** → блок **Передача данных Маркету**.
            * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

          ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
        in: path
        name: campaignId
        required: true
        schema:
          format: int64
          minimum: 1
          type: integer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSupplyRequestDocumentsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupplyRequestDocumentsResponse'
          description: Список документов и ссылки на них.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiNotFoundErrorResponse'
          description: Запрашиваемый ресурс не найден.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: "Получение документов по заявке на поставку, вывоз или утилизацию"
      tags:
      - supply-requests
      - fby
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - supplies-management:read-only
  /auth/token:
    post:
      description: |
        {% include notitle [access](../../_auto/method_scopes/getAuthTokenInfo.md) %}

        {% note info "Метод доступен только для Api-Key-токена." %}

         

        {% endnote %}

        Возвращает информацию о переданном авторизационном токене.

        |**⚙️ Лимит:** 100 запросов в час|
        |-|
      operationId: getAuthTokenInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTokenInfoResponse'
          description: Информация об авторизационном токене.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiClientDataErrorResponse'
          description: Запрос содержит неправильные данные.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
          description: В запросе не указаны данные для авторизации.
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiForbiddenErrorResponse'
          description: Данные для авторизации неверны или доступ к ресурсу запрещен.
        "420":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiLimitErrorResponse'
          description: Превышено ограничение на доступ к ресурсу.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiServerErrorResponse'
          description: Внутренняя ошибка сервера.
      summary: Получение информации об авторизационном токене
      tags:
      - auth
      - fby
      - fbs
      - dbs
      - express
      x-auth-scopes:
      - all-methods
      - all-methods:read-only
      - settings-management
      - finance-and-accounting
      - offers-and-cards-management
      - offers-and-cards-management:read-only
      - pricing
      - pricing:read-only
      - inventory-and-order-processing
      - inventory-and-order-processing:read-only
      - promotion
      - promotion:read-only
      - communication
      - supplies-management:read-only
components:
  parameters:
    BusinessId:
      description: |
        Идентификатор кабинета. Чтобы его узнать, воспользуйтесь запросом [GET campaigns](../../reference/campaigns/getCampaigns.md).

        ℹ️ [Что такое кабинет и магазин на Маркете](https://yandex.ru/support/marketplace/account/introduction.html)
      in: path
      name: businessId
      required: true
      schema:
        format: int64
        minimum: 1
        type: integer
    PageNum:
      description: |
        {% note warning "Если в методе есть `page_token`" %}

        Используйте его вместо параметра `page`.

        [Подробнее о типах пагинации и их использовании](../../concepts/pagination.md)

        {% endnote %}

        Номер страницы результатов.

        Используется вместе с параметром `page_size`.

        `page_number` игнорируется, если задан `page_token` или `limit`.
      in: query
      name: page
      required: false
      schema:
        default: 1
        format: int32
        maximum: 10000
        type: integer
    PageSize:
      description: |
        Размер страницы.

        Используется вместе с параметром `page_number`.

        `page_size` игнорируется, если задан `page_token` или `limit`.
      in: query
      name: pageSize
      required: false
      schema:
        format: int32
        type: integer
    CampaignId:
      description: |
        Идентификатор кампании.

        Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

          * **Модули и API** → блок **Передача данных Маркету**.
          * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

        ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
      in: path
      name: campaignId
      required: true
      schema:
        format: int64
        minimum: 1
        type: integer
    OrderId:
      description: Идентификатор заказа.
      in: path
      name: orderId
      required: true
      schema:
        format: int64
        type: integer
    GetOrdersOrderIds:
      description: |
        Фильтрация заказов по идентификаторам.
        <br><br>
        ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.
      in: query
      name: orderIds
      required: false
      schema:
        items:
          format: int64
          maxItems: 50
          minItems: 1
          type: integer
        type: array
    GetOrdersStatus:
      description: |
        Статус заказа:

        * `CANCELLED` — заказ отменен.

        * `DELIVERED` — заказ получен покупателем.

        * `DELIVERY` — заказ передан в службу доставки.

        * `PICKUP` — заказ доставлен в пункт самовывоза.

        * `PROCESSING` — заказ находится в обработке.

        * `UNPAID` — заказ оформлен, но еще не оплачен (если выбрана оплата при оформлении).

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      in: query
      name: status
      required: false
      schema:
        items:
          $ref: '#/components/schemas/OrderStatusType'
        type: array
        uniqueItems: true
    GetOrdersSubstatus:
      description: |
        Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

        Возможные значения для заказа в статусе `PROCESSING`:

        * `STARTED` — заказ подтвержден, его можно начать обрабатывать.
        * `READY_TO_SHIP` — заказ собран и готов к отправке.
        * `SHIPPED` — заказ передан службе доставки.

        Возможные значения для заказа в статусе `CANCELLED`:

        * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

        * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

        * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:

          * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;
          * перерыв между первым и третьим звонком не менее 90 минут;
          * соединение не короче 5 секунд.

          Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400

        * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

        * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

        * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

        * `SHOP_FAILED` — магазин не может выполнить заказ.

        * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

        * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

        * `PROCESSING_EXPIRED` — значение более не используется.

        * `PICKUP_EXPIRED` — закончился срок хранения заказа в ПВЗ.

        * `DELIVERY_SERVICE_UNDELIVERED` — служба доставки не смогла доставить заказ.

        * `CANCELLED_COURIER_NOT_FOUND` — не удалось найти курьера.

        * `USER_WANTS_TO_CHANGE_DELIVERY_DATE` — покупатель хочет получить заказ в другой день.

        * `RESERVATION_FAILED` — Маркет не может продолжить дальнейшую обработку заказа.

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      in: query
      name: substatus
      required: false
      schema:
        items:
          $ref: '#/components/schemas/OrderSubstatusType'
        type: array
        uniqueItems: true
    GetOrdersFromDate:
      description: |
        Начальная дата для фильтрации заказов по дате оформления.

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной и конечной датой (параметр `toDate`) должно быть не больше 30 дней.

        Значение по умолчанию: 30 дней назад от текущей даты.
      in: query
      name: fromDate
      required: false
      schema:
        format: date
        type: string
    GetOrdersToDate:
      description: |
        Конечная дата для фильтрации заказов по дате оформления.

        Показываются заказы, созданные до 00:00 указанного дня.

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной (параметр `fromDate`) и конечной датой должно быть не больше 30 дней.

        Значение по умолчанию: текущая дата.

        Если промежуток времени между `toDate` и `fromDate` меньше суток, то `toDate` равен `fromDate` + сутки.
      in: query
      name: toDate
      required: false
      schema:
        format: date
        type: string
    GetOrdersSupplierShipmentDateFrom:
      description: |
        Начальная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной и конечной датой (параметр `supplierShipmentDateTo`) должно быть не больше 30 дней.

        Начальная дата включается в интервал для фильтрации.
      in: query
      name: supplierShipmentDateFrom
      required: false
      schema:
        format: date
        type: string
    GetOrdersSupplierShipmentDateTo:
      description: |
        Конечная дата для фильтрации заказов по дате отгрузки в службу доставки (параметр `shipmentDate`).

        Формат даты: `ДД-ММ-ГГГГ`.

        Между начальной (параметр `supplierShipmentDateFrom`) и конечной датой должно быть не больше 30 дней.

        Конечная дата не включается в интервал для фильтрации.

        Если промежуток времени между `supplierShipmentDateTo` и `supplierShipmentDateFrom` меньше суток, то `supplierShipmentDateTo` равен `supplierShipmentDateFrom` + сутки.
      in: query
      name: supplierShipmentDateTo
      required: false
      schema:
        format: date
        type: string
    GetOrdersUpdatedAtFrom:
      description: |
        Начальная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

        Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

        Между начальной и конечной датой (параметр `updatedAtTo`) должно быть не больше 30 дней.

        Начальная дата включается в интервал для фильтрации.
      in: query
      name: updatedAtFrom
      required: false
      schema:
        format: date-time
        type: string
    GetOrdersUpdatedAtTo:
      description: |
        Конечная дата для фильтрации заказов по дате и времени обновления (параметр `updatedAt`).

        Формат даты: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.

        Между начальной (параметр `updatedAtFrom`) и конечной датой должно быть не больше 30 дней.

        Конечная дата не включается в интервал для фильтрации.
      in: query
      name: updatedAtTo
      required: false
      schema:
        format: date-time
        type: string
    GetOrdersDispatchType:
      description: Способ отгрузки
      in: query
      name: dispatchType
      required: false
      schema:
        $ref: '#/components/schemas/OrderDeliveryDispatchType'
    GetOrdersFake:
      description: |
        Фильтрация заказов по типам:

        * `false` — настоящий заказ покупателя.

        * `true` — [тестовый](../../concepts/sandbox.md) заказ Маркета.
      in: query
      name: fake
      required: false
      schema:
        default: false
        type: boolean
    GetOrdersHasCis:
      description: |
        Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go):

        * `true` — да.

        * `false` — нет.

        Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
      in: query
      name: hasCis
      required: false
      schema:
        default: false
        type: boolean
    GetOrdersOnlyWaitingForCancellationApprove:
      description: |
        **Только для модели DBS**

        Фильтрация заказов по наличию запросов покупателей на отмену.

        При значение `true` возвращаются только заказы, которые находятся в статусе `DELIVERY` или `PICKUP` и которые пользователи решили отменить.

        Чтобы подтвердить или отклонить отмену, отправьте запрос [PUT campaigns/{campaignId}/orders/{orderId}/cancellation/accept](../../reference/orders/acceptOrderCancellation).
      in: query
      name: onlyWaitingForCancellationApprove
      required: false
      schema:
        default: false
        type: boolean
    GetOrdersOnlyEstimatedDelivery:
      description: |
        Фильтрация заказов с долгой доставкой (31-60 дней) по подтвержденной дате доставки:

        * `true` — возвращаются только заказы с неподтвержденной датой доставки.
        * `false` — фильтрация не применяется.
      in: query
      name: onlyEstimatedDelivery
      required: false
      schema:
        default: false
        type: boolean
    GetOrdersBuyerType:
      description: |
        Фильтрация заказов по типу покупателя.
      in: query
      name: buyerType
      required: false
      schema:
        $ref: '#/components/schemas/OrderBuyerType'
    PageToken:
      description: |
        Идентификатор страницы c результатами.

        Если параметр не указан, возвращается первая страница.

        Рекомендуем передавать значение выходного параметра `nextPageToken`, полученное при последнем запросе.

        Если задан `page_token` и в запросе есть параметры `page_number` и `page_size`, они игнорируются.
      example: eyBuZXh0SWQ6IDIzNDIgfQ==
      in: query
      name: page_token
      required: false
      schema:
        type: string
    PageLimit:
      description: |
        Количество значений на одной странице.
      example: 20
      in: query
      name: limit
      required: false
      schema:
        format: int32
        type: integer
    ShipmentId:
      description: |
        Параметр больше не используется. Вставьте любое число — просто чтобы получился корректный URL.
      in: path
      name: shipmentId
      required: true
      schema:
        format: int64
        type: integer
    generateOrderLabel_ShipmentId:
      description: Идентификатор грузоместа.
      in: path
      name: shipmentId
      required: true
      schema:
        format: int64
        type: integer
    BoxId:
      description: Идентификатор коробки.
      in: path
      name: boxId
      required: true
      schema:
        format: int64
        type: integer
    PageFormat:
      description: "Настройка размещения ярлыков на странице. Если параметра нет,\
        \ возвращается PDF с ярлыками формата A7."
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/PageFormatType'
    ReturnId:
      description: Идентификатор невыкупа или возврата.
      in: path
      name: returnId
      required: true
      schema:
        format: int64
        type: integer
    ItemId:
      description: Идентификатор товара в возврате.
      in: path
      name: itemId
      required: true
      schema:
        format: int64
        type: integer
    ImageHash:
      description: Хеш ссылки изображения для загрузки.
      in: path
      name: imageHash
      required: true
      schema:
        type: string
    RegionName:
      description: |
        Название региона.

        Важно учитывать регистр: первая буква должна быть заглавной, остальные — строчными. Например, `Москва`.
      in: query
      name: name
      required: true
      schema:
        type: string
    RegionId:
      description: |
        Идентификатор региона.

        Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
      in: path
      name: regionId
      required: true
      schema:
        format: int64
        type: integer
    params_ShipmentId:
      description: Идентификатор отгрузки.
      in: path
      name: shipmentId
      required: true
      schema:
        format: int64
        minimum: 1
        type: integer
    CancelledOrders:
      description: |
        Возвращать ли отмененные заказы.

        Значение по умолчанию: `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.
      in: query
      name: cancelledOrders
      required: false
      schema:
        default: true
        type: boolean
    ShipmentPalletLabelsPageFormat:
      description: |
        Формат страниц PDF-файла с ярлыками:

        * `A4` — по 16 ярлыков на странице.
        * `A8` — по одному ярлыку на странице.
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/ShipmentPalletLabelPageFormatType'
    CatalogLanguage:
      description: |
        Язык, на котором принимаются и возвращаются значения в параметрах `name` и `description`.

        Значение по умолчанию: `RU`.
      in: query
      name: language
      required: false
      schema:
        $ref: '#/components/schemas/CatalogLanguageType'
    OfferIds:
      description: Идентификатор товара в каталоге.
      in: query
      name: offer_id
      required: false
      schema:
        items:
          type: string
        type: array
    OfferShopSkus:
      description: |
        Ваш SKU товара.

        Параметр может быть указан несколько раз, например:

        ```text translate=no
        ...shop_sku=123&shop_sku=129&shop_sku=141...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      in: query
      name: shop_sku
      required: false
      schema:
        items:
          $ref: '#/components/schemas/ShopSku'
        type: array
    OfferMappingKind:
      description: Тип маппинга.
      in: query
      name: mapping_kind
      required: false
      schema:
        $ref: '#/components/schemas/OfferMappingKindType'
    OfferProcessingStatuses:
      description: |
        Фильтрация по статусу публикации товара:

        * `READY` — товар прошел модерацию.
        * `IN_WORK` — товар проходит модерацию.
        * `NEED_CONTENT` — для товара без SKU на Маркете marketSku нужно найти карточку самостоятельно или создать ее.
        * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара.
        * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
        * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
        * `OTHER` — товар не прошел модерацию по другой причине.

        Можно указать несколько статусов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...status=READY,IN_WORK...
        ...status=READY&status=IN_WORK...
        ```

        В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
      in: query
      name: status
      required: false
      schema:
        items:
          $ref: '#/components/schemas/OfferProcessingStatusType'
        type: array
    OfferAvailabilityStatuses:
      description: |
        Фильтрация по планам поставок товара:

        * `ACTIVE` — поставки будут.
        * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять.
        * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет.

        Можно указать несколько значений в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...availability=INACTIVE,DELISTED...
        ...availability=INACTIVE&availability=DELISTED...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      in: query
      name: availability
      required: false
      schema:
        items:
          $ref: '#/components/schemas/OfferAvailabilityStatusType'
        type: array
    CategoryIds:
      description: |
        Фильтрация по идентификатору категории на Маркете.

        Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).

        Можно указать несколько идентификаторов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...category_id=14727164,14382343...
        ...category_id=14727164&category_id=14382343...
        ```

        В запросе можно указать либо параметр `shopSku`, либо любые параметры для фильтрации товаров. Совместное использование параметра `shopSku` и параметров для фильтрации приведет к ошибке.
      in: query
      name: category_id
      required: false
      schema:
        items:
          type: integer
        type: array
    VendorNames:
      description: |
        Фильтрация по бренду товара.

        Можно указать несколько брендов в одном параметре, через запятую, или в нескольких одинаковых параметрах. Например:

        ```text translate=no
        ...vendor=Aqua%20Minerale,Borjomi...
        ...vendor=Aqua%20Minerale&vendor=Borjomi...
        ```

        Чтобы товар попал в результаты фильтрации, его бренд должен точно совпадать с одним из указанных в запросе. Например, если указан бренд Schwarzkopf, то в результатах не будет товаров Schwarzkopf Professional.

        Если в названии бренда есть символы, которые не входят в таблицу ASCII (в том числе кириллические символы), используйте для них URL-кодирование. Например, пробел — %20, апостроф «'» — %27 и т. д. Подробнее см. в разделе [Кодирование URL русскоязычной Википедии](https://ru.wikipedia.org/wiki/URL#Кодирование_URL).

        В запросе можно указать либо параметр shopSku, либо любые параметры для фильтрации товаров. Совместное использование параметра shopSku и параметров для фильтрации приведет к ошибке.
      in: query
      name: vendor
      required: false
      schema:
        items:
          type: string
        type: array
    params_OfferIds:
      description: |
        Идентификатор скрытого предложения.
      in: query
      name: offer_id
      schema:
        items:
          $ref: '#/components/schemas/ShopSku'
        type: array
    ReportId:
      description: |
        Идентификатор отчета, который вы получили после запуска генерации.
      in: path
      name: reportId
      required: true
      schema:
        maxLength: 255
        minLength: 1
        type: string
    ReportFormat:
      description: Формат отчета.
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/ReportFormatType'
    ReportLanguage:
      description: Язык отчета.
      in: query
      name: language
      required: false
      schema:
        $ref: '#/components/schemas/ReportLanguageType'
    MassOrderLabelsGenerationPageFormat:
      description: "Настройка размещения ярлыков на странице. Если параметра нет,\
        \ возвращается PDF с ярлыками формата A7."
      in: query
      name: format
      required: false
      schema:
        $ref: '#/components/schemas/PageFormatType'
    OutletId:
      description: Идентификатор точки продаж.
      in: path
      name: outletId
      required: true
      schema:
        format: int64
        minimum: 1
        type: integer
    OutletIds:
      description: |
        Список идентификаторов точек продаж, для которых нужно получить информацию о лицензиях. Идентификаторы указываются через запятую.

        В запросе должен быть либо параметр `outletIds`, либо параметр `ids`. Запрос с обоими параметрами или без них приведет к ошибке.
      in: query
      name: outletIds
      required: false
      schema:
        items:
          format: int64
          minimum: 1
          type: integer
        maxItems: 500
        minItems: 1
        type: array
        uniqueItems: true
    LicenseIds:
      description: Список идентификаторов лицензий.
      in: query
      name: ids
      required: false
      schema:
        items:
          format: int64
          minimum: 1
          type: integer
        type: array
        uniqueItems: true
    DeleteLicenseIds:
      description: Список идентификаторов лицензий для удаления.
      in: query
      name: ids
      required: true
      schema:
        items:
          format: int64
          type: integer
        minItems: 1
        type: array
        uniqueItems: true
    ModelQuery:
      description: Поисковый запрос по названию модели товара.
      in: query
      name: query
      required: true
      schema:
        type: string
    ModelRegionId:
      description: |
        Идентификатор региона.

        Идентификатор региона можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).
      in: query
      name: regionId
      required: true
      schema:
        format: int64
        type: integer
    Currency:
      description: |
        Валюта, в которой отображаются цены предложений на страницах с результатами поиска.

        Возможные значения:

        * `BYN` — белорусский рубль.

        * `KZT` — казахстанский тенге.

        * `RUR` — российский рубль.

        * `UAH` — украинская гривна.

        Значение по умолчанию: используется национальная валюта магазина (национальная валюта страны происхождения магазина).
      in: query
      name: currency
      required: false
      schema:
        $ref: '#/components/schemas/CurrencyType'
    ModelId:
      description: Идентификатор модели товара.
      in: path
      name: modelId
      required: true
      schema:
        exclusiveMinimum: true
        format: int64
        minimum: 0
        type: integer
    OrderByPrice:
      description: |
        Направление сортировки по цене.

        Возможные значения:
        * `ASC` — сортировка по возрастанию.
        * `DESC` — сортировка по убыванию.

        Значение по умолчанию: предложения выводятся в произвольном порядке.
      in: query
      name: orderByPrice
      required: false
      schema:
        $ref: '#/components/schemas/SortOrderType'
    ModelPageCount:
      description: Количество предложений на странице ответа.
      in: query
      name: count
      required: false
      schema:
        default: 10
        format: int32
        type: integer
    MarketCategoryId:
      description: |
        Идентификатор категории на Маркете.

        Чтобы узнать идентификатор категории, к которой относится интересующий вас товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).
      in: path
      name: categoryId
      required: true
      schema:
        format: int64
        minimum: 1
        type: integer
    ChatId:
      description: Идентификатор чата.
      in: query
      name: chatId
      required: true
      schema:
        format: int64
        minimum: 1
        type: integer
    MessageId:
      description: Идентификатор сообщения.
      in: query
      name: messageId
      required: true
      schema:
        format: int64
        minimum: 1
        type: integer
  responses:
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiClientDataErrorResponse'
      description: Запрос содержит неправильные данные.
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiUnauthorizedErrorResponse'
      description: В запросе не указаны данные для авторизации.
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiForbiddenErrorResponse'
      description: Данные для авторизации неверны или доступ к ресурсу запрещен.
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiNotFoundErrorResponse'
      description: Запрашиваемый ресурс не найден.
    "420":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiLimitErrorResponse'
      description: Превышено ограничение на доступ к ресурсу.
    "500":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiServerErrorResponse'
      description: Внутренняя ошибка сервера.
    "423":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ApiLockedErrorResponse'
      description: К ресурсу нельзя применить указанный метод.
  schemas:
    GetBusinessSettingsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetBusinessSettingsInfoDTO'
        type: object
      description: Ответ на запрос настроек кабинета.
      example:
        result:
          settings:
            currency: RUR
            onlyDefaultPrice: true
          info:
            name: name
            id: 0
        status: OK
      type: object
    ApiClientDataErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Ошибка в данных переданных от клиента.
      example:
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: OK
      type: object
    ApiUnauthorizedErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: В запросе не указаны авторизационные данные.
      example:
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: OK
      type: object
    ApiForbiddenErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: "Неверны авторизационные данные, указанные в запросе, или запре\
        щен доступ к запрашиваемому ресурсу."
      example:
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: OK
      type: object
    ApiNotFoundErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Запрашиваемый ресурс не найден.
      example:
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: OK
      type: object
    ApiLimitErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Превышено ограничение на доступ к ресурсу.
      example:
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: OK
      type: object
    ApiServerErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Внутренняя ошибка сервера.
      example:
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: OK
      type: object
    GetCampaignsResponse:
      description: Результаты поиска магазинов.
      example:
        campaigns:
        - clientId: 6
          business:
            name: name
            id: 0
          domain: domain
          placementType: FBS
          id: 0
        - clientId: 6
          business:
            name: name
            id: 0
          domain: domain
          placementType: FBS
          id: 0
        pager:
          total: 1
          pagesCount: 7
          pageSize: 9
          from: 5
          to: 5
          currentPage: 2
      properties:
        campaigns:
          description: Список с информацией по каждому магазину.
          items:
            $ref: '#/components/schemas/CampaignDTO'
          type: array
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
      required:
      - campaigns
      type: object
    GetCampaignResponse:
      description: Информация о магазине к данным идентификатора кампании.
      example:
        campaign:
          clientId: 6
          business:
            name: name
            id: 0
          domain: domain
          placementType: FBS
          id: 0
      properties:
        campaign:
          $ref: '#/components/schemas/CampaignDTO'
      type: object
    GetCampaignSettingsResponse:
      description: Ответ на запрос настроек магазина.
      example:
        settings:
          showInPremium: true
          showInContext: true
          localRegion:
            delivery:
              schedule:
                customWorkingDays:
                - 23-09-2022
                - 23-09-2022
                period:
                  fromDate: 23-09-2022
                  toDate: 23-09-2022
                customHolidays:
                - 23-09-2022
                - 23-09-2022
                weeklyHolidays:
                - 1
                - 1
                availableOnHolidays: true
                totalHolidays:
                - 23-09-2022
                - 23-09-2022
            name: name
            id: 6
            type: OTHER
            deliveryOptionsSource: WEB
          countryRegion: 0
          shopName: shopName
          useOpenStat: true
      properties:
        settings:
          $ref: '#/components/schemas/CampaignSettingsDTO'
      type: object
    GetCampaignRegionResponse:
      description: Ответ на запрос региона магазина.
      example:
        region:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: OTHER
      properties:
        region:
          $ref: '#/components/schemas/RegionDTO'
      type: object
    GetOrderResponse:
      example:
        order:
          delivery:
            dispatchType: UNKNOWN
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: NOT_NEEDED
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: DELIVERY
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 5.025004791520295
            outletStorageLimitDate: 23-09-2022
            eacType: MERCHANT_TO_COURIER
            liftPrice: 8.762042012749001
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: OTHER
            deliveryPartnerType: SHOP
            outletCode: outletCode
          notes: notes
          substatus: RESERVATION_EXPIRED
          deliveryTotal: 1.4658129805029452
          buyerItemsTotalBeforeDiscount: 2.3021358869347655
          creationDate: 23-09-2022 09:12:41
          buyerItemsTotal: 5.962133916683182
          paymentType: PREPAID
          buyer:
            lastName: lastName
            firstName: firstName
            middleName: middleName
            id: id
            type: PERSON
          expiryDate: 23-09-2022 09:12:41
          buyerTotalBeforeDiscount: 7.061401241503109
          itemsTotal: 6.027456183070403
          buyerTotal: 5.637376656633329
          subsidies:
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          paymentMethod: CASH_ON_DELIVERY
          currency: RUR
          fake: true
          id: 0
          taxSystem: OSN
          cancelRequested: true
          items:
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          status: PLACING
          updatedAt: 23-09-2022 09:12:41
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO'
      type: object
    OrderStatusType:
      description: |
        Статус заказа:

        * `PLACING` — оформляется, подготовка к резервированию.

        * `RESERVED` — зарезервирован, но недооформлен.

        * `UNPAID` — оформлен, но еще не оплачен (если выбрана оплата при оформлении).

        * `PROCESSING` — находится в обработке.

        * `DELIVERY` — передан в службу доставки.

        * `PICKUP` — доставлен в пункт самовывоза.

        * `DELIVERED` — получен покупателем.

        * `CANCELLED` — отменен.

        * `PENDING` — ожидает обработки со стороны продавца.

        * `PARTIALLY_RETURNED` — возвращен частично.

        * `RETURNED` — возвращен полностью.

        * `UNKNOWN` — неизвестный статус.

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      enum:
      - PLACING
      - RESERVED
      - UNPAID
      - PROCESSING
      - DELIVERY
      - PICKUP
      - DELIVERED
      - CANCELLED
      - PENDING
      - PARTIALLY_RETURNED
      - RETURNED
      - UNKNOWN
      type: string
    OrderSubstatusType:
      description: |
        Этап обработки заказа (если он имеет статус `PROCESSING`) или причина отмены заказа (если он имеет статус `CANCELLED`).

        * Значения для заказа в статусе `PROCESSING`:

            * `STARTED` — заказ подтвержден, его можно начать обрабатывать.

            * `READY_TO_SHIP` — заказ собран и готов к отправке.

        * Значения для заказа в статусе `CANCELLED`:

            * `RESERVATION_EXPIRED` — покупатель не завершил оформление зарезервированного заказа в течение 10 минут.

            * `USER_NOT_PAID` — покупатель не оплатил заказ (для типа оплаты `PREPAID`) в течение 30 минут.

            * `USER_UNREACHABLE` — не удалось связаться с покупателем. Для отмены с этой причиной необходимо выполнить условия:

              * не менее 3 звонков с 8 до 21 в часовом поясе покупателя;
              * перерыв между первым и третьим звонком не менее 90 минут;
              * соединение не короче 5 секунд.

              Если хотя бы одно из этих условий не выполнено (кроме случая, когда номер недоступен), отменить заказ не получится. Вернется ответ с кодом ошибки 400.

            * `USER_CHANGED_MIND` — покупатель отменил заказ по личным причинам.

            * `USER_REFUSED_DELIVERY` — покупателя не устроили условия доставки.

            * `USER_REFUSED_PRODUCT` — покупателю не подошел товар.

            * `SHOP_FAILED` — магазин не может выполнить заказ.

            * `USER_REFUSED_QUALITY` — покупателя не устроило качество товара.

            * `REPLACING_ORDER` — покупатель решил заменить товар другим по собственной инициативе.

            * `PROCESSING_EXPIRED` — значение более не используется.

            * `PICKUP_EXPIRED` — закончился срок хранения заказа в ПВЗ.

            * `TOO_MANY_DELIVERY_DATE_CHANGES` — заказ переносили слишком много раз.

            * `TOO_LONG_DELIVERY` — заказ доставляется слишком долго.


        * `TECHNICAL_ERROR` — техническая ошибка на стороне Маркета. Обратитесь в поддержку.

        Также могут возвращаться другие значения. Обрабатывать их не требуется.
      enum:
      - RESERVATION_EXPIRED
      - USER_NOT_PAID
      - USER_UNREACHABLE
      - USER_CHANGED_MIND
      - USER_REFUSED_DELIVERY
      - USER_REFUSED_PRODUCT
      - SHOP_FAILED
      - USER_REFUSED_QUALITY
      - REPLACING_ORDER
      - PROCESSING_EXPIRED
      - PENDING_EXPIRED
      - SHOP_PENDING_CANCELLED
      - PENDING_CANCELLED
      - USER_FRAUD
      - RESERVATION_FAILED
      - USER_PLACED_OTHER_ORDER
      - USER_BOUGHT_CHEAPER
      - MISSING_ITEM
      - BROKEN_ITEM
      - WRONG_ITEM
      - PICKUP_EXPIRED
      - DELIVERY_PROBLEMS
      - LATE_CONTACT
      - CUSTOM
      - DELIVERY_SERVICE_FAILED
      - WAREHOUSE_FAILED_TO_SHIP
      - DELIVERY_SERIVCE_UNDELIVERED
      - DELIVERY_SERVICE_UNDELIVERED
      - PREORDER
      - AWAIT_CONFIRMATION
      - STARTED
      - PACKAGING
      - READY_TO_SHIP
      - SHIPPED
      - ASYNC_PROCESSING
      - USER_REFUSED_TO_PROVIDE_PERSONAL_DATA
      - WAITING_USER_INPUT
      - WAITING_BANK_DECISION
      - BANK_REJECT_CREDIT_OFFER
      - CUSTOMER_REJECT_CREDIT_OFFER
      - CREDIT_OFFER_FAILED
      - AWAIT_DELIVERY_DATES_CONFIRMATION
      - SERVICE_FAULT
      - DELIVERY_SERVICE_RECEIVED
      - USER_RECEIVED
      - WAITING_FOR_STOCKS
      - AS_PART_OF_MULTI_ORDER
      - READY_FOR_LAST_MILE
      - LAST_MILE_STARTED
      - ANTIFRAUD
      - DELIVERY_USER_NOT_RECEIVED
      - DELIVERY_SERVICE_DELIVERED
      - DELIVERED_USER_NOT_RECEIVED
      - USER_WANTED_ANOTHER_PAYMENT_METHOD
      - USER_RECEIVED_TECHNICAL_ERROR
      - USER_FORGOT_TO_USE_BONUS
      - RECEIVED_ON_DISTRIBUTION_CENTER
      - DELIVERY_SERVICE_NOT_RECEIVED
      - DELIVERY_SERVICE_LOST
      - SHIPPED_TO_WRONG_DELIVERY_SERVICE
      - DELIVERED_USER_RECEIVED
      - WAITING_TINKOFF_DECISION
      - COURIER_SEARCH
      - COURIER_FOUND
      - COURIER_IN_TRANSIT_TO_SENDER
      - COURIER_ARRIVED_TO_SENDER
      - COURIER_RECEIVED
      - COURIER_NOT_FOUND
      - COURIER_NOT_DELIVER_ORDER
      - COURIER_RETURNS_ORDER
      - COURIER_RETURNED_ORDER
      - WAITING_USER_DELIVERY_INPUT
      - PICKUP_SERVICE_RECEIVED
      - PICKUP_USER_RECEIVED
      - CANCELLED_COURIER_NOT_FOUND
      - COURIER_NOT_COME_FOR_ORDER
      - DELIVERY_NOT_MANAGED_REGION
      - INCOMPLETE_CONTACT_INFORMATION
      - INCOMPLETE_MULTI_ORDER
      - INAPPROPRIATE_WEIGHT_SIZE
      - TECHNICAL_ERROR
      - SORTING_CENTER_LOST
      - COURIER_SEARCH_NOT_STARTED
      - LOST
      - AWAIT_PAYMENT
      - AWAIT_LAVKA_RESERVATION
      - USER_WANTS_TO_CHANGE_ADDRESS
      - FULL_NOT_RANSOM
      - PRESCRIPTION_MISMATCH
      - DROPOFF_LOST
      - DROPOFF_CLOSED
      - DELIVERY_TO_STORE_STARTED
      - USER_WANTS_TO_CHANGE_DELIVERY_DATE
      - WRONG_ITEM_DELIVERED
      - DAMAGED_BOX
      - AWAIT_DELIVERY_DATES
      - LAST_MILE_COURIER_SEARCH
      - PICKUP_POINT_CLOSED
      - LEGAL_INFO_CHANGED
      - USER_HAS_NO_TIME_TO_PICKUP_ORDER
      - DELIVERY_CUSTOMS_ARRIVED
      - DELIVERY_CUSTOMS_CLEARED
      - FIRST_MILE_DELIVERY_SERVICE_RECEIVED
      - AWAIT_AUTO_DELIVERY_DATES
      - AWAIT_USER_PERSONAL_DATA
      - NO_PERSONAL_DATA_EXPIRED
      - CUSTOMS_PROBLEMS
      - AWAIT_CASHIER
      - WAITING_POSTPAID_BUDGET_RESERVATION
      - AWAIT_SERVICEABLE_CONFIRMATION
      - POSTPAID_BUDGET_RESERVATION_FAILED
      - AWAIT_CUSTOM_PRICE_CONFIRMATION
      - READY_FOR_PICKUP
      - TOO_MANY_DELIVERY_DATE_CHANGES
      - TOO_LONG_DELIVERY
      - DEFERRED_PAYMENT
      - UNKNOWN
      type: string
    OrderDeliveryDispatchType:
      description: |
        Способ отгрузки:

        * `BUYER` — доставка покупателю.

        * `MARKET_BRANDED_OUTLET` — доставка в пункт выдачи заказов Маркета.

        * `SHOP_OUTLET` — доставка в пункт выдачи заказов магазина.

        * `UNKNOWN` — неизвестный тип.
      enum:
      - UNKNOWN
      - BUYER
      - MARKET_BRANDED_OUTLET
      - SHOP_OUTLET
      type: string
    OrderBuyerType:
      description: |
        Тип покупателя:

        * `PERSON` — физическое лицо.

        * `BUSINESS` — организация.
      enum:
      - PERSON
      - BUSINESS
      type: string
    GetOrdersResponse:
      description: Модель для ответа API списка информации по заказам.
      example:
        pager:
          total: 1
          pagesCount: 7
          pageSize: 9
          from: 5
          to: 5
          currentPage: 2
        orders:
        - delivery:
            dispatchType: UNKNOWN
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: NOT_NEEDED
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: DELIVERY
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 5.025004791520295
            outletStorageLimitDate: 23-09-2022
            eacType: MERCHANT_TO_COURIER
            liftPrice: 8.762042012749001
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: OTHER
            deliveryPartnerType: SHOP
            outletCode: outletCode
          notes: notes
          substatus: RESERVATION_EXPIRED
          deliveryTotal: 1.4658129805029452
          buyerItemsTotalBeforeDiscount: 2.3021358869347655
          creationDate: 23-09-2022 09:12:41
          buyerItemsTotal: 5.962133916683182
          paymentType: PREPAID
          buyer:
            lastName: lastName
            firstName: firstName
            middleName: middleName
            id: id
            type: PERSON
          expiryDate: 23-09-2022 09:12:41
          buyerTotalBeforeDiscount: 7.061401241503109
          itemsTotal: 6.027456183070403
          buyerTotal: 5.637376656633329
          subsidies:
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          paymentMethod: CASH_ON_DELIVERY
          currency: RUR
          fake: true
          id: 0
          taxSystem: OSN
          cancelRequested: true
          items:
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          status: PLACING
          updatedAt: 23-09-2022 09:12:41
        - delivery:
            dispatchType: UNKNOWN
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: NOT_NEEDED
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: DELIVERY
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 5.025004791520295
            outletStorageLimitDate: 23-09-2022
            eacType: MERCHANT_TO_COURIER
            liftPrice: 8.762042012749001
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: OTHER
            deliveryPartnerType: SHOP
            outletCode: outletCode
          notes: notes
          substatus: RESERVATION_EXPIRED
          deliveryTotal: 1.4658129805029452
          buyerItemsTotalBeforeDiscount: 2.3021358869347655
          creationDate: 23-09-2022 09:12:41
          buyerItemsTotal: 5.962133916683182
          paymentType: PREPAID
          buyer:
            lastName: lastName
            firstName: firstName
            middleName: middleName
            id: id
            type: PERSON
          expiryDate: 23-09-2022 09:12:41
          buyerTotalBeforeDiscount: 7.061401241503109
          itemsTotal: 6.027456183070403
          buyerTotal: 5.637376656633329
          subsidies:
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          paymentMethod: CASH_ON_DELIVERY
          currency: RUR
          fake: true
          id: 0
          taxSystem: OSN
          cancelRequested: true
          items:
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          status: PLACING
          updatedAt: 23-09-2022 09:12:41
        - delivery:
            dispatchType: UNKNOWN
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: NOT_NEEDED
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: DELIVERY
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 5.025004791520295
            outletStorageLimitDate: 23-09-2022
            eacType: MERCHANT_TO_COURIER
            liftPrice: 8.762042012749001
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: OTHER
            deliveryPartnerType: SHOP
            outletCode: outletCode
          notes: notes
          substatus: RESERVATION_EXPIRED
          deliveryTotal: 1.4658129805029452
          buyerItemsTotalBeforeDiscount: 2.3021358869347655
          creationDate: 23-09-2022 09:12:41
          buyerItemsTotal: 5.962133916683182
          paymentType: PREPAID
          buyer:
            lastName: lastName
            firstName: firstName
            middleName: middleName
            id: id
            type: PERSON
          expiryDate: 23-09-2022 09:12:41
          buyerTotalBeforeDiscount: 7.061401241503109
          itemsTotal: 6.027456183070403
          buyerTotal: 5.637376656633329
          subsidies:
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          paymentMethod: CASH_ON_DELIVERY
          currency: RUR
          fake: true
          id: 0
          taxSystem: OSN
          cancelRequested: true
          items:
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          status: PLACING
          updatedAt: 23-09-2022 09:12:41
        - delivery:
            dispatchType: UNKNOWN
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: NOT_NEEDED
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: DELIVERY
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 5.025004791520295
            outletStorageLimitDate: 23-09-2022
            eacType: MERCHANT_TO_COURIER
            liftPrice: 8.762042012749001
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: OTHER
            deliveryPartnerType: SHOP
            outletCode: outletCode
          notes: notes
          substatus: RESERVATION_EXPIRED
          deliveryTotal: 1.4658129805029452
          buyerItemsTotalBeforeDiscount: 2.3021358869347655
          creationDate: 23-09-2022 09:12:41
          buyerItemsTotal: 5.962133916683182
          paymentType: PREPAID
          buyer:
            lastName: lastName
            firstName: firstName
            middleName: middleName
            id: id
            type: PERSON
          expiryDate: 23-09-2022 09:12:41
          buyerTotalBeforeDiscount: 7.061401241503109
          itemsTotal: 6.027456183070403
          buyerTotal: 5.637376656633329
          subsidies:
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          paymentMethod: CASH_ON_DELIVERY
          currency: RUR
          fake: true
          id: 0
          taxSystem: OSN
          cancelRequested: true
          items:
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          status: PLACING
          updatedAt: 23-09-2022 09:12:41
        - delivery:
            dispatchType: UNKNOWN
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: NOT_NEEDED
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: DELIVERY
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 5.025004791520295
            outletStorageLimitDate: 23-09-2022
            eacType: MERCHANT_TO_COURIER
            liftPrice: 8.762042012749001
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: OTHER
            deliveryPartnerType: SHOP
            outletCode: outletCode
          notes: notes
          substatus: RESERVATION_EXPIRED
          deliveryTotal: 1.4658129805029452
          buyerItemsTotalBeforeDiscount: 2.3021358869347655
          creationDate: 23-09-2022 09:12:41
          buyerItemsTotal: 5.962133916683182
          paymentType: PREPAID
          buyer:
            lastName: lastName
            firstName: firstName
            middleName: middleName
            id: id
            type: PERSON
          expiryDate: 23-09-2022 09:12:41
          buyerTotalBeforeDiscount: 7.061401241503109
          itemsTotal: 6.027456183070403
          buyerTotal: 5.637376656633329
          subsidies:
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          paymentMethod: CASH_ON_DELIVERY
          currency: RUR
          fake: true
          id: 0
          taxSystem: OSN
          cancelRequested: true
          items:
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          status: PLACING
          updatedAt: 23-09-2022 09:12:41
        paging:
          nextPageToken: nextPageToken
      properties:
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
        orders:
          description: |
            Модель заказа.
          items:
            $ref: '#/components/schemas/OrderDTO'
          maxItems: 50
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - orders
      type: object
    ProvideOrderItemIdentifiersRequest:
      example:
        items:
        - instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          id: 0
        - instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          id: 0
      properties:
        items:
          description: |
            Список позиций, требующих маркировки.
          items:
            $ref: '#/components/schemas/OrderItemInstanceModificationDTO'
          type: array
      required:
      - items
      type: object
    ProvideOrderItemIdentifiersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderItemsModificationResultDTO'
        type: object
      example:
        result:
          items:
          - offerName: offerName
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            price: 1.4658129805029452
            vat: NO_VAT
            count: 6
            offerId: offerId
            id: 0
          - offerName: offerName
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            price: 1.4658129805029452
            vat: NO_VAT
            count: 6
            offerId: offerId
            id: 0
        status: OK
      type: object
    UpdateOrderItemRequest:
      description: Запрос на обновление состава заказа.
      example:
        reason: PARTNER_REQUESTED_REMOVE
        items:
        - instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          count: 0
          id: 0
        - instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          count: 0
          id: 0
      properties:
        items:
          description: |
            Список товаров в заказе.

            Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.

            Обязательный параметр.
          items:
            $ref: '#/components/schemas/OrderItemModificationDTO'
          minItems: 1
          type: array
        reason:
          $ref: '#/components/schemas/OrderItemsModificationRequestReasonType'
      required:
      - items
      type: object
    UpdateOrderStatusRequest:
      example:
        order:
          delivery:
            dates:
              realDeliveryDate: 2000-01-23
          substatus: RESERVATION_EXPIRED
          status: PLACING
      properties:
        order:
          $ref: '#/components/schemas/OrderStatusChangeDTO'
      required:
      - order
      type: object
    UpdateOrderStatusResponse:
      description: Информация об изменении статуса заказа.
      example:
        order:
          delivery:
            dispatchType: UNKNOWN
            address:
              country: country
              city: city
              postcode: postcode
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              house: house
              subway: subway
              phone: phone
              street: street
              district: district
              recipient: recipient
              entryphone: entryphone
              block: block
              entrance: entrance
              floor: floor
              apartment: apartment
            liftType: NOT_NEEDED
            deliveryServiceId: 6
            vat: null
            estimated: true
            dates:
              fromDate: 23-09-2022
              toDate: 23-09-2022
              fromTime: fromTime
              toTime: toTime
              realDeliveryDate: 23-09-2022
            type: DELIVERY
            serviceName: serviceName
            shipments:
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            - boxes:
              - fulfilmentId: fulfilmentId
                id: 3
              - fulfilmentId: fulfilmentId
                id: 3
              id: 6
              shipmentDate: 23-09-2022
              shipmentTime: shipmentTime
              tracks:
              - trackCode: trackCode
                deliveryServiceId: 9
              - trackCode: trackCode
                deliveryServiceId: 9
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
            courier:
              vehicleDescription: vehicleDescription
              phone: phone
              phoneExtension: phoneExtension
              fullName: fullName
              vehicleNumber: vehicleNumber
            price: 5.025004791520295
            outletStorageLimitDate: 23-09-2022
            eacType: MERCHANT_TO_COURIER
            liftPrice: 8.762042012749001
            eacCode: eacCode
            id: id
            region:
              parent: null
              children:
              - null
              - null
              name: name
              id: 0
              type: OTHER
            deliveryPartnerType: SHOP
            outletCode: outletCode
          notes: notes
          substatus: RESERVATION_EXPIRED
          deliveryTotal: 1.4658129805029452
          buyerItemsTotalBeforeDiscount: 2.3021358869347655
          creationDate: 23-09-2022 09:12:41
          buyerItemsTotal: 5.962133916683182
          paymentType: PREPAID
          buyer:
            lastName: lastName
            firstName: firstName
            middleName: middleName
            id: id
            type: PERSON
          expiryDate: 23-09-2022 09:12:41
          buyerTotalBeforeDiscount: 7.061401241503109
          itemsTotal: 6.027456183070403
          buyerTotal: 5.637376656633329
          subsidies:
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          - amount: 4.965218492984954
            type: YANDEX_CASHBACK
          paymentMethod: CASH_ON_DELIVERY
          currency: RUR
          fake: true
          id: 0
          taxSystem: OSN
          cancelRequested: true
          items:
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          - offerName: offerName
            subsidy: 1.0246457001441578
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              cisFull: cisFull
              uin: uin
              cis: cis
            priceBeforeDiscount: 7.386281948385884
            count: 1
            vat: NO_VAT
            requiredInstanceTypes:
            - CIS
            - CIS
            tags:
            - ULTIMA
            - ULTIMA
            buyerPriceBeforeDiscount: 4.145608029883936
            shopSku: shopSku
            price: 3.616076749251911
            partnerWarehouseId: partnerWarehouseId
            subsidies:
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            - amount: 1.1730742509559433
              type: YANDEX_CASHBACK
            offerId: offerId
            buyerPrice: 2.027123023002322
            details:
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            - updateDate: 23-09-2022
              itemStatus: REJECTED
              itemCount: 7
            id: 9
            promos:
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
            - subsidy: 6.84685269835264
              shopPromoId: shopPromoId
              discount: 1.4894159098541704
              marketPromoId: marketPromoId
              type: DIRECT_DISCOUNT
          status: PLACING
          updatedAt: 23-09-2022 09:12:41
      properties:
        order:
          $ref: '#/components/schemas/OrderDTO'
      type: object
    UpdateOrderStatusesRequest:
      description: Список заказов.
      example:
        orders:
        - substatus: RESERVATION_EXPIRED
          id: 0
          status: PLACING
        - substatus: RESERVATION_EXPIRED
          id: 0
          status: PLACING
        - substatus: RESERVATION_EXPIRED
          id: 0
          status: PLACING
        - substatus: RESERVATION_EXPIRED
          id: 0
          status: PLACING
        - substatus: RESERVATION_EXPIRED
          id: 0
          status: PLACING
      properties:
        orders:
          description: Список заказов.
          items:
            $ref: '#/components/schemas/OrderStateDTO'
          maxItems: 30
          minItems: 1
          type: array
      required:
      - orders
      type: object
    UpdateOrderStatusesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/UpdateOrderStatusesDTO'
        type: object
      example:
        result:
          orders:
          - substatus: RESERVATION_EXPIRED
            updateStatus: OK
            id: 0
            status: PLACING
            errorDetails: errorDetails
          - substatus: RESERVATION_EXPIRED
            updateStatus: OK
            id: 0
            status: PLACING
            errorDetails: errorDetails
        status: OK
      type: object
    SetOrderShipmentBoxesRequest:
      allOf:
      - $ref: '#/components/schemas/ParcelRequestDTO'
      example:
        boxes:
        - fulfilmentId: fulfilmentId
        - fulfilmentId: fulfilmentId
      type: object
    SetOrderShipmentBoxesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ShipmentBoxesDTO'
        type: object
      example:
        result:
          boxes:
          - fulfilmentId: fulfilmentId
            id: 0
          - fulfilmentId: fulfilmentId
            id: 0
        status: OK
      type: object
    AcceptOrderCancellationRequest:
      example:
        reason: ORDER_DELIVERED
        accepted: true
      properties:
        accepted:
          description: |
            Решение об отмене заказа:

            * `true` — заказ отменяется, служба доставки узнала об отмене до передачи заказа покупателю.
            * `false` — заказ не отменяется, так как он уже доставлен покупателю курьером или передан в пункт выдачи заказов.
          type: boolean
        reason:
          $ref: '#/components/schemas/OrderCancellationReasonType'
      required:
      - accepted
      type: object
    EmptyApiResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      description: Пустой ответ сервера.
      example:
        status: OK
      type: object
    ProvideOrderDigitalCodesRequest:
      description: Запрос на передачу ключей цифровых товаров.
      example:
        items:
        - codes:
          - codes
          - codes
          - codes
          - codes
          - codes
          activate_till: 2000-01-23
          code: code
          slip: slip
          id: 0
        - codes:
          - codes
          - codes
          - codes
          - codes
          - codes
          activate_till: 2000-01-23
          code: code
          slip: slip
          id: 0
        - codes:
          - codes
          - codes
          - codes
          - codes
          - codes
          activate_till: 2000-01-23
          code: code
          slip: slip
          id: 0
        - codes:
          - codes
          - codes
          - codes
          - codes
          - codes
          activate_till: 2000-01-23
          code: code
          slip: slip
          id: 0
        - codes:
          - codes
          - codes
          - codes
          - codes
          - codes
          activate_till: 2000-01-23
          code: code
          slip: slip
          id: 0
      properties:
        items:
          description: |
            Список проданных товаров.

            Если в заказе есть несколько **одинаковых** товаров (например, несколько ключей к одной и той же подписке), передайте ключи в виде массива к этому товару. Параметр `id` у этих элементов должен быть один и тот же.
          items:
            $ref: '#/components/schemas/OrderDigitalItemDTO'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - items
      type: object
    SetOrderBoxLayoutRequest:
      example:
        boxes:
        - items:
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
        - items:
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
        allowRemove: false
      properties:
        boxes:
          description: Список коробок.
          items:
            $ref: '#/components/schemas/OrderBoxLayoutDTO'
          minItems: 1
          type: array
        allowRemove:
          default: false
          description: "Передайте `true`, если вы собираетесь удалить часть товаро\
            в из заказа."
          type: boolean
      required:
      - boxes
      type: object
    SetOrderBoxLayoutResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderBoxesLayoutDTO'
        type: object
      example:
        result:
          boxes:
          - items:
            - partialCount:
                current: 1
                total: 2
              instances:
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              id: 0
              fullCount: 1
            - partialCount:
                current: 1
                total: 2
              instances:
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              id: 0
              fullCount: 1
            boxId: 5
          - items:
            - partialCount:
                current: 1
                total: 2
              instances:
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              id: 0
              fullCount: 1
            - partialCount:
                current: 1
                total: 2
              instances:
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              - rnpt: rnpt
                gtd: gtd
                countryCode: RU
                uin: uin
                cis: cis
              id: 0
              fullCount: 1
            boxId: 5
        status: OK
      type: object
    UpdateExternalOrderIdRequest:
      description: Список заказов.
      example:
        externalOrderId: externalOrderId
      properties:
        externalOrderId:
          description: Дополнительный идентификатор заказа.
          minLength: 1
          type: string
      required:
      - externalOrderId
      type: object
    GetOrderIdentifiersStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetOrderIdentifiersStatusDTO'
        type: object
      example:
        result:
          items:
          - id: 0
            uin:
            - value: value
              status: OK
            - value: value
              status: OK
          - id: 0
            uin:
            - value: value
              status: OK
            - value: value
              status: OK
        status: OK
      type: object
    SetOrderDeliveryDateRequest:
      example:
        reason: USER_MOVED_DELIVERY_DATES
        dates:
          toDate: 2000-01-23
      properties:
        dates:
          $ref: '#/components/schemas/OrderDeliveryDateDTO'
        reason:
          $ref: '#/components/schemas/OrderDeliveryDateReasonType'
      required:
      - dates
      - reason
      type: object
    SetOrderDeliveryTrackCodeRequest:
      example:
        trackCode: trackCode
        deliveryServiceId: 0
      properties:
        trackCode:
          description: Трек‑номер посылки.
          type: string
        deliveryServiceId:
          description: "Идентификатор службы доставки. Информацию о службе доставк\
            и можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md)."
          format: int64
          type: integer
      required:
      - deliveryServiceId
      - trackCode
      type: object
    GetOrderBuyerInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderBuyerInfoDTO'
        type: object
      example:
        result:
          lastName: lastName
          firstName: firstName
          phone: phone
          trusted: true
          middleName: middleName
          id: id
          type: PERSON
        status: OK
      type: object
    VerifyOrderEacRequest:
      example:
        code: code
      properties:
        code:
          description: Код для подтверждения ЭАПП.
          type: string
      required:
      - code
      type: object
    VerifyOrderEacResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/EacVerificationResultDTO'
        type: object
      example:
        result:
          verificationResult: ACCEPTED
          attemptsLeft: 0
        status: OK
      type: object
    UpdateOrderStorageLimitRequest:
      description: Запрос на обновление срока хранения заказа в ПВЗ.
      example:
        newDate: 2000-01-23
      properties:
        newDate:
          description: |
            Новая дата, до которой заказ будет храниться в пункте выдачи.

            Срок хранения можно увеличить не больше, чем на 30 дней.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
      required:
      - newDate
      type: object
    PageFormatType:
      description: |
        Размещение ярлыков на странице PDF-файла:

        * `A9_HORIZONTALLY` — ярлык размером 58 × 40 мм без полей, близок к формату A9.

          {% cut "Пример ярлыка для продавцов Маркета" %}

          ![Изображение горизонтального ярлыка формата A9 для продавцов Маркета](../../_images/labels/label-A9-horizontally.png)

          {% endcut %}

          {% cut "Пример ярлыка для продавцов Market Yandex Go" %}

          ![Изображение горизонтального ярлыка формата A9 для продавцов Market Yandex Go](../../_images/labels/label-A9-horizontally-uz.png)

          {% endcut %}

        * `A9` — ярлык размером 40 × 58 мм без полей, близок к формату A9.

          {% cut "Пример ярлыка для продавцов Маркета" %}

          ![Изображение вертикального ярлыка формата A9 для продавцов Маркета](../../_images/labels/label-A9.png)

          {% endcut %}

          {% cut "Пример ярлыка для продавцов Market Yandex Go" %}

          ![Изображение вертикального ярлыка формата A9 для продавцов Market Yandex Go](../../_images/labels/label-A9-uz.png)

          {% endcut %}

        * `A7` — ярлык размером 75 × 120 мм (80,4 × 125,6 мм с учетом полей), близок к формату A7.

          {% cut "Пример ярлыка для продавцов Маркета" %}

          ![Изображение ярлыка формата A7 для продавцов Маркета](../../_images/labels/label-A7.jpg)

          {% endcut %}

          {% cut "Пример ярлыка для продавцов Market Yandex Go" %}

          ![Изображение ярлыка формата A7 для продавцов Market Yandex Go](../../_images/labels/label-A7-uz.png)

          {% endcut %}

        * `A4` — на листе A4 располагается ярлык того формата, который выбран в кабинете продавца на Маркете — перейдите на страницу **Заказы** → **Заказы и отгрузки** → на вкладке нужной модели работы нажмите кнопку **Формат ярлыков**.
      enum:
      - A9_HORIZONTALLY
      - A9
      - A7
      - A4
      type: string
    GetOrderLabelsDataResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderLabelDTO'
        type: object
      description: Ответ с информацией для печати ярлыков.
      example:
        result:
          parcelBoxLabels:
          - supplierName: supplierName
            deliveryServiceId: deliveryServiceId
            orderId: 1
            fulfilmentId: fulfilmentId
            orderNum: orderNum
            weight: weight
            url: url
            deliveryServiceName: deliveryServiceName
            deliveryAddress: deliveryAddress
            recipientName: recipientName
            place: place
            shipmentDate: shipmentDate
            boxId: 5
          - supplierName: supplierName
            deliveryServiceId: deliveryServiceId
            orderId: 1
            fulfilmentId: fulfilmentId
            orderNum: orderNum
            weight: weight
            url: url
            deliveryServiceName: deliveryServiceName
            deliveryAddress: deliveryAddress
            recipientName: recipientName
            place: place
            shipmentDate: shipmentDate
            boxId: 5
          orderId: 0
          placesNumber: 6
          url: url
        status: OK
      type: object
    GetBusinessBuyerInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderBusinessBuyerDTO'
        type: object
      example:
        result:
          organizationName: organizationName
          organizationJurAddress: organizationJurAddress
          inn: inn
          kpp: kpp
        status: OK
      type: object
    GetBusinessDocumentsInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrderBusinessDocumentsDTO'
        type: object
      example:
        result:
          sf:
            date: 2000-01-23
            number: number
            status: READY
          torgTwelve:
            date: 2000-01-23
            number: number
            status: READY
          upd:
            date: 2000-01-23
            number: number
            status: READY
          ukd:
            date: 2000-01-23
            number: number
            status: READY
          ksf:
            date: 2000-01-23
            number: number
            status: READY
        status: OK
      type: object
    RefundStatusType:
      description: |
        Статус возврата денег:

        * `STARTED_BY_USER` — создан клиентом из личного кабинета.

        * `REFUND_IN_PROGRESS` — ждет решение о возврате денег.

        * `REFUNDED` — по возврату проведены все возвратные денежные транзакции.

        * `FAILED` — невозможно провести возврат покупателю.

        * `WAITING_FOR_DECISION` — ожидает решения.

        * `DECISION_MADE` — по возврату принято решение.

        * `REFUNDED_WITH_BONUSES` — возврат осуществлен баллами Плюса или промокодом.

        * `REFUNDED_BY_SHOP` — магазин сделал самостоятельно возврат денег.

        * `COMPLETE_WITHOUT_REFUND` — возврат денег не требуется.

        * `CANCELLED` — возврат отменен.

        * `PREMODERATION_DISPUTE` — по возврату открыт спор.

        * `PREMODERATION_DECISION_WAITING` — ожидает решения.

        * `PREMODERATION_DECISION_MADE` — по возврату принято решение.

        * `UNKNOWN` — неизвестный статус.
      enum:
      - STARTED_BY_USER
      - REFUND_IN_PROGRESS
      - REFUNDED
      - FAILED
      - WAITING_FOR_DECISION
      - DECISION_MADE
      - REFUNDED_WITH_BONUSES
      - REFUNDED_BY_SHOP
      - CANCELLED
      - COMPLETE_WITHOUT_REFUND
      - PREMODERATION_DISPUTE
      - PREMODERATION_DECISION_WAITING
      - PREMODERATION_DECISION_MADE
      - UNKNOWN
      type: string
    ReturnType:
      description: |
        Тип заказа для фильтрации:

        * `UNREDEEMED` — невыкуп.

        * `RETURN` — возврат.

        Если не указывать, в ответе будут и невыкупы, и возвраты.
      enum:
      - UNREDEEMED
      - RETURN
      type: string
    GetReturnsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/PagedReturnsDTO'
        type: object
      example:
        result:
          paging:
            nextPageToken: nextPageToken
          returns:
          - updateDate: 2020-02-02T14:30:30+03:00
            amount:
              currencyId: RUR
              value: 2.3021358869347655
            orderId: 6
            shipmentRecipientType: SHOP
            refundStatus: STARTED_BY_USER
            creationDate: 2020-02-02T14:30:30+03:00
            fastReturn: true
            logisticPickupPoint:
              logisticPartnerId: 5
              address:
                country: Россия
                city: Москва
                street: Стрелецкая улица
                postcode: "123518"
                house: 9к2
              instruction: instruction
              name: name
              id: 1
              type: WAREHOUSE
            id: 0
            items:
            - shopSku: shopSku
              instances:
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              marketSku: 1
              count: 9
              decisions:
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              tracks:
              - trackCode: trackCode
              - trackCode: trackCode
            - shopSku: shopSku
              instances:
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              marketSku: 1
              count: 9
              decisions:
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              tracks:
              - trackCode: trackCode
              - trackCode: trackCode
            returnType: UNREDEEMED
            shipmentStatus: CREATED
            refundAmount: 5
          - updateDate: 2020-02-02T14:30:30+03:00
            amount:
              currencyId: RUR
              value: 2.3021358869347655
            orderId: 6
            shipmentRecipientType: SHOP
            refundStatus: STARTED_BY_USER
            creationDate: 2020-02-02T14:30:30+03:00
            fastReturn: true
            logisticPickupPoint:
              logisticPartnerId: 5
              address:
                country: Россия
                city: Москва
                street: Стрелецкая улица
                postcode: "123518"
                house: 9к2
              instruction: instruction
              name: name
              id: 1
              type: WAREHOUSE
            id: 0
            items:
            - shopSku: shopSku
              instances:
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              marketSku: 1
              count: 9
              decisions:
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              tracks:
              - trackCode: trackCode
              - trackCode: trackCode
            - shopSku: shopSku
              instances:
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              - stockType: FIT
                imei: imei
                cis: cis
                status: CREATED
              marketSku: 1
              count: 9
              decisions:
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              - amount:
                  currencyId: RUR
                  value: 2.3021358869347655
                images:
                - images
                - images
                returnItemId: 3
                subreasonType: USER_DID_NOT_LIKE
                count: 2
                partnerCompensationAmount:
                  currencyId: RUR
                  value: 2.3021358869347655
                comment: comment
                decisionType: REFUND_MONEY
                reasonType: BAD_QUALITY
                partnerCompensation: 7
                refundAmount: 4
              tracks:
              - trackCode: trackCode
              - trackCode: trackCode
            returnType: UNREDEEMED
            shipmentStatus: CREATED
            refundAmount: 5
        status: OK
      type: object
    GetReturnResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ReturnDTO'
        type: object
      example:
        result:
          updateDate: 2020-02-02T14:30:30+03:00
          amount:
            currencyId: RUR
            value: 2.3021358869347655
          orderId: 6
          shipmentRecipientType: SHOP
          refundStatus: STARTED_BY_USER
          creationDate: 2020-02-02T14:30:30+03:00
          fastReturn: true
          logisticPickupPoint:
            logisticPartnerId: 5
            address:
              country: Россия
              city: Москва
              street: Стрелецкая улица
              postcode: "123518"
              house: 9к2
            instruction: instruction
            name: name
            id: 1
            type: WAREHOUSE
          id: 0
          items:
          - shopSku: shopSku
            instances:
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            marketSku: 1
            count: 9
            decisions:
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            tracks:
            - trackCode: trackCode
            - trackCode: trackCode
          - shopSku: shopSku
            instances:
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            marketSku: 1
            count: 9
            decisions:
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            tracks:
            - trackCode: trackCode
            - trackCode: trackCode
          returnType: UNREDEEMED
          shipmentStatus: CREATED
          refundAmount: 5
        status: OK
      type: object
    SetReturnDecisionRequest:
      description: Решения по товару в возврате.
      example:
        returnItemId: 1
        decisionType: REFUND_MONEY_INCLUDING_SHIPMENT
        comment: Вернуть 149 рублей за пересылку.
      properties:
        returnItemId:
          description: Идентификатор товара в возврате.
          format: int64
          type: integer
        decisionType:
          $ref: '#/components/schemas/ReturnRequestDecisionType'
        comment:
          description: |
            Комментарий к решению. Укажите:

            * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки.

            * для `REPAIR` — когда вы устраните недостатки товара.

            * для `DECLINE_REFUND` — причину отказа.

            * для `OTHER_DECISION` — какое решение вы предлагаете.
          type: string
      required:
      - decisionType
      - returnItemId
      type: object
    SubmitReturnDecisionRequest:
      description: Запрос на подтверждение решения по возврату.
      required:
      - returnItemDecisions
      type: object
    GetRegionsResponse:
      example:
        regions:
        - parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: OTHER
        - parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: OTHER
        paging:
          nextPageToken: nextPageToken
      properties:
        regions:
          description: Регион доставки.
          items:
            $ref: '#/components/schemas/RegionDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - regions
      type: object
    GetRegionWithChildrenResponse:
      example:
        regions:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: OTHER
        pager:
          total: 1
          pagesCount: 7
          pageSize: 9
          from: 5
          to: 5
          currentPage: 2
      properties:
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
        regions:
          $ref: '#/components/schemas/RegionDTO'
      type: object
    GetRegionsCodesResponse:
      example:
        countries:
        - countryCode: RU
          region:
            parent: null
            children:
            - null
            - null
            name: name
            id: 0
            type: OTHER
        - countryCode: RU
          region:
            parent: null
            children:
            - null
            - null
            name: name
            id: 0
            type: OTHER
      properties:
        countries:
          description: Список стран с их кодами в формате ISO 3166-1 alpha-2.
          items:
            $ref: '#/components/schemas/CountryDTO'
          type: array
      required:
      - countries
      type: object
    GetShipmentResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ShipmentDTO'
        type: object
      example:
        result:
          deliveryService:
            name: name
            id: 1
          availableActions:
          - CONFIRM
          - CONFIRM
          draftCount: 0
          plannedCount: 0
          signature:
            signed: true
          currentStatus:
            description: description
            updateTime: 2017-11-21T00:00:00+03:00
            status: OUTBOUND_CREATED
          planIntervalTo: 2017-11-21T00:00:00+03:00
          externalId: externalId
          warehouse:
            address: address
            name: name
            id: 1
          shipmentType: IMPORT
          planIntervalFrom: 2017-11-21T00:00:00+03:00
          warehouseTo:
            address: address
            name: name
            id: 1
          factCount: 0
          palletsCount:
            fact: 0
            planned: 0
          id: 1
          orderIds:
          - 1
          - 1
        status: OK
      type: object
    GetShipmentOrdersInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrdersShipmentInfoDTO'
        type: object
      example:
        result:
          orderIdsWithLabels:
          - 0
          - 0
          orderIdsWithoutLabels:
          - 6
          - 6
        status: OK
      type: object
    ConfirmShipmentRequest:
      description: Запрос для подтверждения отгрузки.
      example:
        externalShipmentId: externalShipmentId
        signatory: signatory
      properties:
        externalShipmentId:
          description: Идентификатор отгрузки в системе поставщика.
          type: string
        signatory:
          description: |
            Логин пользователя в Яндекс ID, от имени которого будет подписываться электронный акт приема-передачи.

            Указывается без `@yandex.ru`.

            Где его найти:

            * на странице [Яндекс ID](https://id.yandex.ru);
            * в [кабинете продавца на Маркете](https://partner.market.yandex.ru/):

              * слева снизу под иконкой пользователя;
              * на странице **Настройки** → **Сотрудники и доступы**.
          type: string
      type: object
    SetShipmentPalletsCountRequest:
      description: Запрос на передачу количества упаковок в отгрузке.
      example:
        placesCount: 0
      properties:
        placesCount:
          description: Количество упаковок в отгрузке.
          format: int32
          minimum: 0
          type: integer
      required:
      - placesCount
      type: object
    ShipmentPalletLabelPageFormatType:
      default: A8
      description: |
        Формат страницы:
        * `A4` — формат страницы A4.
        * `A8` — формат страницы A8.
      enum:
      - A4
      - A8
      type: string
    SearchShipmentsRequest:
      description: Запрос информации об отгрузках.
      example:
        cancelledOrders: true
        dateTo: 2000-01-23
        statuses:
        - OUTBOUND_CREATED
        - OUTBOUND_CREATED
        orderIds:
        - 0
        - 0
        dateFrom: 2000-01-23
      properties:
        dateFrom:
          description: |
            Начальная дата для фильтрации по дате отгрузки (включительно).

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
        dateTo:
          description: |
            Конечная дата для фильтрации по дате отгрузки (включительно).

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
        statuses:
          description: Список статусов отгрузок.
          items:
            $ref: '#/components/schemas/ShipmentStatusType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        orderIds:
          description: Список идентификаторов заказов из отгрузок.
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        cancelledOrders:
          default: true
          description: |
            Возвращать ли отмененные заказы.

            Значение по умолчанию: `true`. Если возвращать отмененные заказы не нужно, передайте значение `false`.
          type: boolean
      required:
      - dateFrom
      - dateTo
      type: object
    SearchShipmentsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/SearchShipmentsResponseDTO'
        type: object
      description: Ответ на запрос информации об отгрузках.
      example:
        result:
          paging:
            nextPageToken: nextPageToken
          shipments:
          - deliveryService:
              name: name
              id: 1
            draftCount: 0
            plannedCount: 0
            signature:
              signed: true
            planIntervalTo: 2017-11-21T00:00:00+03:00
            externalId: externalId
            warehouse:
              address: address
              name: name
              id: 1
            shipmentType: IMPORT
            planIntervalFrom: 2017-11-21T00:00:00+03:00
            statusDescription: statusDescription
            warehouseTo:
              address: address
              name: name
              id: 1
            factCount: 0
            palletsCount:
              fact: 0
              planned: 0
            id: 1
            orderIds:
            - 1
            - 1
            statusUpdateTime: 2017-11-21T00:00:00+03:00
            status: OUTBOUND_CREATED
          - deliveryService:
              name: name
              id: 1
            draftCount: 0
            plannedCount: 0
            signature:
              signed: true
            planIntervalTo: 2017-11-21T00:00:00+03:00
            externalId: externalId
            warehouse:
              address: address
              name: name
              id: 1
            shipmentType: IMPORT
            planIntervalFrom: 2017-11-21T00:00:00+03:00
            statusDescription: statusDescription
            warehouseTo:
              address: address
              name: name
              id: 1
            factCount: 0
            palletsCount:
              fact: 0
              planned: 0
            id: 1
            orderIds:
            - 1
            - 1
            statusUpdateTime: 2017-11-21T00:00:00+03:00
            status: OUTBOUND_CREATED
        status: OK
      type: object
    TransferOrdersFromShipmentRequest:
      description: Запрос переноса заказов из отгрузки.
      example:
        orderIds:
        - 0
        - 0
        - 0
        - 0
        - 0
      properties:
        orderIds:
          description: "Список заказов, которые вы не успеваете подготовить."
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
          maxItems: 500
          minItems: 1
          type: array
      required:
      - orderIds
      type: object
    DeleteOffersRequest:
      description: |
        Фильтрации удаляемых товаров по offerIds.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: "Список SKU товаров, которые нужно удалить."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - offerIds
      type: object
    DeleteOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/DeleteOffersDTO'
        type: object
      description: Результат удаления товаров.
      example:
        result:
          notDeletedOfferIds:
          - null
          - null
        status: OK
      type: object
    ApiLockedErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiErrorResponse'
      description: Ресурс из запроса заблокирован от применения к нему указанного
        метода.
      example:
        errors:
        - code: code
          message: message
        - code: code
          message: message
        status: OK
      type: object
    CatalogLanguageType:
      description: |
        Язык:

        * `RU` — русский.
        * `UZ` — узбекский.
      enum:
      - RU
      - UZ
      type: string
    GetOfferMappingsRequest:
      example:
        archived: true
        categoryIds:
        - 0
        - 0
        vendorNames:
        - vendorNames
        - vendorNames
        offerIds:
        - null
        - null
        - null
        - null
        - null
        cardStatuses:
        - HAS_CARD_CAN_NOT_UPDATE
        - HAS_CARD_CAN_NOT_UPDATE
        tags:
        - tags
        - tags
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.

            {% note warning "Такой список возвращается только целиком" %}

            Если вы запрашиваете информацию по конкретным SKU, не заполняйте:
            * `page_token`;
            * `limit`;
            * `cardStatuses`;
            * `categoryIds`;
            * `vendorNames`;
            * `tags`;
            * `archived`.

            {% endnote %}

             
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        vendorNames:
          description: Фильтр по брендам.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        tags:
          description: Фильтр по тегам.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        archived:
          description: |
            Фильтр по нахождению в архиве.

            Передайте `true`, чтобы получить товары, находящиеся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращаются товары, не находящиеся в архиве.
          type: boolean
      type: object
    GetOfferMappingsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetOfferMappingsResultDTO'
        type: object
      example:
        result:
          paging:
            prevPageToken: prevPageToken
            nextPageToken: nextPageToken
          offerMappings:
          - offer:
              commodityCodes:
              - code: code
                type: CUSTOMS_COMMODITY_CODE
              - code: code
                type: CUSTOMS_COMMODITY_CODE
              downloadable: true
              sellingPrograms:
              - sellingProgram: FBY
                status: FINE
              - sellingProgram: FBY
                status: FINE
              marketCategoryId: 0
              manufacturerCountries:
              - Россия
              - Россия
              description: description
              mediaFiles:
                firstVideoAsCover: true
                videos:
                - uploadState: UPLOADING
                  title: title
                  url: url
                - uploadState: UPLOADING
                  title: title
                  url: url
                pictures:
                - uploadState: UPLOADING
                  title: title
                  url: url
                - uploadState: UPLOADING
                  title: title
                  url: url
                manuals:
                - uploadState: UPLOADING
                  title: title
                  url: url
                - uploadState: UPLOADING
                  title: title
                  url: url
              videos:
              - videos
              - videos
              - videos
              - videos
              - videos
              purchasePrice:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
              type: DEFAULT
              pictures:
              - pictures
              - pictures
              - pictures
              - pictures
              - pictures
              vendorCode: VNDR-0005A
              archived: true
              campaigns:
              - campaignId: 9
                status: PUBLISHED
              - campaignId: 9
                status: PUBLISHED
              vendor: LEVENHUK
              basicPrice:
                discountBase: 0.23021358869347652
                currencyId: RUR
                value: 0.5637376656633328
                updatedAt: 2000-01-23T04:56:07.000+00:00
              lifeTime:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              shelfLife:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              cofinancePrice:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
              cardStatus: HAS_CARD_CAN_NOT_UPDATE
              barcodes:
              - "46012300000000"
              - "46012300000000"
              params:
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              tags:
              - до 500 рублей
              - до 500 рублей
              - до 500 рублей
              - до 500 рублей
              - до 500 рублей
              condition:
                reason: reason
                type: PREOWNED
                quality: PERFECT
              certificates:
              - certificates
              - certificates
              - certificates
              - certificates
              - certificates
              boxCount: 2
              additionalExpenses:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
              name: "Ударная дрель Makita HP1630, 710 Вт"
              offerId: offerId
              guaranteePeriod:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              weightDimensions:
                length: 65.55
                width: 50.7
                weight: 1.001
                height: 20
              category: category
              customsCommodityCode: "8517610008"
              adult: true
              age:
                ageUnit: YEAR
                value: 0.5962133916683182
              manuals:
              - title: title
                url: url
              - title: title
                url: url
              - title: title
                url: url
              - title: title
                url: url
              - title: title
                url: url
            mapping:
              marketSkuName: marketSkuName
              marketCategoryName: marketCategoryName
              marketCategoryId: 4
              marketSku: 1
              marketModelId: 2
              marketModelName: marketModelName
          - offer:
              commodityCodes:
              - code: code
                type: CUSTOMS_COMMODITY_CODE
              - code: code
                type: CUSTOMS_COMMODITY_CODE
              downloadable: true
              sellingPrograms:
              - sellingProgram: FBY
                status: FINE
              - sellingProgram: FBY
                status: FINE
              marketCategoryId: 0
              manufacturerCountries:
              - Россия
              - Россия
              description: description
              mediaFiles:
                firstVideoAsCover: true
                videos:
                - uploadState: UPLOADING
                  title: title
                  url: url
                - uploadState: UPLOADING
                  title: title
                  url: url
                pictures:
                - uploadState: UPLOADING
                  title: title
                  url: url
                - uploadState: UPLOADING
                  title: title
                  url: url
                manuals:
                - uploadState: UPLOADING
                  title: title
                  url: url
                - uploadState: UPLOADING
                  title: title
                  url: url
              videos:
              - videos
              - videos
              - videos
              - videos
              - videos
              purchasePrice:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
              type: DEFAULT
              pictures:
              - pictures
              - pictures
              - pictures
              - pictures
              - pictures
              vendorCode: VNDR-0005A
              archived: true
              campaigns:
              - campaignId: 9
                status: PUBLISHED
              - campaignId: 9
                status: PUBLISHED
              vendor: LEVENHUK
              basicPrice:
                discountBase: 0.23021358869347652
                currencyId: RUR
                value: 0.5637376656633328
                updatedAt: 2000-01-23T04:56:07.000+00:00
              lifeTime:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              shelfLife:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              cofinancePrice:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
              cardStatus: HAS_CARD_CAN_NOT_UPDATE
              barcodes:
              - "46012300000000"
              - "46012300000000"
              params:
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              - name: Wi-Fi
                value: есть
              tags:
              - до 500 рублей
              - до 500 рублей
              - до 500 рублей
              - до 500 рублей
              - до 500 рублей
              condition:
                reason: reason
                type: PREOWNED
                quality: PERFECT
              certificates:
              - certificates
              - certificates
              - certificates
              - certificates
              - certificates
              boxCount: 2
              additionalExpenses:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
              name: "Ударная дрель Makita HP1630, 710 Вт"
              offerId: offerId
              guaranteePeriod:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              weightDimensions:
                length: 65.55
                width: 50.7
                weight: 1.001
                height: 20
              category: category
              customsCommodityCode: "8517610008"
              adult: true
              age:
                ageUnit: YEAR
                value: 0.5962133916683182
              manuals:
              - title: title
                url: url
              - title: title
                url: url
              - title: title
                url: url
              - title: title
                url: url
              - title: title
                url: url
            mapping:
              marketSkuName: marketSkuName
              marketCategoryName: marketCategoryName
              marketCategoryId: 4
              marketSku: 1
              marketModelId: 2
              marketModelName: marketModelName
        status: OK
      type: object
    UpdateOfferMappingsRequest:
      example:
        offerMappings:
        - offer:
            commodityCodes:
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            downloadable: true
            marketCategoryId: 0
            manufacturerCountries:
            - Россия
            - Россия
            deleteParameters:
            - ADDITIONAL_EXPENSES
            - ADDITIONAL_EXPENSES
            description: description
            videos:
            - videos
            - videos
            - videos
            - videos
            - videos
            purchasePrice:
              currencyId: null
              value: 0.9301444243932576
            type: DEFAULT
            pictures:
            - pictures
            - pictures
            - pictures
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            vendor: LEVENHUK
            basicPrice:
              discountBase: 0.7061401241503109
              currencyId: RUR
              value: 0.23021358869347652
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            cofinancePrice:
              currencyId: null
              value: 0.9301444243932576
            parameterValues:
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            firstVideoAsCover: true
            barcodes:
            - "46012300000000"
            - "46012300000000"
            params:
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            tags:
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            condition:
              reason: reason
              type: PREOWNED
              quality: PERFECT
            certificates:
            - certificates
            - certificates
            - certificates
            - certificates
            - certificates
            boxCount: 2
            additionalExpenses:
              currencyId: null
              value: 0.9301444243932576
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            customsCommodityCode: "8517610008"
            adult: true
            age:
              ageUnit: YEAR
              value: 0.5962133916683182
            manuals:
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
          mapping:
            marketSku: 1
        - offer:
            commodityCodes:
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            downloadable: true
            marketCategoryId: 0
            manufacturerCountries:
            - Россия
            - Россия
            deleteParameters:
            - ADDITIONAL_EXPENSES
            - ADDITIONAL_EXPENSES
            description: description
            videos:
            - videos
            - videos
            - videos
            - videos
            - videos
            purchasePrice:
              currencyId: null
              value: 0.9301444243932576
            type: DEFAULT
            pictures:
            - pictures
            - pictures
            - pictures
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            vendor: LEVENHUK
            basicPrice:
              discountBase: 0.7061401241503109
              currencyId: RUR
              value: 0.23021358869347652
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            cofinancePrice:
              currencyId: null
              value: 0.9301444243932576
            parameterValues:
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            firstVideoAsCover: true
            barcodes:
            - "46012300000000"
            - "46012300000000"
            params:
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            tags:
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            condition:
              reason: reason
              type: PREOWNED
              quality: PERFECT
            certificates:
            - certificates
            - certificates
            - certificates
            - certificates
            - certificates
            boxCount: 2
            additionalExpenses:
              currencyId: null
              value: 0.9301444243932576
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            customsCommodityCode: "8517610008"
            adult: true
            age:
              ageUnit: YEAR
              value: 0.5962133916683182
            manuals:
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
          mapping:
            marketSku: 1
        - offer:
            commodityCodes:
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            downloadable: true
            marketCategoryId: 0
            manufacturerCountries:
            - Россия
            - Россия
            deleteParameters:
            - ADDITIONAL_EXPENSES
            - ADDITIONAL_EXPENSES
            description: description
            videos:
            - videos
            - videos
            - videos
            - videos
            - videos
            purchasePrice:
              currencyId: null
              value: 0.9301444243932576
            type: DEFAULT
            pictures:
            - pictures
            - pictures
            - pictures
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            vendor: LEVENHUK
            basicPrice:
              discountBase: 0.7061401241503109
              currencyId: RUR
              value: 0.23021358869347652
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            cofinancePrice:
              currencyId: null
              value: 0.9301444243932576
            parameterValues:
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            firstVideoAsCover: true
            barcodes:
            - "46012300000000"
            - "46012300000000"
            params:
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            tags:
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            condition:
              reason: reason
              type: PREOWNED
              quality: PERFECT
            certificates:
            - certificates
            - certificates
            - certificates
            - certificates
            - certificates
            boxCount: 2
            additionalExpenses:
              currencyId: null
              value: 0.9301444243932576
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            customsCommodityCode: "8517610008"
            adult: true
            age:
              ageUnit: YEAR
              value: 0.5962133916683182
            manuals:
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
          mapping:
            marketSku: 1
        - offer:
            commodityCodes:
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            downloadable: true
            marketCategoryId: 0
            manufacturerCountries:
            - Россия
            - Россия
            deleteParameters:
            - ADDITIONAL_EXPENSES
            - ADDITIONAL_EXPENSES
            description: description
            videos:
            - videos
            - videos
            - videos
            - videos
            - videos
            purchasePrice:
              currencyId: null
              value: 0.9301444243932576
            type: DEFAULT
            pictures:
            - pictures
            - pictures
            - pictures
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            vendor: LEVENHUK
            basicPrice:
              discountBase: 0.7061401241503109
              currencyId: RUR
              value: 0.23021358869347652
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            cofinancePrice:
              currencyId: null
              value: 0.9301444243932576
            parameterValues:
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            firstVideoAsCover: true
            barcodes:
            - "46012300000000"
            - "46012300000000"
            params:
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            tags:
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            condition:
              reason: reason
              type: PREOWNED
              quality: PERFECT
            certificates:
            - certificates
            - certificates
            - certificates
            - certificates
            - certificates
            boxCount: 2
            additionalExpenses:
              currencyId: null
              value: 0.9301444243932576
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            customsCommodityCode: "8517610008"
            adult: true
            age:
              ageUnit: YEAR
              value: 0.5962133916683182
            manuals:
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
          mapping:
            marketSku: 1
        - offer:
            commodityCodes:
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            downloadable: true
            marketCategoryId: 0
            manufacturerCountries:
            - Россия
            - Россия
            deleteParameters:
            - ADDITIONAL_EXPENSES
            - ADDITIONAL_EXPENSES
            description: description
            videos:
            - videos
            - videos
            - videos
            - videos
            - videos
            purchasePrice:
              currencyId: null
              value: 0.9301444243932576
            type: DEFAULT
            pictures:
            - pictures
            - pictures
            - pictures
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            vendor: LEVENHUK
            basicPrice:
              discountBase: 0.7061401241503109
              currencyId: RUR
              value: 0.23021358869347652
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            cofinancePrice:
              currencyId: null
              value: 0.9301444243932576
            parameterValues:
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            firstVideoAsCover: true
            barcodes:
            - "46012300000000"
            - "46012300000000"
            params:
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            tags:
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            condition:
              reason: reason
              type: PREOWNED
              quality: PERFECT
            certificates:
            - certificates
            - certificates
            - certificates
            - certificates
            - certificates
            boxCount: 2
            additionalExpenses:
              currencyId: null
              value: 0.9301444243932576
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            customsCommodityCode: "8517610008"
            adult: true
            age:
              ageUnit: YEAR
              value: 0.5962133916683182
            manuals:
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
          mapping:
            marketSku: 1
        onlyPartnerMediaContent: true
      properties:
        offerMappings:
          description: "Перечень товаров, которые нужно добавить или обновить."
          items:
            $ref: '#/components/schemas/UpdateOfferMappingDTO'
          maxItems: 500
          minItems: 1
          type: array
        onlyPartnerMediaContent:
          description: |
            Будут ли использоваться только переданные вами данные о товарах.

            Значение по умолчанию: `false`. Чтобы удалить данные, которые добавил Маркет, передайте значение `true`.
          type: boolean
      required:
      - offerMappings
      type: object
    UpdateOfferMappingsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          results:
            description: |
              Ошибки и предупреждения, которые появились при обработке списка характеристик. Каждый элемент списка соответствует одному товару.

              Если ошибок и предупреждений нет, поле не передается.
            items:
              $ref: '#/components/schemas/UpdateOfferMappingResultDTO'
            minItems: 1
            nullable: true
            type: array
        type: object
      description: "Описывает проблемы, возникшие при сохранении товара."
      example:
        results:
        - warnings:
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
          offerId: offerId
          errors:
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
        - warnings:
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
          offerId: offerId
          errors:
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
          - parameterId: 0
            type: UNKNOWN_CATEGORY
            message: message
        status: OK
      type: object
    GetSuggestedOfferMappingsRequest:
      example:
        offers:
        - vendor: LEVENHUK
          basicPrice:
            currencyId: null
            value: 0.9301444243932576
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
        - vendor: LEVENHUK
          basicPrice:
            currencyId: null
            value: 0.9301444243932576
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
        - vendor: LEVENHUK
          basicPrice:
            currencyId: null
            value: 0.9301444243932576
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
        - vendor: LEVENHUK
          basicPrice:
            currencyId: null
            value: 0.9301444243932576
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
        - vendor: LEVENHUK
          basicPrice:
            currencyId: null
            value: 0.9301444243932576
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/SuggestedOfferDTO'
          maxItems: 500
          minItems: 1
          nullable: true
          type: array
      type: object
    GetSuggestedOfferMappingsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetSuggestedOfferMappingsResultDTO'
        type: object
      example:
        result:
          offers:
          - offer:
              vendor: LEVENHUK
              basicPrice:
                currencyId: null
                value: 0.9301444243932576
              name: "Ударная дрель Makita HP1630, 710 Вт"
              offerId: offerId
              description: description
              category: category
              barcodes:
              - "46012300000000"
              - "46012300000000"
              vendorCode: VNDR-0005A
            mapping:
              marketSkuName: marketSkuName
              marketCategoryName: marketCategoryName
              marketCategoryId: 4
              marketSku: 1
              marketModelId: 2
              marketModelName: marketModelName
          - offer:
              vendor: LEVENHUK
              basicPrice:
                currencyId: null
                value: 0.9301444243932576
              name: "Ударная дрель Makita HP1630, 710 Вт"
              offerId: offerId
              description: description
              category: category
              barcodes:
              - "46012300000000"
              - "46012300000000"
              vendorCode: VNDR-0005A
            mapping:
              marketSkuName: marketSkuName
              marketCategoryName: marketCategoryName
              marketCategoryId: 4
              marketSku: 1
              marketModelId: 2
              marketModelName: marketModelName
        status: OK
      type: object
    AddOffersToArchiveRequest:
      description: |
        Товары, которые нужно поместить в архив.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: "Список товаров, которые нужно поместить в архив."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - offerIds
      type: object
    AddOffersToArchiveResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/AddOffersToArchiveDTO'
        type: object
      description: Результат архивации товаров.
      example:
        result:
          notArchivedOffers:
          - offerId: offerId
            error: OFFER_HAS_STOCKS
          - offerId: offerId
            error: OFFER_HAS_STOCKS
        status: OK
      type: object
    DeleteOffersFromArchiveRequest:
      description: |
        Товары, которые нужно восстановить из архива.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: "Список товаров, которые нужно восстановить из архива."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - offerIds
      type: object
    DeleteOffersFromArchiveResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/DeleteOffersFromArchiveDTO'
        type: object
      description: Результат разархивации товаров.
      example:
        result:
          notUnarchivedOfferIds:
          - null
          - null
        status: OK
      type: object
    ShopSku:
      description: |
        Ваш SKU — идентификатор товара в вашей системе.

        Правила использования SKU:

        * У каждого товара SKU должен быть свой.

        * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

        SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

        [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
      maxLength: 255
      minLength: 1
      pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
      type: string
    OfferMappingKindType:
      description: |
        Вид маппинга:
        * `ALL` — все товары.
        * `ACTIVE` — готовые к продаже товары.
      enum:
      - ACTIVE
      - ALL
      type: string
    OfferProcessingStatusType:
      description: |
        Статус публикации товара:

        * `UNKNOWN` — неизвестный статус.
        * `READY` — товар прошел модерацию. Чтобы разместить его на Маркете, установите для него цену.
        * `IN_WORK` — товар проходит модерацию. Это занимает несколько дней.
        * `NEED_INFO` — товар не прошел модерацию из-за ошибок или недостающих сведений в описании товара. Информация о причинах отклонения возвращается в параметре `notes`.
        * `NEED_MAPPING` — у товара нельзя создать карточку.
        * `NEED_CONTENT` — для товара без SKU на Маркете (`marketSku`) нужно найти карточку самостоятельно (через API или кабинет продавца на Маркете) или создать ее, если товар еще не продается на Маркете.
        * `CONTENT_PROCESSING` — товар находится на модерации.
        * `SUSPENDED` — товар не прошел модерацию, так как Маркет пока не размещает подобные товары.
        * `REJECTED` — товар не прошел модерацию, так как Маркет не планирует размещать подобные товары.
        * `REVIEW` — принимается решение о размещении товара.
        * `CREATE_ERROR` — не удалось создать карточку товара.
        * `UPDATE_ERROR` — у карточки товара есть непримененные изменения.
      enum:
      - UNKNOWN
      - READY
      - IN_WORK
      - NEED_INFO
      - NEED_MAPPING
      - NEED_CONTENT
      - CONTENT_PROCESSING
      - SUSPENDED
      - REJECTED
      - REVIEW
      - CREATE_ERROR
      - UPDATE_ERROR
      type: string
    OfferAvailabilityStatusType:
      description: |
        Планы по поставкам:

        * `ACTIVE` — поставки будут.
        * `INACTIVE` — поставок не будет: товар есть на складе, но вы больше не планируете его поставлять. Через 60 дней после того, как товар закончится на складе, этот статус изменится на `DELISTED`.
        * `DELISTED` — архив: товар закончился на складе, и его поставок больше не будет. Если товар вернется на склад (например, покупатель вернет заказ), этот статус изменится на `INACTIVE`.
      enum:
      - ACTIVE
      - INACTIVE
      - DELISTED
      type: string
    GetOfferMappingEntriesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferMappingEntriesDTO'
        type: object
      description: Ответ на запрос списка товаров в каталоге.
      example:
        result:
          offerMappingEntries:
          - offer:
              manufacturerCountries:
              - manufacturerCountries
              - manufacturerCountries
              - manufacturerCountries
              - manufacturerCountries
              - manufacturerCountries
              certificate: certificate
              description: description
              availability: ACTIVE
              pictures:
              - pictures
              - pictures
              vendorCode: VNDR-0005A
              manufacturer: manufacturer
              urls:
              - urls
              - urls
              deliveryDurationDays: 5
              feedId: 0
              vendor: LEVENHUK
              price: 2.027123023002322
              transportUnitSize: 1
              id: id
              lifeTime:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              shelfLife:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              supplyScheduleDays:
              - MONDAY
              - MONDAY
              lifeTimeDays: 9
              quantumOfSupply: 5
              barcodes:
              - "46012300000000"
              - "46012300000000"
              customsCommodityCodes:
              - customsCommodityCodes
              - customsCommodityCodes
              processingState:
                notes:
                - payload: payload
                  type: ASSORTMENT
                - payload: payload
                  type: ASSORTMENT
                status: UNKNOWN
              shopSku: shopSku
              boxCount: 2
              minShipment: 6
              name: "Ударная дрель Makita HP1630, 710 Вт"
              shelfLifeDays: 7
              guaranteePeriod:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              weightDimensions:
                length: 65.55
                width: 50.7
                weight: 1.001
                height: 20
              category: category
              guaranteePeriodDays: 3
            mapping:
              modelId: 7
              marketSku: 1
              categoryId: 1
            awaitingModerationMapping:
              modelId: 7
              marketSku: 1
              categoryId: 1
            rejectedMapping:
              modelId: 7
              marketSku: 1
              categoryId: 1
          - offer:
              manufacturerCountries:
              - manufacturerCountries
              - manufacturerCountries
              - manufacturerCountries
              - manufacturerCountries
              - manufacturerCountries
              certificate: certificate
              description: description
              availability: ACTIVE
              pictures:
              - pictures
              - pictures
              vendorCode: VNDR-0005A
              manufacturer: manufacturer
              urls:
              - urls
              - urls
              deliveryDurationDays: 5
              feedId: 0
              vendor: LEVENHUK
              price: 2.027123023002322
              transportUnitSize: 1
              id: id
              lifeTime:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              shelfLife:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              supplyScheduleDays:
              - MONDAY
              - MONDAY
              lifeTimeDays: 9
              quantumOfSupply: 5
              barcodes:
              - "46012300000000"
              - "46012300000000"
              customsCommodityCodes:
              - customsCommodityCodes
              - customsCommodityCodes
              processingState:
                notes:
                - payload: payload
                  type: ASSORTMENT
                - payload: payload
                  type: ASSORTMENT
                status: UNKNOWN
              shopSku: shopSku
              boxCount: 2
              minShipment: 6
              name: "Ударная дрель Makita HP1630, 710 Вт"
              shelfLifeDays: 7
              guaranteePeriod:
                timePeriod: 6
                comment: comment
                timeUnit: HOUR
              weightDimensions:
                length: 65.55
                width: 50.7
                weight: 1.001
                height: 20
              category: category
              guaranteePeriodDays: 3
            mapping:
              modelId: 7
              marketSku: 1
              categoryId: 1
            awaitingModerationMapping:
              modelId: 7
              marketSku: 1
              categoryId: 1
            rejectedMapping:
              modelId: 7
              marketSku: 1
              categoryId: 1
          paging:
            prevPageToken: prevPageToken
            nextPageToken: nextPageToken
        status: OK
      type: object
    UpdateOfferMappingEntryRequest:
      description: Запрос на обновление товаров.
      example:
        offerMappingEntries:
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: ACTIVE
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          mapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          awaitingModerationMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          rejectedMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: ACTIVE
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          mapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          awaitingModerationMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          rejectedMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: ACTIVE
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          mapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          awaitingModerationMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          rejectedMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: ACTIVE
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          mapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          awaitingModerationMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          rejectedMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: ACTIVE
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          mapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          awaitingModerationMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          rejectedMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
      properties:
        offerMappingEntries:
          description: Информация о товарах в каталоге.
          items:
            $ref: '#/components/schemas/UpdateOfferMappingEntryDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offerMappingEntries
      type: object
    GetSuggestedOfferMappingEntriesRequest:
      description: Запрос рекомендованных карточек товара.
      example:
        offers:
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: ACTIVE
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: ACTIVE
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: ACTIVE
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: ACTIVE
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: ACTIVE
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/MappingsOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offers
      type: object
    GetSuggestedOfferMappingEntriesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferMappingSuggestionsListDTO'
        type: object
      description: Ответ со списком рекомендованных карточек товара.
      example:
        result:
          offers:
          - manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            marketCategoryId: 4
            certificate: certificate
            description: description
            availability: ACTIVE
            marketModelId: 7
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            marketSkuName: marketSkuName
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            price: 2.027123023002322
            marketSku: null
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            marketModelName: marketModelName
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            marketCategoryName: marketCategoryName
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          - manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            marketCategoryId: 4
            certificate: certificate
            description: description
            availability: ACTIVE
            marketModelId: 7
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            marketSkuName: marketSkuName
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            price: 2.027123023002322
            marketSku: null
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            marketModelName: marketModelName
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            marketCategoryName: marketCategoryName
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
        status: OK
      type: object
    UpdateBusinessPricesRequest:
      description: "Запрос на установку цен, которые действуют во всех магазинах."
      example:
        offers:
        - price:
            discountBase: 0.6027456183070403
            currencyId: RUR
            value: 0.08008281904610115
          offerId: offerId
        - price:
            discountBase: 0.6027456183070403
            currencyId: RUR
            value: 0.08008281904610115
          offerId: offerId
        - price:
            discountBase: 0.6027456183070403
            currencyId: RUR
            value: 0.08008281904610115
          offerId: offerId
        - price:
            discountBase: 0.6027456183070403
            currencyId: RUR
            value: 0.08008281904610115
          offerId: offerId
        - price:
            discountBase: 0.6027456183070403
            currencyId: RUR
            value: 0.08008281904610115
          offerId: offerId
      properties:
        offers:
          description: Список товаров с ценами.
          items:
            $ref: '#/components/schemas/UpdateBusinessOfferPriceDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offers
      type: object
    UpdatePricesRequest:
      description: Запрос на установку цен на товары.
      example:
        offers:
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          offerId: offerId
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          offerId: offerId
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          offerId: offerId
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          offerId: offerId
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          offerId: offerId
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/OfferPriceDTO'
          maxItems: 2000
          minItems: 1
          type: array
      required:
      - offers
      type: object
    GetPricesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferPriceListResponseDTO'
        type: object
      description: Ответ на запрос списка цен.
      example:
        result:
          offers:
          - price:
              vat: 1
              discountBase: 6.027456183070403
              currencyId: RUR
              value: 0.8008281904610115
            marketSku: 1
            id: id
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - price:
              vat: 1
              discountBase: 6.027456183070403
              currencyId: RUR
              value: 0.8008281904610115
            marketSku: 1
            id: id
            updatedAt: 2000-01-23T04:56:07.000+00:00
          total: 6
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    GetPricesByOfferIdsRequest:
      description: Запрос списка цен.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: |
            Список SKU.

            {% note warning "Такой список возвращается только целиком" %}

            Если вы запрашиваете информацию по конкретным SKU, не заполняйте:

            * `page_token`
            * `limit`

            {% endnote %}

             
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 2000
          minItems: 1
          nullable: true
          type: array
      type: object
    GetPricesByOfferIdsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferPriceByOfferIdsListResponseDTO'
        type: object
      description: Ответ на запрос списка цен.
      example:
        result:
          offers:
          - price:
              vat: 1
              discountBase: 6.027456183070403
              currencyId: RUR
              value: 0.8008281904610115
            offerId: offerId
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - price:
              vat: 1
              discountBase: 6.027456183070403
              currencyId: RUR
              value: 0.8008281904610115
            offerId: offerId
            updatedAt: 2000-01-23T04:56:07.000+00:00
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    SuggestPricesRequest:
      description: Запрос на получение списка цен для продвижения.
      example:
        offers:
        - marketSku: 1
          offerId: offerId
        - marketSku: 1
          offerId: offerId
        - marketSku: 1
          offerId: offerId
        - marketSku: 1
          offerId: offerId
        - marketSku: 1
          offerId: offerId
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/SuggestOfferPriceDTO'
          maxItems: 1000
          type: array
      required:
      - offers
      type: object
    SuggestPricesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/SuggestPricesResultDTO'
        type: object
      description: Ответ на запрос списка цен для продвижения.
      example:
        result:
          offers:
          - marketSku: 1
            offerId: offerId
            priceSuggestion:
            - price: 6.027456183070403
              type: BUYBOX
            - price: 6.027456183070403
              type: BUYBOX
          - marketSku: 1
            offerId: offerId
            priceSuggestion:
            - price: 6.027456183070403
              type: BUYBOX
            - price: 6.027456183070403
              type: BUYBOX
        status: OK
      type: object
    GetQuarantineOffersRequest:
      description: |
        Фильтрации товаров

        В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.
      example:
        categoryIds:
        - 0
        - 0
        vendorNames:
        - vendorNames
        - vendorNames
        offerIds:
        - null
        - null
        - null
        - null
        - null
        cardStatuses:
        - HAS_CARD_CAN_NOT_UPDATE
        - HAS_CARD_CAN_NOT_UPDATE
        tags:
        - tags
        - tags
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.
            <br><br>
            ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        vendorNames:
          description: Фильтр по брендам.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        tags:
          description: Фильтр по тегам.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    GetQuarantineOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetQuarantineOffersResultDTO'
        type: object
      description: Ответ на запрос списка товаров в карантине.
      example:
        result:
          offers:
          - verdicts:
            - type: PRICE_CHANGE
              params:
              - name: CURRENT_PRICE
                value: value
              - name: CURRENT_PRICE
                value: value
            - type: PRICE_CHANGE
              params:
              - name: CURRENT_PRICE
                value: value
              - name: CURRENT_PRICE
                value: value
            offerId: offerId
            currentPrice:
              currencyId: null
              value: 0.9301444243932576
            lastValidPrice:
              currencyId: null
              value: 0.9301444243932576
          - verdicts:
            - type: PRICE_CHANGE
              params:
              - name: CURRENT_PRICE
                value: value
              - name: CURRENT_PRICE
                value: value
            - type: PRICE_CHANGE
              params:
              - name: CURRENT_PRICE
                value: value
              - name: CURRENT_PRICE
                value: value
            offerId: offerId
            currentPrice:
              currencyId: null
              value: 0.9301444243932576
            lastValidPrice:
              currencyId: null
              value: 0.9301444243932576
          paging:
            prevPageToken: prevPageToken
            nextPageToken: nextPageToken
        status: OK
      type: object
    ConfirmPricesRequest:
      description: |
        Запрос на подтверждение цены.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: "Идентификаторы товаров, у которых подтверждается цена."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - offerIds
      type: object
    GetHiddenOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetHiddenOffersResultDTO'
        type: object
      description: Ответ на запрос списка скрытий.
      example:
        result:
          hiddenOffers:
          - offerId: offerId
          - offerId: offerId
          paging:
            prevPageToken: prevPageToken
            nextPageToken: nextPageToken
        status: OK
      type: object
    AddHiddenOffersRequest:
      description: Запрос на скрытие оферов.
      example:
        hiddenOffers:
        - offerId: offerId
        - offerId: offerId
        - offerId: offerId
        - offerId: offerId
        - offerId: offerId
      properties:
        hiddenOffers:
          description: |
            Список скрытых товаров.
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - hiddenOffers
      type: object
    DeleteHiddenOffersRequest:
      description: Запрос на возобновление показа оферов.
      example:
        hiddenOffers:
        - offerId: offerId
        - offerId: offerId
        - offerId: offerId
        - offerId: offerId
        - offerId: offerId
      properties:
        hiddenOffers:
          description: |
            Список скрытых товаров.
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - hiddenOffers
      type: object
    UpdateStocksRequest:
      description: Запрос на изменение информации по остаткам товаров.
      example:
        skus:
        - sku: sku
          items:
          - count: 160165638
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - sku: sku
          items:
          - count: 160165638
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - sku: sku
          items:
          - count: 160165638
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - sku: sku
          items:
          - count: 160165638
            updatedAt: 2000-01-23T04:56:07.000+00:00
        - sku: sku
          items:
          - count: 160165638
            updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        skus:
          description: |
            Данные об остатках товаров.
          items:
            $ref: '#/components/schemas/UpdateStockDTO'
          maxItems: 2000
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - skus
      type: object
    GetWarehouseStocksRequest:
      description: |
        Фильтры для запроса остатков.
      example:
        archived: true
        stocksWarehouseId: 1
        withTurnover: false
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        stocksWarehouseId:
          description: |
            Идентификатор склада.

            Если параметр указан, возвращаются только товары в наличии на переданном складе.

            **Для модели FBY:** получить список складов Маркета можно с помощью метода [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md).
          format: int64
          minimum: 1
          type: integer
        withTurnover:
          default: false
          description: |
            **Только для модели FBY**

            Возвращать ли информацию по оборачиваемости.

            Значение по умолчанию: `false`. Если информация нужна, передайте значение `true`.
          type: boolean
        archived:
          description: |
            Фильтр по нахождению в архиве.

            Передайте `true`, чтобы получить информацию об остатках товаров, которые находятся в архиве. Если фильтр не заполнен или передано `false`, в ответе возвращается информация о товарах, которые не находятся в архиве.
          type: boolean
        offerIds:
          description: |
            Фильтр по вашим SKU товаров.

            Возвращается информация об остатках всех переданных SKU, включая товары в архиве.

            {% note warning "Такой список возвращается только целиком" %}

            Если вы запрашиваете информацию по конкретным SKU, не заполняйте:

            * `page_token`
            * `limit`
            * `archived`
            * `stocksOnWarehouse`

            {% endnote %}

             
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    GetWarehouseStocksResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetWarehouseStocksDTO'
        type: object
      example:
        result:
          warehouses:
          - offers:
            - offerId: offerId
              turnoverSummary:
                turnoverDays: 6.027456183070403
                turnover: LOW
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - offerId: offerId
              turnoverSummary:
                turnoverDays: 6.027456183070403
                turnover: LOW
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
              updatedAt: 2000-01-23T04:56:07.000+00:00
            warehouseId: 0
          - offers:
            - offerId: offerId
              turnoverSummary:
                turnoverDays: 6.027456183070403
                turnover: LOW
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
              updatedAt: 2000-01-23T04:56:07.000+00:00
            - offerId: offerId
              turnoverSummary:
                turnoverDays: 6.027456183070403
                turnover: LOW
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
              updatedAt: 2000-01-23T04:56:07.000+00:00
            warehouseId: 0
          paging:
            prevPageToken: prevPageToken
            nextPageToken: nextPageToken
        status: OK
      type: object
    GetDeliveryServicesResponse:
      description: Ответ на запрос списка служб доставки.
      example:
        result:
          deliveryService:
          - name: name
            id: 0
          - name: name
            id: 0
      properties:
        result:
          $ref: '#/components/schemas/DeliveryServicesDTO'
      type: object
    GetOrdersStatsRequest:
      description: Запрос информации по заказам.
      example:
        updateTo: 2000-01-23
        updateFrom: 2000-01-23
        hasCis: true
        dateTo: 2000-01-23
        statuses:
        - CANCELLED_BEFORE_PROCESSING
        - CANCELLED_BEFORE_PROCESSING
        orders:
        - 0
        - 0
        dateFrom: 2000-01-23
      properties:
        dateFrom:
          description: |
            Начальная дата, когда заказ был сформирован.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
          format: date
          type: string
        dateTo:
          description: |
            Конечная дата, когда заказ был сформирован.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
          format: date
          type: string
        updateFrom:
          description: |
            Начальная дата периода, за который были изменения в заказе (например, статуса или информации о платежах).

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
          format: date
          type: string
        updateTo:
          description: |
            Конечная дата периода, за который были изменения в заказе (например, статуса или информации о платежах).

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
          format: date
          type: string
        orders:
          description: Список идентификаторов заказов.
          items:
            description: |
              Список товаров в заказе после возможных изменений.

              В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.

              * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.

              * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
        statuses:
          description: Список статусов заказов.
          items:
            $ref: '#/components/schemas/OrderStatsStatusType'
          minItems: 1
          nullable: true
          type: array
        hasCis:
          description: |
            Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go):

            * `true` — да.
            * `false` — нет.
            Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
          type: boolean
      type: object
    GetOrdersStatsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OrdersStatsDTO'
        type: object
      description: Ответ на запрос информации по заказам.
      example:
        result:
          orders:
          - partnerOrderId: partnerOrderId
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            payments:
            - date: 2000-01-23
              total: 7.386281948385884
              paymentOrder:
                date: 2000-01-23
                id: id
              id: id
              source: BUYER
              type: PAYMENT
            - date: 2000-01-23
              total: 7.386281948385884
              paymentOrder:
                date: 2000-01-23
                id: id
              id: id
              source: BUYER
              type: PAYMENT
            creationDate: 2000-01-23
            paymentType: POSTPAID
            commissions:
            - actual: 1.2315135367772556
              type: FEE
            - actual: 1.2315135367772556
              type: FEE
            subsidies:
            - amount: 1.0246457001441578
              operationType: ACCRUAL
              type: YANDEX_CASHBACK
            - amount: 1.0246457001441578
              operationType: ACCRUAL
              type: YANDEX_CASHBACK
            fake: true
            deliveryRegion:
              name: name
              id: 6
            currency: RUR
            id: 0
            items:
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            initialItems:
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            status: CANCELLED_BEFORE_PROCESSING
          - partnerOrderId: partnerOrderId
            statusUpdateDate: 2000-01-23T04:56:07.000+00:00
            payments:
            - date: 2000-01-23
              total: 7.386281948385884
              paymentOrder:
                date: 2000-01-23
                id: id
              id: id
              source: BUYER
              type: PAYMENT
            - date: 2000-01-23
              total: 7.386281948385884
              paymentOrder:
                date: 2000-01-23
                id: id
              id: id
              source: BUYER
              type: PAYMENT
            creationDate: 2000-01-23
            paymentType: POSTPAID
            commissions:
            - actual: 1.2315135367772556
              type: FEE
            - actual: 1.2315135367772556
              type: FEE
            subsidies:
            - amount: 1.0246457001441578
              operationType: ACCRUAL
              type: YANDEX_CASHBACK
            - amount: 1.0246457001441578
              operationType: ACCRUAL
              type: YANDEX_CASHBACK
            fake: true
            deliveryRegion:
              name: name
              id: 6
            currency: RUR
            id: 0
            items:
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            initialItems:
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            - cofinanceValue: 4.145608029883936
              initialCount: 3
              offerName: offerName
              shopSku: shopSku
              cisList:
              - cisList
              - cisList
              marketSku: 1
              count: 5
              bidFee: 570
              cofinanceThreshold: 2.027123023002322
              details:
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              - updateDate: 2000-01-23
                stockType: FIT
                itemStatus: REJECTED
                itemCount: 9
              prices:
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              - total: 2.3021358869347655
                costPerItem: 5.637376656633329
                type: BUYER
              warehouse:
                name: name
                id: 7
            status: CANCELLED_BEFORE_PROCESSING
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    GetGoodsStatsRequest:
      description: Запрос отчета по товарам.
      example:
        shopSkus:
        - null
        - null
        - null
        - null
        - null
      properties:
        shopSkus:
          description: |
            Список ваших идентификаторов SKU.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - shopSkus
      type: object
    GetGoodsStatsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GoodsStatsDTO'
        type: object
      description: Ответ на запрос отчета по товарам.
      example:
        result:
          shopSkus:
          - shopSku: shopSku
            marketSku: 1
            price: 6.027456183070403
            name: name
            warehouses:
            - name: name
              id: 9
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
            - name: name
              id: 9
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
            weightDimensions:
              length: 5.962133916683182
              width: 5.637376656633329
              weight: 7.061401241503109
              height: 2.3021358869347655
            categoryName: categoryName
            categoryId: 1
            pictures:
            - pictures
            - pictures
            tariffs:
            - amount: 2.027123023002322
              currency: RUR
              type: AGENCY_COMMISSION
              percent: 3.616076749251911
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - amount: 2.027123023002322
              currency: RUR
              type: AGENCY_COMMISSION
              percent: 3.616076749251911
              parameters:
              - name: name
                value: value
              - name: name
                value: value
          - shopSku: shopSku
            marketSku: 1
            price: 6.027456183070403
            name: name
            warehouses:
            - name: name
              id: 9
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
            - name: name
              id: 9
              stocks:
              - count: 1
                type: FIT
              - count: 1
                type: FIT
            weightDimensions:
              length: 5.962133916683182
              width: 5.637376656633329
              weight: 7.061401241503109
              height: 2.3021358869347655
            categoryName: categoryName
            categoryId: 1
            pictures:
            - pictures
            - pictures
            tariffs:
            - amount: 2.027123023002322
              currency: RUR
              type: AGENCY_COMMISSION
              percent: 3.616076749251911
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - amount: 2.027123023002322
              currency: RUR
              type: AGENCY_COMMISSION
              percent: 3.616076749251911
              parameters:
              - name: name
                value: value
              - name: name
                value: value
        status: OK
      type: object
    GetReportInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ReportInfoDTO'
        type: object
      description: Ответ на запрос информации об отчете.
      example:
        result:
          generationRequestedAt: 2000-01-23T04:56:07.000+00:00
          file: file
          generationFinishedAt: 2000-01-23T04:56:07.000+00:00
          subStatus: NO_DATA
          status: PENDING
          estimatedGenerationTime: 0
        status: OK
      type: object
    ReportFormatType:
      default: FILE
      description: |
        Формат отчета:

        * `FILE` — файл с электронной таблицей (XLSX).
        * `CSV` — ZIP-архив с CSV-файлами на каждый лист отчета.
        * `JSON` — ZIP-архив с JSON-файлами на каждый лист отчета.
      enum:
      - FILE
      - CSV
      - JSON
      type: string
    ReportLanguageType:
      description: |
        Язык отчета:

        * `RU` — русский язык.
        * `EN` — английский язык.
      enum:
      - RU
      - EN
      type: object
    GenerateUnitedNettingReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор кампании, период, за который нужен отчет, а также фильтры.
      example:
        dateTimeFrom: 2000-01-23T04:56:07.000+00:00
        monthOfYear:
          month: 12
          year: 2025
        bankOrderId: 6
        placementPrograms:
        - FBS
        - FBS
        businessId: 0
        dateTo: 2000-01-23
        dateTimeTo: 2000-01-23T04:56:07.000+00:00
        inns:
        - inns
        - inns
        campaignIds:
        - 1
        - 1
        dateFrom: 2000-01-23
        bankOrderDateTime: 2000-01-23T04:56:07.000+00:00
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateTimeFrom:
          deprecated: true
          description: "Начало периода, включительно."
          format: date-time
          type: string
        dateTimeTo:
          deprecated: true
          description: "Конец периода, включительно. Максимальный период — 3 месяц\
            а."
          format: date-time
          type: string
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно. Максимальный период — 3 месяц\
            а."
          format: date
          type: string
        bankOrderId:
          description: Номер платежного поручения.
          format: int64
          type: integer
        bankOrderDateTime:
          description: Дата платежного поручения.
          format: date-time
          type: string
        monthOfYear:
          $ref: '#/components/schemas/MonthOfYearDTO'
        placementPrograms:
          description: |
            Список моделей, которые нужны в отчете.
          items:
            $ref: '#/components/schemas/PlacementType'
          minItems: 1
          nullable: true
          type: array
        inns:
          description: "Список ИНН, которые нужны в отчете."
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
      required:
      - businessId
      type: object
    GenerateReportResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GenerateReportDTO'
        type: object
      description: Ответ на запрос генерации отчета.
      example:
        result:
          reportId: reportId
          estimatedGenerationTime: 0
        status: OK
      type: object
    GenerateUnitedMarketplaceServicesReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор кампании, период, за который нужен отчет, а также фильтры.
      example:
        dateTimeFrom: 2000-01-23T04:56:07.000+00:00
        yearFrom: 2025
        placementPrograms:
        - FBS
        - FBS
        businessId: 0
        dateTo: 2000-01-23
        monthFrom: 12
        dateTimeTo: 2000-01-23T04:56:07.000+00:00
        inns:
        - inns
        - inns
        campaignIds:
        - 6
        - 6
        dateFrom: 2000-01-23
        monthTo: 12
        yearTo: 2025
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateTimeFrom:
          deprecated: true
          description: "Начало периода, включительно."
          format: date-time
          type: string
        dateTimeTo:
          deprecated: true
          description: "Конец периода, включительно. Максимальный период — 3 месяц\
            а."
          format: date-time
          type: string
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно. Максимальный период — 3 месяц\
            а."
          format: date
          type: string
        yearFrom:
          description: Год.
          example: 2025
          format: int32
          type: integer
        monthFrom:
          description: Номер месяца.
          example: 12
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        yearTo:
          description: Год.
          example: 2025
          format: int32
          type: integer
        monthTo:
          description: Номер месяца.
          example: 12
          format: int32
          maximum: 12
          minimum: 1
          type: integer
        placementPrograms:
          description: |
            Список моделей, которые нужны в отчете.
          items:
            $ref: '#/components/schemas/PlacementType'
          minItems: 1
          nullable: true
          type: array
        inns:
          description: "Список ИНН, которые нужны в отчете."
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
      required:
      - businessId
      type: object
    GenerateUnitedOrdersRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        businessId: 0
        dateTo: 2000-01-23
        campaignIds:
        - 6
        - 6
        promoId: promoId
        dateFrom: 2000-01-23
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно. Максимальный период — 1 год."
          format: date
          type: string
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
        promoId:
          description: "Идентификатор акции, товары из которой нужны в отчете."
          type: string
      required:
      - businessId
      - dateFrom
      - dateTo
      type: object
    GenerateUnitedReturnsRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        businessId: 0
        dateTo: 2000-01-23
        campaignIds:
        - 6
        - 6
        dateFrom: 2000-01-23
        returnStatusTypes:
        - CREATED
        - CREATED
        returnType: UNREDEEMED
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, которые нужны в отчете.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        returnType:
          $ref: '#/components/schemas/ReturnType'
        returnStatusTypes:
          description: |
            Статусы передачи возвратов, которые нужны в отчете.

            Если их не указать, вернется информация по всем возвратам.
          items:
            $ref: '#/components/schemas/ReturnShipmentStatusType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      required:
      - businessId
      - dateFrom
      - dateTo
      type: object
    GenerateGoodsRealizationReportRequest:
      description: |
        Данные, необходимые для генерации отчета: идентификатор кампании и период, за который нужен отчет.
      example:
        month: 12
        year: 2025
        campaignId: 0
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        year:
          description: Год.
          example: 2025
          format: int32
          type: integer
        month:
          description: Номер месяца.
          example: 12
          format: int32
          maximum: 12
          minimum: 1
          type: integer
      required:
      - campaignId
      - month
      - year
      type: object
    GeneratePricesReportRequest:
      description: "Данные, необходимые для генерации отчета."
      example:
        categoryIds:
        - 1
        - 1
        creationDateTo: 2000-01-23
        campaignId: 6
        businessId: 0
        creationDateFrom: 2000-01-23
      properties:
        businessId:
          description: |
            Идентификатор кабинета.

            В большинстве случаев обязателен. Не указывается, если задан `campaignId`.
          format: int64
          type: integer
        campaignId:
          description: |
            Идентификатор кампании.

            Передавайте, только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
        creationDateFrom:
          description: |
            Фильтр по времени появления предложения — начало периода.

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
        creationDateTo:
          description: |
            Фильтр по времени появления предложения — окончание периода.

            Формат даты: `ДД-ММ-ГГГГ`.
          format: date
          type: string
      type: object
    GenerateStocksOnWarehousesReportRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        categoryIds:
        - 1
        - 1
        hasStocks: true
        reportDate: 2000-01-23
        campaignId: 0
        warehouseIds:
        - 6
        - 6
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        warehouseIds:
          description: "Фильтр по идентификаторам складов (только модель FBY). Что\
            бы узнать идентификатор, воспользуйтесь запросом [GET warehouses](../../reference/warehouses/getFulfillmentWarehouses.md)."
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
        reportDate:
          description: Фильтр по дате (для модели FBY). В отчет попадут данные за
            **предшествующий** дате день.
          format: date
          type: string
        categoryIds:
          description: Фильтр по категориям на Маркете (кроме модели FBY).
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
        hasStocks:
          description: Фильтр по наличию остатков (кроме модели FBY).
          type: boolean
      required:
      - campaignId
      type: object
    GenerateGoodsMovementReportRequest:
      description: "Данные, необходимые для генерации отчета."
      example:
        shopSku: shopSku
        campaignId: 1
        dateTo: 2022-09-23
        dateFrom: 2022-09-22
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          minimum: 1
          type: integer
        dateFrom:
          description: |
            Начало периода, включительно. Формат даты: `ГГГГ-ММ-ДД`.
          example: 2022-09-22
          format: date
          type: string
        dateTo:
          description: |
            Конец периода, включительно. Формат даты: `ГГГГ-ММ-ДД`.
          example: 2022-09-23
          format: date
          type: string
        shopSku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
      required:
      - campaignId
      - dateFrom
      - dateTo
      type: object
    GenerateShowsSalesReportRequest:
      description: "Данные, необходимые для генерации отчета."
      example:
        campaignId: 6
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
        grouping: CATEGORIES
      properties:
        businessId:
          description: |
            Идентификатор кабинета.

            Указывается, если нужно составить отчет по всем магазинам в кабинете. В запросе обязательно должен быть либо `businessId`, либо `campaignId`, но не оба сразу.
          format: int64
          type: integer
        campaignId:
          description: |
            Идентификатор кампании.

            Указывается, если нужно составить отчет по конкретному магазину. В запросе обязательно должен быть либо `businessId`, либо `campaignId`, но не оба сразу.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
        grouping:
          $ref: '#/components/schemas/ShowsSalesGroupingType'
      required:
      - dateFrom
      - dateTo
      - grouping
      type: object
    GenerateCompetitorsPositionReportRequest:
      description: "Данные, необходимые для генерации отчета."
      example:
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
        categoryId: 6
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        categoryId:
          description: Идентификатор категории.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
      required:
      - businessId
      - categoryId
      - dateFrom
      - dateTo
      type: object
    GenerateGoodsTurnoverRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        date: 2000-01-23
        campaignId: 0
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        date:
          description: "Дата, за которую нужно рассчитать оборачиваемость. Если па\
            раметр не указан, используется текущая дата."
          format: date
          type: string
      required:
      - campaignId
      type: object
    GenerateBoostConsolidatedRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
      required:
      - businessId
      - dateFrom
      - dateTo
      type: object
    GenerateShipmentListDocumentReportRequest:
      description: |
        Данные, необходимые для генерации документа.
      example:
        campaignId: 0
        shipmentId: 6
        orderIds:
        - 1
        - 1
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        shipmentId:
          description: Идентификатор отгрузки.
          format: int64
          type: integer
        orderIds:
          description: Фильтр по идентификаторам заказа в отгрузке.
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
      required:
      - campaignId
      type: object
    GenerateShelfsStatisticsRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
        attributionType: CLICKS
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
        attributionType:
          $ref: '#/components/schemas/StatisticsAttributionType'
      required:
      - attributionType
      - businessId
      - dateFrom
      - dateTo
      type: object
    GenerateMassOrderLabelsRequest:
      description: |
        Данные, необходимые для генерации файла.
      example:
        sortingType: SORT_BY_GIVEN_ORDER
        businessId: 0
        orderIds:
        - 6
        - 6
        - 6
        - 6
        - 6
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        orderIds:
          description: Список идентификаторов заказов.
          items:
            description: Идентификатор заказа.
            format: int64
            type: integer
          maxItems: 1000
          minItems: 1
          type: array
          uniqueItems: true
        sortingType:
          $ref: '#/components/schemas/LabelsSortingType'
      required:
      - businessId
      - orderIds
      type: object
    GenerateGoodsFeedbackRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        businessId: 0
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
      required:
      - businessId
      type: object
    GenerateShowsBoostRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
        attributionType: CLICKS
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
        attributionType:
          $ref: '#/components/schemas/StatisticsAttributionType'
      required:
      - attributionType
      - businessId
      - dateFrom
      - dateTo
      type: object
    GenerateBannersStatisticsRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
      required:
      - businessId
      - dateFrom
      - dateTo
      type: object
    GenerateJewelryFiscalReportRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        campaignId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
      required:
      - campaignId
      - dateFrom
      - dateTo
      type: object
    GenerateSalesGeographyRequest:
      description: |
        Данные, необходимые для генерации отчета.
      example:
        categoryIds:
        - 6
        - 6
        - 6
        - 6
        - 6
        businessId: 0
        dateTo: 2000-01-23
        dateFrom: 2000-01-23
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        businessId:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        dateFrom:
          description: "Начало периода, включительно."
          format: date
          type: string
        dateTo:
          description: "Конец периода, включительно."
          format: date
          type: string
        categoryIds:
          description: Идентификаторы категорий.
          items:
            format: int64
            type: integer
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        offerIds:
          description: Идентификаторы товаров.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 1000
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      required:
      - businessId
      - dateFrom
      - dateTo
      type: object
    GetOutletsResponse:
      description: Ответ на запрос информации о точках продаж.
      example:
        pager:
          total: 1
          pagesCount: 7
          pageSize: 9
          from: 5
          to: 5
          currentPage: 2
        outlets:
        - storagePeriod: 9
          address:
            number: number
            km: 6
            regionId: 0
            city: city
            street: street
            additional: additional
            estate: estate
            block: block
            building: building
          moderationReason: moderationReason
          visibility: HIDDEN
          isMain: true
          phones:
          - phones
          - phones
          workingTime: workingTime
          type: DEPOT
          workingSchedule:
            scheduleItems:
            - startDay: MONDAY
              endDay: null
              startTime: 09:59
              endTime: 23:59
            - startDay: MONDAY
              endDay: null
              startTime: 09:59
              endTime: 23:59
            workInHoliday: true
          shopOutletId: shopOutletId
          shopOutletCode: shopOutletCode
          name: name
          id: 3
          region:
            parent: null
            children:
            - null
            - null
            name: name
            id: 0
            type: OTHER
          coords: coords
          deliveryRules:
          - priceFreePickup: 7.061401241503109
            deliveryServiceId: 5
            maxDeliveryDays: 35
            minDeliveryDays: 8
            orderBefore: 5
            unspecifiedDeliveryInterval: true
          - priceFreePickup: 7.061401241503109
            deliveryServiceId: 5
            maxDeliveryDays: 35
            minDeliveryDays: 8
            orderBefore: 5
            unspecifiedDeliveryInterval: true
          status: AT_MODERATION
        - storagePeriod: 9
          address:
            number: number
            km: 6
            regionId: 0
            city: city
            street: street
            additional: additional
            estate: estate
            block: block
            building: building
          moderationReason: moderationReason
          visibility: HIDDEN
          isMain: true
          phones:
          - phones
          - phones
          workingTime: workingTime
          type: DEPOT
          workingSchedule:
            scheduleItems:
            - startDay: MONDAY
              endDay: null
              startTime: 09:59
              endTime: 23:59
            - startDay: MONDAY
              endDay: null
              startTime: 09:59
              endTime: 23:59
            workInHoliday: true
          shopOutletId: shopOutletId
          shopOutletCode: shopOutletCode
          name: name
          id: 3
          region:
            parent: null
            children:
            - null
            - null
            name: name
            id: 0
            type: OTHER
          coords: coords
          deliveryRules:
          - priceFreePickup: 7.061401241503109
            deliveryServiceId: 5
            maxDeliveryDays: 35
            minDeliveryDays: 8
            orderBefore: 5
            unspecifiedDeliveryInterval: true
          - priceFreePickup: 7.061401241503109
            deliveryServiceId: 5
            maxDeliveryDays: 35
            minDeliveryDays: 8
            orderBefore: 5
            unspecifiedDeliveryInterval: true
          status: AT_MODERATION
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
      properties:
        outlets:
          description: Информация о точках продаж.
          items:
            $ref: '#/components/schemas/FullOutletDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        pager:
          $ref: '#/components/schemas/FlippingPagerDTO'
      required:
      - outlets
      type: object
    ChangeOutletRequest:
      allOf:
      - $ref: '#/components/schemas/OutletDTO'
      example:
        storagePeriod: 0
        address:
          number: number
          km: 6
          regionId: 0
          city: city
          street: street
          additional: additional
          estate: estate
          block: block
          building: building
        visibility: HIDDEN
        isMain: true
        shopOutletCode: shopOutletCode
        name: name
        phones:
        - phones
        - phones
        type: DEPOT
        coords: coords
        workingSchedule:
          scheduleItems:
          - startDay: MONDAY
            endDay: null
            startTime: 09:59
            endTime: 23:59
          - startDay: MONDAY
            endDay: null
            startTime: 09:59
            endTime: 23:59
          workInHoliday: true
        deliveryRules:
        - priceFreePickup: 7.061401241503109
          deliveryServiceId: 5
          maxDeliveryDays: 35
          minDeliveryDays: 8
          orderBefore: 5
          unspecifiedDeliveryInterval: true
        - priceFreePickup: 7.061401241503109
          deliveryServiceId: 5
          maxDeliveryDays: 35
          minDeliveryDays: 8
          orderBefore: 5
          unspecifiedDeliveryInterval: true
      type: object
    CreateOutletResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OutletResponseDTO'
        type: object
      description: Ответ на запрос о создании точки продаж.
      example:
        result:
          id: 0
        status: OK
      type: object
    GetOutletResponse:
      description: Ответ на запрос информации о точке продаж.
      example:
        outlet:
          storagePeriod: 9
          address:
            number: number
            km: 6
            regionId: 0
            city: city
            street: street
            additional: additional
            estate: estate
            block: block
            building: building
          moderationReason: moderationReason
          visibility: HIDDEN
          isMain: true
          phones:
          - phones
          - phones
          workingTime: workingTime
          type: DEPOT
          workingSchedule:
            scheduleItems:
            - startDay: MONDAY
              endDay: null
              startTime: 09:59
              endTime: 23:59
            - startDay: MONDAY
              endDay: null
              startTime: 09:59
              endTime: 23:59
            workInHoliday: true
          shopOutletId: shopOutletId
          shopOutletCode: shopOutletCode
          name: name
          id: 3
          region:
            parent: null
            children:
            - null
            - null
            name: name
            id: 0
            type: OTHER
          coords: coords
          deliveryRules:
          - priceFreePickup: 7.061401241503109
            deliveryServiceId: 5
            maxDeliveryDays: 35
            minDeliveryDays: 8
            orderBefore: 5
            unspecifiedDeliveryInterval: true
          - priceFreePickup: 7.061401241503109
            deliveryServiceId: 5
            maxDeliveryDays: 35
            minDeliveryDays: 8
            orderBefore: 5
            unspecifiedDeliveryInterval: true
          status: AT_MODERATION
      properties:
        outlet:
          $ref: '#/components/schemas/FullOutletDTO'
      type: object
    GetOutletLicensesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OutletLicensesResponseDTO'
        type: object
      example:
        result:
          licenses:
          - licenseType: ALCOHOL
            number: number
            dateOfExpiry: 2022-11-20T00:00:00+03:00
            checkStatus: NEW
            outletId: 1
            id: 0
            dateOfIssue: 2017-11-13T00:00:00+03:00
            checkComment: checkComment
          - licenseType: ALCOHOL
            number: number
            dateOfExpiry: 2022-11-20T00:00:00+03:00
            checkStatus: NEW
            outletId: 1
            id: 0
            dateOfIssue: 2017-11-13T00:00:00+03:00
            checkComment: checkComment
        status: OK
      type: object
    UpdateOutletLicenseRequest:
      description: Запрос на создание или изменение лицензий для точек продаж.
      example:
        licenses:
        - licenseType: ALCOHOL
          number: number
          dateOfExpiry: 2022-11-20T00:00:00+03:00
          outletId: 1
          id: 0
          dateOfIssue: 2017-11-13T00:00:00+03:00
        - licenseType: ALCOHOL
          number: number
          dateOfExpiry: 2022-11-20T00:00:00+03:00
          outletId: 1
          id: 0
          dateOfIssue: 2017-11-13T00:00:00+03:00
      properties:
        licenses:
          description: |
            Список лицензий.
            Обязательный параметр, должен содержать информацию хотя бы об одной лицензии.
          items:
            $ref: '#/components/schemas/OutletLicenseDTO'
          minItems: 1
          type: array
      required:
      - licenses
      type: object
    GetGoodsFeedbackRequest:
      description: |
        Фильтр запроса отзывов в кабинете.
      example:
        dateTimeFrom: 2000-01-23T04:56:07.000+00:00
        ratingValues:
        - 0
        - 0
        - 0
        - 0
        - 0
        modelIds:
        - 6
        - 6
        - 6
        - 6
        - 6
        feedbackIds:
        - null
        - null
        - null
        - null
        - null
        paid: true
        reactionStatus: ALL
        dateTimeTo: 2000-01-23T04:56:07.000+00:00
      properties:
        feedbackIds:
          description: |
            Идентификаторы отзывов.

            ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.
          items:
            $ref: '#/components/schemas/GoodsFeedbackId'
          maxItems: 50
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        dateTimeFrom:
          description: |
            Начало периода. Не включительно.

            Если параметр не указан, возвращается информация за 6 месяцев до указанной в `dateTimeTo` даты.
          format: date-time
          type: string
        dateTimeTo:
          description: |
            Конец периода. Не включительно.

            Если параметр не указан, используется текущая дата.
          format: date-time
          type: string
        reactionStatus:
          $ref: '#/components/schemas/FeedbackReactionStatusType'
        ratingValues:
          description: Оценка товара.
          items:
            format: int32
            type: integer
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        modelIds:
          deprecated: true
          description: |
            Фильтр по идентификатору модели товара.

            Получить идентификатор модели можно с помощью одного из запросов:

            * [POST businesses/{businessId}/offer-mappings](../../reference/business-assortment/getOfferMappings.md);

            * [POST businesses/{businessId}/offer-cards](../../reference/content/getOfferCardsContentStatus.md).
          items:
            format: int64
            type: integer
          maxItems: 20
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        paid:
          description: Фильтр отзывов за баллы Плюса.
          type: boolean
      type: object
    GetGoodsFeedbackResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GoodsFeedbackListDTO'
        type: object
      example:
        result:
          feedbacks:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            needReaction: true
            identifiers:
              orderId: 6
              modelId: 1
            author: author
            feedbackId: 0
            description:
              advantages: advantages
              disadvantages: disadvantages
              comment: comment
            media:
              videos:
              - videos
              - videos
              photos:
              - photos
              - photos
            statistics:
              commentsCount: 5
              rating: 3
              paidAmount: 2
              recommended: true
          - createdAt: 2000-01-23T04:56:07.000+00:00
            needReaction: true
            identifiers:
              orderId: 6
              modelId: 1
            author: author
            feedbackId: 0
            description:
              advantages: advantages
              disadvantages: disadvantages
              comment: comment
            media:
              videos:
              - videos
              - videos
              photos:
              - photos
              - photos
            statistics:
              commentsCount: 5
              rating: 3
              paidAmount: 2
              recommended: true
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    SkipGoodsFeedbackReactionRequest:
      description: Идентификаторы отзывов.
      example:
        feedbackIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        feedbackIds:
          description: "Список идентификаторов отзывов, на которые магазин не буде\
            т отвечать."
          items:
            $ref: '#/components/schemas/GoodsFeedbackId'
          maxItems: 50
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - feedbackIds
      type: object
    UpdateGoodsFeedbackCommentRequest:
      description: Комментарий к отзыву.
      example:
        feedbackId: 0
        comment:
          id: 6
          text: text
          parentId: 1
      properties:
        feedbackId:
          description: |
            Идентификатор отзыва.
          format: int64
          type: integer
        comment:
          $ref: '#/components/schemas/UpdateGoodsFeedbackCommentDTO'
      required:
      - comment
      - feedbackId
      type: object
    UpdateGoodsFeedbackCommentResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GoodsFeedbackCommentDTO'
        type: object
      example:
        result:
          author:
            name: name
            type: USER
          feedbackId: 1
          id: 0
          text: text
          canModify: true
          parentId: 6
          status: PUBLISHED
        status: OK
      type: object
    DeleteGoodsFeedbackCommentRequest:
      description: |
        Фильтр запроса отзывов по бизнесу.
      example:
        id: 0
      properties:
        id:
          description: |
            Идентификатор комментария к отзыву.
          format: int64
          type: integer
      required:
      - id
      type: object
    GetGoodsFeedbackCommentsRequest:
      description: |
        Фильтр запроса комментариев отзыва.
      example:
        feedbackId: 0
        commentIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        feedbackId:
          description: |
            Идентификатор отзыва.
          format: int64
          type: integer
        commentIds:
          description: |
            Идентификаторы комментариев.

            ⚠️ Не используйте это поле одновременно с другими фильтрами. Если вы хотите воспользоваться ими, оставьте поле пустым.
          items:
            $ref: '#/components/schemas/GoodsFeedbackCommentId'
          maxItems: 50
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    GetGoodsFeedbackCommentsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GoodsFeedbackCommentListDTO'
        type: object
      example:
        result:
          comments:
          - author:
              name: name
              type: USER
            feedbackId: 1
            id: 0
            text: text
            canModify: true
            parentId: 6
            status: PUBLISHED
          - author:
              name: name
              type: USER
            feedbackId: 1
            id: 0
            text: text
            canModify: true
            parentId: 6
            status: PUBLISHED
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    GetCampaignOffersRequest:
      description: |
        Фильтрации товаров

        В запросе можно указать либо фильтр offerIds, либо любые другие фильтры товаров. Совместное использование фильтра offerIds с другими фильтрациями приведет к ошибке.
      example:
        categoryIds:
        - 0
        - 0
        vendorNames:
        - vendorNames
        - vendorNames
        statuses:
        - PUBLISHED
        - PUBLISHED
        offerIds:
        - null
        - null
        - null
        - null
        - null
        tags:
        - tags
        - tags
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.

            {% note warning "Такой список возвращается только целиком" %}

            Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.

            Если вы запрашиваете информацию по конкретным SKU, не заполняйте:

            * `page_token`
            * `limit`

            {% endnote %}

             
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        statuses:
          description: |
            Фильтр по статусам товаров.
          items:
            $ref: '#/components/schemas/OfferCampaignStatusType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        vendorNames:
          description: Фильтр по брендам.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        tags:
          description: Фильтр по тегам.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    GetCampaignOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetCampaignOffersResultDTO'
        type: object
      description: Ответ на запрос списка товаров в магазине.
      example:
        result:
          offers:
          - campaignPrice:
              vat: 5
              discountBase: 5.962133916683182
              currencyId: RUR
              value: 1.4658129805029452
              updatedAt: 2000-01-23T04:56:07.000+00:00
            basicPrice:
              discountBase: 0.23021358869347652
              currencyId: RUR
              value: 0.5637376656633328
              updatedAt: 2000-01-23T04:56:07.000+00:00
            warnings:
            - comment: comment
              message: message
            - comment: comment
              message: message
            available: true
            offerId: offerId
            quantum:
              minQuantity: 1
              stepQuantity: 60
            errors:
            - comment: comment
              message: message
            - comment: comment
              message: message
            status: PUBLISHED
          - campaignPrice:
              vat: 5
              discountBase: 5.962133916683182
              currencyId: RUR
              value: 1.4658129805029452
              updatedAt: 2000-01-23T04:56:07.000+00:00
            basicPrice:
              discountBase: 0.23021358869347652
              currencyId: RUR
              value: 0.5637376656633328
              updatedAt: 2000-01-23T04:56:07.000+00:00
            warnings:
            - comment: comment
              message: message
            - comment: comment
              message: message
            available: true
            offerId: offerId
            quantum:
              minQuantity: 1
              stepQuantity: 60
            errors:
            - comment: comment
              message: message
            - comment: comment
              message: message
            status: PUBLISHED
          paging:
            prevPageToken: prevPageToken
            nextPageToken: nextPageToken
        status: OK
      type: object
    UpdateCampaignOffersRequest:
      description: Запрос на обновление предложений товаров магазина.
      example:
        offers:
        - available: true
          vat: null
          offerId: offerId
          quantum:
            minQuantity: 1
            stepQuantity: 60
        - available: true
          vat: null
          offerId: offerId
          quantum:
            minQuantity: 1
            stepQuantity: 60
        - available: true
          vat: null
          offerId: offerId
          quantum:
            minQuantity: 1
            stepQuantity: 60
        - available: true
          vat: null
          offerId: offerId
          quantum:
            minQuantity: 1
            stepQuantity: 60
        - available: true
          vat: null
          offerId: offerId
          quantum:
            minQuantity: 1
            stepQuantity: 60
      properties:
        offers:
          description: Параметры размещения товаров в заданном магазине.
          items:
            $ref: '#/components/schemas/UpdateCampaignOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offers
      type: object
    DeleteCampaignOffersRequest:
      description: |
        Фильтрации удаляемых товаров по offerIds.
      example:
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        offerIds:
          description: Идентификаторы товаров в каталоге.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - offerIds
      type: object
    DeleteCampaignOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/DeleteCampaignOffersDTO'
        type: object
      description: Результат удаления товаров.
      example:
        result:
          notDeletedOfferIds:
          - null
          - null
        status: OK
      type: object
    GetOfferRecommendationsRequest:
      example:
        cofinancePriceFilter: SPECIFIED
        competitivenessFilter: OPTIMAL
        offerIds:
        - null
        - null
      properties:
        offerIds:
          description: "Идентификаторы товаров, информация о которых нужна. ⚠️ Не\
            \ используйте это поле одновременно с остальными фильтрами. Если вы хо\
            тите воспользоваться фильтрами, оставьте поле пустым."
          items:
            $ref: '#/components/schemas/ShopSku'
          minItems: 1
          nullable: true
          type: array
        cofinancePriceFilter:
          $ref: '#/components/schemas/FieldStateType'
        competitivenessFilter:
          $ref: '#/components/schemas/PriceCompetitivenessType'
      type: object
    GetOfferRecommendationsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferRecommendationsResultDTO'
        type: object
      example:
        result:
          paging:
            prevPageToken: prevPageToken
            nextPageToken: nextPageToken
          offerRecommendations:
          - offer:
              shows: 0
              price:
                currencyId: null
                value: 0.9301444243932576
              offerId: offerId
              competitiveness: OPTIMAL
              cofinancePrice:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
            recommendation:
              offerId: offerId
              competitivenessThresholds:
                optimalPrice:
                  currencyId: null
                  value: 0.9301444243932576
                averagePrice:
                  currencyId: null
                  value: 0.9301444243932576
          - offer:
              shows: 0
              price:
                currencyId: null
                value: 0.9301444243932576
              offerId: offerId
              competitiveness: OPTIMAL
              cofinancePrice:
                currencyId: null
                value: 0.7061401241503109
                updatedAt: 2000-01-23T04:56:07.000+00:00
            recommendation:
              offerId: offerId
              competitivenessThresholds:
                optimalPrice:
                  currencyId: null
                  value: 0.9301444243932576
                averagePrice:
                  currencyId: null
                  value: 0.9301444243932576
        status: OK
      type: object
    CurrencyType:
      description: |
        Коды валют:

        * `RUR` — российский рубль.
        * `UAH` — украинская гривна.
        * `BYR` — белорусский рубль.
        * `KZT` — казахстанский тенге.
        * `UZS` — узбекский сум.
      enum:
      - RUR
      - USD
      - EUR
      - UAH
      - AUD
      - GBP
      - BYR
      - BYN
      - DKK
      - ISK
      - KZT
      - CAD
      - CNY
      - NOK
      - XDR
      - SGD
      - TRY
      - SEK
      - CHF
      - JPY
      - AZN
      - ALL
      - DZD
      - AOA
      - ARS
      - AMD
      - AFN
      - BHD
      - BGN
      - BOB
      - BWP
      - BND
      - BRL
      - BIF
      - HUF
      - VEF
      - KPW
      - VND
      - GMD
      - GHS
      - GNF
      - HKD
      - GEL
      - AED
      - EGP
      - ZMK
      - ILS
      - INR
      - IDR
      - JOD
      - IQD
      - IRR
      - YER
      - QAR
      - KES
      - KGS
      - COP
      - CDF
      - CRC
      - KWD
      - CUP
      - LAK
      - LVL
      - SLL
      - LBP
      - LYD
      - SZL
      - LTL
      - MUR
      - MRO
      - MKD
      - MWK
      - MGA
      - MYR
      - MAD
      - MXN
      - MZN
      - MDL
      - MNT
      - NPR
      - NGN
      - NIO
      - NZD
      - OMR
      - PKR
      - PYG
      - PEN
      - PLN
      - KHR
      - SAR
      - RON
      - SCR
      - SYP
      - SKK
      - SOS
      - SDG
      - SRD
      - TJS
      - THB
      - TWD
      - BDT
      - TZS
      - TND
      - TMM
      - UGX
      - UZS
      - UYU
      - PHP
      - DJF
      - XAF
      - XOF
      - HRK
      - CZK
      - CLP
      - LKR
      - EEK
      - ETB
      - RSD
      - ZAR
      - KRW
      - NAD
      - TL
      - UE
      type: string
    SearchModelsResponse:
      allOf:
      - $ref: '#/components/schemas/GetModelsResponse'
      - properties:
          pager:
            $ref: '#/components/schemas/FlippingPagerDTO'
        type: object
      example:
        models:
        - name: name
          id: 0
          prices:
            avg: 6.027456183070403
            min: 5.962133916683182
            max: 1.4658129805029452
        - name: name
          id: 0
          prices:
            avg: 6.027456183070403
            min: 5.962133916683182
            max: 1.4658129805029452
        pager:
          total: 1
          pagesCount: 7
          pageSize: 9
          from: 5
          to: 5
          currentPage: 2
        regionId: 5
        currency: RUR
      type: object
    GetModelsRequest:
      description: Запрос информации о моделях.
      example:
        models:
        - 0
        - 0
      properties:
        models:
          description: Список моделей.
          items:
            description: Идентификатор модели.
            exclusiveMinimum: true
            format: int64
            minimum: 0
            type: integer
          minItems: 1
          type: array
      required:
      - models
      type: object
    GetModelsResponse:
      allOf:
      - $ref: '#/components/schemas/ModelsDTO'
      - $ref: '#/components/schemas/RegionalModelInfoDTO'
      description: Ответ на запрос информации о моделях.
      example:
        models:
        - name: name
          id: 0
          prices:
            avg: 6.027456183070403
            min: 5.962133916683182
            max: 1.4658129805029452
        - name: name
          id: 0
          prices:
            avg: 6.027456183070403
            min: 5.962133916683182
            max: 1.4658129805029452
        regionId: 0
        currency: RUR
      type: object
    SortOrderType:
      description: |
        Направление сортировки:

        - `ASC` — сортировка по возрастанию.
        - `DESC` — сортировка по убыванию.
      enum:
      - ASC
      - DESC
      type: string
    GetModelsOffersResponse:
      allOf:
      - $ref: '#/components/schemas/EnrichedModelsDTO'
      - $ref: '#/components/schemas/RegionalModelInfoDTO'
      description: Ответ на запрос списка предложений для моделей.
      example:
        models:
        - offers:
          - shopRating: 9
            preDiscountPrice: 5.962133916683182
            shippingCost: 7.061401241503109
            pos: 1
            regionId: 2
            price: 5.637376656633329
            name: name
            discount: 6
            shopName: shopName
            inStock: 3
          - shopRating: 9
            preDiscountPrice: 5.962133916683182
            shippingCost: 7.061401241503109
            pos: 1
            regionId: 2
            price: 5.637376656633329
            name: name
            discount: 6
            shopName: shopName
            inStock: 3
          onlineOffers: 4
          name: name
          id: 0
          prices:
            avg: 6.027456183070403
            min: 5.962133916683182
            max: 1.4658129805029452
          offlineOffers: 2
        - offers:
          - shopRating: 9
            preDiscountPrice: 5.962133916683182
            shippingCost: 7.061401241503109
            pos: 1
            regionId: 2
            price: 5.637376656633329
            name: name
            discount: 6
            shopName: shopName
            inStock: 3
          - shopRating: 9
            preDiscountPrice: 5.962133916683182
            shippingCost: 7.061401241503109
            pos: 1
            regionId: 2
            price: 5.637376656633329
            name: name
            discount: 6
            shopName: shopName
            inStock: 3
          onlineOffers: 4
          name: name
          id: 0
          prices:
            avg: 6.027456183070403
            min: 5.962133916683182
            max: 1.4658129805029452
          offlineOffers: 2
        regionId: 7
        currency: RUR
      type: object
    PutSkuBidsRequest:
      description: description.
      example:
        bids:
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
      properties:
        bids:
          description: "Список товаров и ставки для продвижения, которые на них ну\
            жно установить."
          items:
            $ref: '#/components/schemas/SkuBidItemDTO'
          maxItems: 1500
          minItems: 1
          type: array
      required:
      - bids
      type: object
    GetBidsInfoRequest:
      description: description.
      example:
        skus:
        - null
        - null
        - null
        - null
        - null
      properties:
        skus:
          description: |
            Список товаров, для которых нужно получить значения ставок.

            Если список не задан, постранично возвращаются все товары со ставками.

            Если список задан, результаты возвращаются одной страницей, а параметры `page_token` и `limit` игнорируются.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 1500
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    GetBidsInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetBidsInfoResponseDTO'
        type: object
      description: description.
      example:
        result:
          bids:
          - sku: sku
            bid: 570
          - sku: sku
            bid: 570
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    GetBidsRecommendationsRequest:
      description: description.
      example:
        skus:
        - null
        - null
        - null
        - null
        - null
      properties:
        skus:
          description: |
            Список товаров, для которых нужно получить рекомендации по ставкам.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 1500
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - skus
      type: object
    GetBidsRecommendationsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetBidsRecommendationsResponseDTO'
        type: object
      description: description.
      example:
        result:
          recommendations:
          - bidRecommendations:
            - benefits:
              - BESTS
              - BESTS
              showPercent: 8
              bid: 570
            - benefits:
              - BESTS
              - BESTS
              showPercent: 8
              bid: 570
            priceRecommendations:
            - campaignId: 6
              price: 1.1465812980502945
            - campaignId: 6
              price: 1.1465812980502945
            sku: sku
            bid: 570
          - bidRecommendations:
            - benefits:
              - BESTS
              - BESTS
              showPercent: 8
              bid: 570
            - benefits:
              - BESTS
              - BESTS
              showPercent: 8
              bid: 570
            priceRecommendations:
            - campaignId: 6
              price: 1.1465812980502945
            - campaignId: 6
              price: 1.1465812980502945
            sku: sku
            bid: 570
        status: OK
      type: object
    GetWarehousesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/WarehousesDTO'
        type: object
      example:
        result:
          warehouses:
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
          warehouseGroups:
          - name: name
            warehouses:
            - address:
                number: number
                city: city
                street: street
                block: block
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
                building: building
              campaignId: 6
              name: name
              express: true
              id: 0
            - address:
                number: number
                city: city
                street: street
                block: block
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
                building: building
              campaignId: 6
              name: name
              express: true
              id: 0
            mainWarehouse:
              address:
                number: number
                city: city
                street: street
                block: block
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
                building: building
              campaignId: 6
              name: name
              express: true
              id: 0
          - name: name
            warehouses:
            - address:
                number: number
                city: city
                street: street
                block: block
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
                building: building
              campaignId: 6
              name: name
              express: true
              id: 0
            - address:
                number: number
                city: city
                street: street
                block: block
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
                building: building
              campaignId: 6
              name: name
              express: true
              id: 0
            mainWarehouse:
              address:
                number: number
                city: city
                street: street
                block: block
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
                building: building
              campaignId: 6
              name: name
              express: true
              id: 0
        status: OK
      type: object
    GetPagedWarehousesRequest:
      description: Запрос на получение складов кабинета.
      example:
        components:
        - ADDRESS
        - ADDRESS
        campaignIds:
        - 1
        - 1
        - 1
        - 1
        - 1
      properties:
        components:
          description: |
            Свойства складов, которые необходимо вернуть. Если какое-то значение параметра не задано, этой информации в ответе не будет.

            Передавайте параметр, только если нужна информация, которую он возвращает.

            Можно передать сразу несколько значений.
          items:
            $ref: '#/components/schemas/WarehouseComponentType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        campaignIds:
          description: |
            Список идентификаторов кампании тех магазинов, склады которых необходимо вернуть.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          items:
            format: int64
            minimum: 1
            type: integer
          maxItems: 25
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    GetPagedWarehousesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/PagedWarehousesDTO'
        type: object
      example:
        result:
          warehouses:
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
            groupInfo:
              name: name
              id: 1
            status:
              status: DISABLED_MANUALLY
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
            groupInfo:
              name: name
              id: 1
            status:
              status: DISABLED_MANUALLY
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    GetFulfillmentWarehousesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/FulfillmentWarehousesDTO'
        type: object
      example:
        result:
          warehouses:
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            name: name
            id: 0
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            name: name
            id: 0
        status: OK
      type: object
    UpdateWarehouseStatusRequest:
      description: |
        Запрос на изменение статуса склада партнером.

        Позволяет выключить склад или включить ранее отключенный вами склад.

        Если склад был отключен Маркетом, то включить его вручную с помощью этого метода не получится.
      example:
        enabled: true
      properties:
        enabled:
          description: |
            Статус склада:

            * `true` — включен.
            * `false` — отключен.
          type: boolean
      required:
      - enabled
      type: object
    UpdateWarehouseStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/WarehouseStatusDTO'
        type: object
      example:
        result:
          status: DISABLED_MANUALLY
        status: OK
      type: object
    GetCategoryContentParametersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/CategoryContentParametersDTO'
        type: object
      description: Ответ со списком характеристик для категории и их допустимыми значениями.
      example:
        result:
          parameters:
          - values:
            - description: description
              id: 5
              value: value
            - description: description
              id: 5
              value: value
            recommendationTypes:
            - HAS_VIDEO
            - HAS_VIDEO
            description: description
            type: TEXT
            constraints:
              minValue: 2.3021358869347655
              maxValue: 7.061401241503109
              maxLength: 9
            required: true
            multivalue: true
            unit:
              defaultUnitId: 1
              units:
              - name: кг
                fullName: килограмм
                id: 5
              - name: кг
                fullName: килограмм
                id: 5
            valueRestrictions:
            - limitedValues:
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              limitingParameterId: 1
            - limitedValues:
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              limitingParameterId: 1
            distinctive: true
            name: name
            id: 1
            filtering: true
            allowCustomValues: true
          - values:
            - description: description
              id: 5
              value: value
            - description: description
              id: 5
              value: value
            recommendationTypes:
            - HAS_VIDEO
            - HAS_VIDEO
            description: description
            type: TEXT
            constraints:
              minValue: 2.3021358869347655
              maxValue: 7.061401241503109
              maxLength: 9
            required: true
            multivalue: true
            unit:
              defaultUnitId: 1
              units:
              - name: кг
                fullName: килограмм
                id: 5
              - name: кг
                fullName: килограмм
                id: 5
            valueRestrictions:
            - limitedValues:
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              limitingParameterId: 1
            - limitedValues:
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              - limitingOptionValueId: 2
                optionValueIds:
                - 1
                - 1
              limitingParameterId: 1
            distinctive: true
            name: name
            id: 1
            filtering: true
            allowCustomValues: true
          categoryId: 1
        status: OK
      type: object
    GetOfferCardsContentStatusRequest:
      example:
        categoryIds:
        - null
        - null
        - null
        - null
        - null
        offerIds:
        - null
        - null
        - null
        - null
        - null
        cardStatuses:
        - HAS_CARD_CAN_NOT_UPDATE
        - HAS_CARD_CAN_NOT_UPDATE
      properties:
        offerIds:
          description: |
            Идентификаторы товаров, информация о которых нужна.
            <br><br>
            ⚠️ Не используйте это поле одновременно с фильтрами по статусам карточек, категориям, брендам или тегам. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 200
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        cardStatuses:
          description: |
            Фильтр по статусам карточек.

            [Что такое карточка товара](https://yandex.ru/support/marketplace/assortment/content/index.html)
          items:
            $ref: '#/components/schemas/OfferCardStatusType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        categoryIds:
          description: Фильтр по категориям на Маркете.
          items:
            $ref: '#/components/schemas/CategoryId'
          maxItems: 200
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    GetOfferCardsContentStatusResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/OfferCardsContentStatusDTO'
        type: object
      description: Ответ со списком состояний товаров и пагинацией.
      example:
        result:
          offerCards:
          - mapping:
              marketSkuName: marketSkuName
              marketCategoryName: marketCategoryName
              marketCategoryId: 4
              marketSku: 1
              marketModelId: 2
              marketModelName: marketModelName
            warnings:
            - comment: comment
              message: message
            - comment: comment
              message: message
            offerId: offerId
            contentRating: 0
            contentRatingStatus: UPDATING
            recommendations:
            - remainingRatingPoints: 60
              type: HAS_VIDEO
              percent: 14
            - remainingRatingPoints: 60
              type: HAS_VIDEO
              percent: 14
            cardStatus: HAS_CARD_CAN_NOT_UPDATE
            averageContentRating: 6
            errors:
            - comment: comment
              message: message
            - comment: comment
              message: message
            parameterValues:
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
          - mapping:
              marketSkuName: marketSkuName
              marketCategoryName: marketCategoryName
              marketCategoryId: 4
              marketSku: 1
              marketModelId: 2
              marketModelName: marketModelName
            warnings:
            - comment: comment
              message: message
            - comment: comment
              message: message
            offerId: offerId
            contentRating: 0
            contentRatingStatus: UPDATING
            recommendations:
            - remainingRatingPoints: 60
              type: HAS_VIDEO
              percent: 14
            - remainingRatingPoints: 60
              type: HAS_VIDEO
              percent: 14
            cardStatus: HAS_CARD_CAN_NOT_UPDATE
            averageContentRating: 6
            errors:
            - comment: comment
              message: message
            - comment: comment
              message: message
            parameterValues:
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
            - valueId: 5
              parameterId: 1
              unitId: 5
              value: value
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    UpdateOfferContentRequest:
      description: Запрос на установку новых значений для параметров.
      example:
        offersContent:
        - offerId: offerId
          categoryId: 1
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
        - offerId: offerId
          categoryId: 1
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
        - offerId: offerId
          categoryId: 1
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
        - offerId: offerId
          categoryId: 1
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
        - offerId: offerId
          categoryId: 1
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
      properties:
        offersContent:
          description: Список товаров с указанными характеристиками.
          items:
            $ref: '#/components/schemas/OfferContentDTO'
          maxItems: 100
          minItems: 1
          type: array
      required:
      - offersContent
      type: object
    UpdateOfferContentResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          results:
            description: |
              Ошибки и предупреждения, которые появились при обработке переданных значений. Каждый элемент списка соответствует одному товару.

              Если ошибок и предупреждений нет, поле не передается.
            items:
              $ref: '#/components/schemas/UpdateOfferContentResultDTO'
            minItems: 1
            nullable: true
            type: array
        type: object
      description: "Описывает проблемы, которые появились при сохранении товара."
      example:
        results:
        - warnings:
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
          offerId: offerId
          errors:
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
        - warnings:
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
          offerId: offerId
          errors:
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
          - parameterId: 0
            type: OFFER_NOT_FOUND
            message: message
        status: OK
      type: object
    CreateChatRequest:
      description: |
        Заказ, для которого нужно создать чат.
      example:
        orderId: 0
      properties:
        orderId:
          description: Идентификатор заказа на Маркете.
          format: int64
          type: integer
      required:
      - orderId
      type: object
    CreateChatResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/CreateChatResultDTO'
        type: object
      description: Результат создания чата.
      example:
        result:
          chatId: 1
        status: OK
      type: object
    GetChatsRequest:
      description: |
        Фильтры по чатам, которые нужно вернуть.
      example:
        types:
        - CHAT
        - CHAT
        statuses:
        - NEW
        - NEW
        orderIds:
        - 0
        - 0
      properties:
        orderIds:
          description: Фильтр по идентификаторам заказов на Маркете.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        types:
          description: Фильтр по типам чатов.
          items:
            $ref: '#/components/schemas/ChatType'
          minItems: 1
          nullable: true
          type: array
        statuses:
          description: Фильтр по статусам чатов.
          items:
            $ref: '#/components/schemas/ChatStatusType'
          minItems: 1
          nullable: true
          type: array
      type: object
    GetChatsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetChatsInfoDTO'
        type: object
      example:
        result:
          chats:
          - createdAt: 2017-11-21T00:00:00+03:00
            chatId: 1
            orderId: 1
            type: CHAT
            status: NEW
            updatedAt: 2017-11-21T00:00:00+03:00
          - createdAt: 2017-11-21T00:00:00+03:00
            chatId: 1
            orderId: 1
            type: CHAT
            status: NEW
            updatedAt: 2017-11-21T00:00:00+03:00
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    GetChatResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetChatInfoDTO'
        type: object
      example:
        result:
          createdAt: 2017-11-21T00:00:00+03:00
          chatId: 1
          orderId: 1
          type: CHAT
          status: NEW
          updatedAt: 2017-11-21T00:00:00+03:00
        status: OK
      type: object
    SendFileToChatRequest:
      description: Информация о чате и отправляемом файле.
      properties:
        file:
          description: Содержимое файла. Максимальный размер файла — 5 Мбайт.
          format: binary
          type: string
      required:
      - file
      type: object
    GetChatMessageResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ChatMessageDTO'
        type: object
      example:
        result:
          createdAt: 2017-11-21T00:00:00+03:00
          sender: PARTNER
          payload:
          - size: 6
            name: name
            url: url
          - size: 6
            name: name
            url: url
          messageId: 1
          message: message
        status: OK
      type: object
    SendMessageToChatRequest:
      description: В какой чат нужно отправить сообщение и текст сообщения.
      example:
        message: message
      properties:
        message:
          description: Текст сообщения.
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - message
      type: object
    GetChatHistoryRequest:
      description: |
        Историю какого чата нужно получить — и начиная с какого сообщения.
      example:
        messageIdFrom: 1
      properties:
        messageIdFrom:
          description: "Идентификатор сообщения, начиная с которого нужно получить\
            \ все последующие сообщения."
          format: int64
          minimum: 1
          type: integer
      type: object
    GetChatHistoryResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/ChatMessagesResultDTO'
        type: object
      example:
        result:
          orderId: 0
          messages:
          - createdAt: 2017-11-21T00:00:00+03:00
            sender: PARTNER
            payload:
            - size: 6
              name: name
              url: url
            - size: 6
              name: name
              url: url
            messageId: 1
            message: message
          - createdAt: 2017-11-21T00:00:00+03:00
            sender: PARTNER
            payload:
            - size: 6
              name: name
              url: url
            - size: 6
              name: name
              url: url
            messageId: 1
            message: message
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    CalculateTariffsRequest:
      example:
        offers:
        - quantity: 1
          price: 0.6027456183070403
          length: 0.14658129805029452
          width: 0.5962133916683182
          weight: 0.23021358869347652
          categoryId: 0
          height: 0.5637376656633328
        - quantity: 1
          price: 0.6027456183070403
          length: 0.14658129805029452
          width: 0.5962133916683182
          weight: 0.23021358869347652
          categoryId: 0
          height: 0.5637376656633328
        - quantity: 1
          price: 0.6027456183070403
          length: 0.14658129805029452
          width: 0.5962133916683182
          weight: 0.23021358869347652
          categoryId: 0
          height: 0.5637376656633328
        - quantity: 1
          price: 0.6027456183070403
          length: 0.14658129805029452
          width: 0.5962133916683182
          weight: 0.23021358869347652
          categoryId: 0
          height: 0.5637376656633328
        - quantity: 1
          price: 0.6027456183070403
          length: 0.14658129805029452
          width: 0.5962133916683182
          weight: 0.23021358869347652
          categoryId: 0
          height: 0.5637376656633328
        parameters:
          campaignId: 1
          sellingProgram: FBY
          frequency: DAILY
      properties:
        parameters:
          $ref: '#/components/schemas/CalculateTariffsParametersDTO'
        offers:
          description: "Товары, для которых нужно рассчитать стоимость услуг."
          items:
            $ref: '#/components/schemas/CalculateTariffsOfferDTO'
          maxItems: 200
          minItems: 1
          type: array
      required:
      - offers
      - parameters
      type: object
    CalculateTariffsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/CalculateTariffsResponseDTO'
        type: object
      example:
        result:
          offers:
          - offer:
              quantity: 1
              price: 0.6027456183070403
              length: 0.14658129805029452
              width: 0.5962133916683182
              weight: 0.23021358869347652
              categoryId: 0
              height: 0.5637376656633328
            tariffs:
            - amount: 9.301444243932576
              type: AGENCY_COMMISSION
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - amount: 9.301444243932576
              type: AGENCY_COMMISSION
              parameters:
              - name: name
                value: value
              - name: name
                value: value
          - offer:
              quantity: 1
              price: 0.6027456183070403
              length: 0.14658129805029452
              width: 0.5962133916683182
              weight: 0.23021358869347652
              categoryId: 0
              height: 0.5637376656633328
            tariffs:
            - amount: 9.301444243932576
              type: AGENCY_COMMISSION
              parameters:
              - name: name
                value: value
              - name: name
                value: value
            - amount: 9.301444243932576
              type: AGENCY_COMMISSION
              parameters:
              - name: name
                value: value
              - name: name
                value: value
        status: OK
      type: object
    GetCategoriesRequest:
      description: |
        Параметры запроса категорий.
      example:
        language: RU
      properties:
        language:
          $ref: '#/components/schemas/LanguageType'
      type: object
    GetCategoriesResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/CategoryDTO'
        type: object
      example:
        result:
          children:
          - null
          - null
          name: name
          id: 0
        status: OK
      type: object
    GetCategoriesMaxSaleQuantumRequest:
      description: |
        Список категорий, для которых нужно вернуть лимит на установку кванта и минимального количества товаров.
      example:
        marketCategoryIds:
        - 0
        - 0
        - 0
        - 0
        - 0
      properties:
        marketCategoryIds:
          description: "Идентификаторы листовых категории на Маркете — тех, у кото\
            рых нет дочерних категорий."
          items:
            format: int64
            type: integer
          maxItems: 1500
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - marketCategoryIds
      type: object
    GetCategoriesMaxSaleQuantumResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - $ref: '#/components/schemas/GetCategoriesMaxSaleQuantumDTO'
      example:
        results:
        - maxSaleQuantum: 6
          name: name
          id: 0
        - maxSaleQuantum: 6
          name: name
          id: 0
        errors:
        - type: UNKNOWN_CATEGORY
          categoryId: 1
        - type: UNKNOWN_CATEGORY
          categoryId: 1
        status: OK
      type: object
    GetQualityRatingRequest:
      description: Запрос информации по индексу качества.
      example:
        dateTo: 2000-01-23
        campaignIds:
        - 0
        - 0
        - 0
        - 0
        - 0
        dateFrom: 2000-01-23
      properties:
        dateFrom:
          description: |
            Начало периода.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Не может быть раньше 30 дней от текущей даты.
          format: date
          type: string
        dateTo:
          description: |
            Конец периода.

            Формат даты: `ГГГГ‑ММ‑ДД`.

            Не может быть позже текущей даты.
          format: date
          type: string
        campaignIds:
          description: |
            Список идентификаторов кампании.

            Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          items:
            description: |
              Список кампании тех магазинов, для которых необходимо получить информацию.
            format: int64
            type: integer
          maxItems: 50
          minItems: 1
          type: array
          uniqueItems: true
      required:
      - campaignIds
      type: object
    GetQualityRatingResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/CampaignsQualityRatingDTO'
        type: object
      description: Информация об индексе качества магазинов.
      example:
        result:
          campaignRatings:
          - campaignId: 0
            ratings:
            - components:
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              rating: 60
              calculationDate: 2000-01-23
            - components:
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              rating: 60
              calculationDate: 2000-01-23
          - campaignId: 0
            ratings:
            - components:
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              rating: 60
              calculationDate: 2000-01-23
            - components:
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              - componentType: DBS_CANCELLATION_RATE
                value: 14.658129805029452
              rating: 60
              calculationDate: 2000-01-23
        status: OK
      type: object
    GetQualityRatingDetailsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/QualityRatingDetailsDTO'
        type: object
      example:
        result:
          affectedOrders:
          - componentType: DBS_CANCELLATION_RATE
            orderId: 0
            description: description
          - componentType: DBS_CANCELLATION_RATE
            orderId: 0
            description: description
        status: OK
      type: object
    GetPromosRequest:
      description: Фильтры для получения списка акций.
      example:
        participation: PARTICIPATING_NOW
        mechanics: DIRECT_DISCOUNT
      properties:
        participation:
          $ref: '#/components/schemas/PromoParticipationType'
        mechanics:
          $ref: '#/components/schemas/MechanicsType'
      type: object
    GetPromosResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetPromosResultDTO'
        type: object
      example:
        result:
          promos:
          - period:
              dateTimeFrom: 2000-01-23T04:56:07.000+00:00
              dateTimeTo: 2000-01-23T04:56:07.000+00:00
            channels:
            - "{}"
            - "{}"
            mechanicsInfo:
              promocodeInfo:
                promocode: promocode
                discount: 1
              type: DIRECT_DISCOUNT
            bestsellerInfo:
              renewalEnabled: true
              bestseller: true
              entryDeadline: 2000-01-23T04:56:07.000+00:00
            name: name
            participating: true
            id: id
            constraints:
              warehouseIds:
              - 5
              - 5
            assortmentInfo:
              activeOffers: 0
              processing: true
              potentialOffers: 6
          - period:
              dateTimeFrom: 2000-01-23T04:56:07.000+00:00
              dateTimeTo: 2000-01-23T04:56:07.000+00:00
            channels:
            - "{}"
            - "{}"
            mechanicsInfo:
              promocodeInfo:
                promocode: promocode
                discount: 1
              type: DIRECT_DISCOUNT
            bestsellerInfo:
              renewalEnabled: true
              bestseller: true
              entryDeadline: 2000-01-23T04:56:07.000+00:00
            name: name
            participating: true
            id: id
            constraints:
              warehouseIds:
              - 5
              - 5
            assortmentInfo:
              activeOffers: 0
              processing: true
              potentialOffers: 6
        status: OK
      type: object
    GetPromoOffersRequest:
      description: "Получение списка товаров, которые участвуют или могут участвов\
        ать в акции."
      example:
        statusType: MANUALLY_ADDED
        statuses:
        - MANUALLY_ADDED
        - MANUALLY_ADDED
        promoId: promoId
      properties:
        promoId:
          description: Идентификатор акции.
          type: string
        statusType:
          $ref: '#/components/schemas/PromoOfferParticipationStatusFilterType'
        statuses:
          description: "Фильтр для товаров, которые могут участвовать в акции. Мож\
            но задать несколько значений."
          items:
            $ref: '#/components/schemas/PromoOfferParticipationStatusMultiFilterType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      required:
      - promoId
      type: object
    GetPromoOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetPromoOffersResultDTO'
        type: object
      example:
        result:
          offers:
          - offerId: offerId
            params:
              discountParams:
                promoPrice: 6
                maxPromoPrice: 1
                price: 0
              promocodeParams:
                maxPrice: 5
            status: AUTO
            autoParticipatingDetails:
              campaignIds:
              - 5
              - 5
          - offerId: offerId
            params:
              discountParams:
                promoPrice: 6
                maxPromoPrice: 1
                price: 0
              promocodeParams:
                maxPrice: 5
            status: AUTO
            autoParticipatingDetails:
              campaignIds:
              - 5
              - 5
          paging:
            nextPageToken: nextPageToken
        status: OK
      type: object
    UpdatePromoOffersRequest:
      description: |
        Добавление товаров в акцию или обновление их параметров.

        Чтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре `offers`.
      example:
        offers:
        - offerId: offerId
          params:
            discountParams:
              promoPrice: 1
              price: 1
        - offerId: offerId
          params:
            discountParams:
              promoPrice: 1
              price: 1
        - offerId: offerId
          params:
            discountParams:
              promoPrice: 1
              price: 1
        - offerId: offerId
          params:
            discountParams:
              promoPrice: 1
              price: 1
        - offerId: offerId
          params:
            discountParams:
              promoPrice: 1
              price: 1
        promoId: promoId
      properties:
        promoId:
          description: Идентификатор акции.
          type: string
        offers:
          description: "Товары, которые необходимо добавить в акцию или цены котор\
            ых нужно изменить."
          items:
            $ref: '#/components/schemas/UpdatePromoOfferDTO'
          maxItems: 500
          minItems: 1
          type: array
      required:
      - offers
      - promoId
      type: object
    UpdatePromoOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/UpdatePromoOffersResultDTO'
        type: object
      description: Результат добавления товаров в акцию.
      example:
        result:
          rejectedOffers:
          - reason: OFFER_DOES_NOT_EXIST
            offerId: offerId
          - reason: OFFER_DOES_NOT_EXIST
            offerId: offerId
          warningOffers:
          - warnings:
            - code: DEEP_DISCOUNT_OFFER
              campaignIds:
              - 0
              - 0
            - code: DEEP_DISCOUNT_OFFER
              campaignIds:
              - 0
              - 0
            offerId: offerId
          - warnings:
            - code: DEEP_DISCOUNT_OFFER
              campaignIds:
              - 0
              - 0
            - code: DEEP_DISCOUNT_OFFER
              campaignIds:
              - 0
              - 0
            offerId: offerId
        status: OK
      type: object
    DeletePromoOffersRequest:
      description: |
        Удаление товаров из акции.

        Чтобы убрать:

        * все товары из акции и больше не участвовать в ней, передайте значение `true` в параметре `deleteAllOffers`;

        * часть товаров, передайте их идентификаторы в параметре `offersIds`.
      example:
        deleteAllOffers: true
        promoId: promoId
        offerIds:
        - null
        - null
        - null
        - null
        - null
      properties:
        promoId:
          description: Идентификатор акции.
          type: string
        deleteAllOffers:
          description: "Чтобы убрать все товары из акции и больше не участвовать в\
            \ ней, передайте значение `true` и не передавайте параметр `offerIds`."
          type: boolean
        offerIds:
          description: "Товары, которые нужно убрать из акции."
          items:
            $ref: '#/components/schemas/ShopSku'
          maxItems: 500
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      required:
      - promoId
      type: object
    DeletePromoOffersResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/DeletePromoOffersResultDTO'
        type: object
      description: Результат удаления товаров из акции.
      example:
        result:
          rejectedOffers:
          - reason: OFFER_DOES_NOT_EXIST
            offerId: offerId
          - reason: OFFER_DOES_NOT_EXIST
            offerId: offerId
        status: OK
      type: object
    GetSupplyRequestsRequest:
      description: |
        Модель для фильтрации и сортировки заявок на поставку.
        Фильтры по `requestDateFrom` и `requestDateTo` отбирают заявки по targetLocation->requestedDate и transitLocation->requestedDate.
      example:
        requestDateFrom: 2000-01-23T04:56:07.000+00:00
        requestStatuses:
        - CREATED
        - CREATED
        sorting:
          attribute: ID
          direction: ASC
        requestDateTo: 2000-01-23T04:56:07.000+00:00
        requestIds:
        - null
        - null
        - null
        - null
        - null
        requestTypes:
        - SUPPLY
        - SUPPLY
        requestSubtypes:
        - DEFAULT
        - DEFAULT
      properties:
        requestIds:
          description: Идентификаторы заявок.
          items:
            $ref: '#/components/schemas/SupplyRequestId'
          maxItems: 100
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        requestDateFrom:
          description: Дата начала периода для фильтрации заявок.
          format: date-time
          nullable: true
          type: string
        requestDateTo:
          description: Дата окончания периода для фильтрации заявок.
          format: date-time
          nullable: true
          type: string
        requestTypes:
          description: Типы заявок для фильтрации.
          items:
            $ref: '#/components/schemas/SupplyRequestType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        requestSubtypes:
          description: Подтипы заявок для фильтрации.
          items:
            $ref: '#/components/schemas/SupplyRequestSubType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        requestStatuses:
          description: Статусы заявок для фильтрации.
          items:
            $ref: '#/components/schemas/SupplyRequestStatusType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        sorting:
          $ref: '#/components/schemas/SupplyRequestSortingDTO'
      type: object
    GetSupplyRequestsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetSupplyRequestsDTO'
        type: object
      example:
        result:
          paging:
            nextPageToken: nextPageToken
          requests:
          - childrenLinks:
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            parentLink:
              id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            counters:
              undefinedCount: 0
              acceptableCount: 0
              actualPalletsCount: 0
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              actualBoxCount: 0
              factCount: 0
              defectCount: 0
              unacceptableCount: 0
            subtype: DEFAULT
            transitLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: SUPPLY
            targetLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - childrenLinks:
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            parentLink:
              id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            counters:
              undefinedCount: 0
              acceptableCount: 0
              actualPalletsCount: 0
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              actualBoxCount: 0
              factCount: 0
              defectCount: 0
              unacceptableCount: 0
            subtype: DEFAULT
            transitLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: SUPPLY
            targetLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - childrenLinks:
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            parentLink:
              id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            counters:
              undefinedCount: 0
              acceptableCount: 0
              actualPalletsCount: 0
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              actualBoxCount: 0
              factCount: 0
              defectCount: 0
              unacceptableCount: 0
            subtype: DEFAULT
            transitLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: SUPPLY
            targetLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - childrenLinks:
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            parentLink:
              id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            counters:
              undefinedCount: 0
              acceptableCount: 0
              actualPalletsCount: 0
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              actualBoxCount: 0
              factCount: 0
              defectCount: 0
              unacceptableCount: 0
            subtype: DEFAULT
            transitLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: SUPPLY
            targetLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - childrenLinks:
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            - id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            parentLink:
              id:
                marketplaceRequestId: marketplaceRequestId
                warehouseRequestId: warehouseRequestId
                id: 1
              type: VIRTUAL_DISTRIBUTION
            counters:
              undefinedCount: 0
              acceptableCount: 0
              actualPalletsCount: 0
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              actualBoxCount: 0
              factCount: 0
              defectCount: 0
              unacceptableCount: 0
            subtype: DEFAULT
            transitLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: SUPPLY
            targetLocation:
              address:
                fullAddress: fullAddress
                gps:
                  latitude: 9.965781217890562
                  longitude: 9.369310271410669
              name: name
              requestedDate: 2000-01-23T04:56:07.000+00:00
              serviceId: 7
              type: FULFILLMENT
            status: CREATED
            updatedAt: 2000-01-23T04:56:07.000+00:00
        status: OK
      type: object
    GetSupplyRequestItemsRequest:
      example:
        requestId: 1
      properties:
        requestId:
          description: |
            Идентификатор заявки.

            {% note warning "Используется только в API" %}

            По нему не получится найти заявки в кабинете продавца на Маркете. Для этого используйте `marketplaceRequestId` или `warehouseRequestId`.

            {% endnote %}
          format: int64
          minimum: 1
          type: integer
      required:
      - requestId
      type: object
    GetSupplyRequestItemsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetSupplyRequestItemsDTO'
        type: object
      example:
        result:
          paging:
            nextPageToken: nextPageToken
          items:
          - counters:
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              factCount: 0
              defectCount: 0
            price:
              currencyId: RUR
              value: 2.3021358869347655
            name: name
            offerId: offerId
          - counters:
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              factCount: 0
              defectCount: 0
            price:
              currencyId: RUR
              value: 2.3021358869347655
            name: name
            offerId: offerId
          - counters:
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              factCount: 0
              defectCount: 0
            price:
              currencyId: RUR
              value: 2.3021358869347655
            name: name
            offerId: offerId
          - counters:
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              factCount: 0
              defectCount: 0
            price:
              currencyId: RUR
              value: 2.3021358869347655
            name: name
            offerId: offerId
          - counters:
              planCount: 0
              surplusCount: 0
              shortageCount: 0
              factCount: 0
              defectCount: 0
            price:
              currencyId: RUR
              value: 2.3021358869347655
            name: name
            offerId: offerId
        status: OK
      type: object
    GetSupplyRequestDocumentsRequest:
      example:
        requestId: 1
      properties:
        requestId:
          description: |
            Идентификатор заявки.

            {% note warning "Используется только в API" %}

            По нему не получится найти заявки в кабинете продавца на Маркете. Для этого используйте `marketplaceRequestId` или `warehouseRequestId`.

            {% endnote %}
          format: int64
          minimum: 1
          type: integer
      required:
      - requestId
      type: object
    GetSupplyRequestDocumentsResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/GetSupplyRequestDocumentsDTO'
        type: object
      example:
        result:
          documents:
          - createdAt: 2000-01-23T04:56:07.000+00:00
            type: SUPPLY
            url: url
          - createdAt: 2000-01-23T04:56:07.000+00:00
            type: SUPPLY
            url: url
        status: OK
      type: object
    GetTokenInfoResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          result:
            $ref: '#/components/schemas/TokenDTO'
        type: object
      description: Ответ на запрос получения информации об авторизационном токене.
      example:
        result:
          apiKey:
            authScopes:
            - ALL_METHODS
            - ALL_METHODS
            name: name
        status: OK
      required:
      - result
      type: object
    ApiResponse:
      description: Стандартная обертка для ответов сервера.
      properties:
        status:
          $ref: '#/components/schemas/ApiResponseStatusType'
      type: object
    GetBusinessSettingsInfoDTO:
      description: Информация о кабинете и его настройках.
      example:
        settings:
          currency: RUR
          onlyDefaultPrice: true
        info:
          name: name
          id: 0
      properties:
        info:
          $ref: '#/components/schemas/BusinessDTO'
        settings:
          $ref: '#/components/schemas/BusinessSettingsDTO'
      type: object
    ApiErrorResponse:
      allOf:
      - $ref: '#/components/schemas/ApiResponse'
      - properties:
          errors:
            description: Список ошибок.
            items:
              $ref: '#/components/schemas/ApiErrorDTO'
            minItems: 1
            nullable: true
            type: array
        type: object
      description: Стандартная обертка для ошибок сервера.
      type: object
    CampaignDTO:
      description: Информация о магазине.
      example:
        clientId: 6
        business:
          name: name
          id: 0
        domain: domain
        placementType: FBS
        id: 0
      properties:
        domain:
          description: URL магазина.
          type: string
        id:
          description: |
            Идентификатор кампании.

            Его также можно найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        clientId:
          description: Идентификатор плательщика в Яндекс Балансе.
          format: int64
          type: integer
        business:
          $ref: '#/components/schemas/BusinessDTO'
        placementType:
          $ref: '#/components/schemas/PlacementType'
      type: object
    FlippingPagerDTO:
      description: Модель для пагинации.
      example:
        total: 1
        pagesCount: 7
        pageSize: 9
        from: 5
        to: 5
        currentPage: 2
      properties:
        total:
          description: Сколько всего найдено элементов.
          format: int32
          type: integer
        from:
          description: Начальный номер найденного элемента на странице.
          format: int32
          type: integer
        to:
          description: Конечный номер найденного элемента на странице.
          format: int32
          type: integer
        currentPage:
          description: Текущая страница.
          format: int32
          type: integer
        pagesCount:
          description: Общее количество страниц.
          format: int32
          type: integer
        pageSize:
          description: Размер страницы.
          format: int32
          type: integer
      type: object
    CampaignSettingsDTO:
      description: Настройки магазина.
      example:
        showInPremium: true
        showInContext: true
        localRegion:
          delivery:
            schedule:
              customWorkingDays:
              - 23-09-2022
              - 23-09-2022
              period:
                fromDate: 23-09-2022
                toDate: 23-09-2022
              customHolidays:
              - 23-09-2022
              - 23-09-2022
              weeklyHolidays:
              - 1
              - 1
              availableOnHolidays: true
              totalHolidays:
              - 23-09-2022
              - 23-09-2022
          name: name
          id: 6
          type: OTHER
          deliveryOptionsSource: WEB
        countryRegion: 0
        shopName: shopName
        useOpenStat: true
      properties:
        countryRegion:
          description: "Идентификатор региона, в котором находится магазин."
          format: int64
          type: integer
        shopName:
          description: |
            Наименование магазина на Яндекс Маркете.
            Если наименование отсутствует, значение параметра выводится — `null`.
          type: string
        showInContext:
          description: |
            Признак размещения магазина на сайтах партнеров Яндекс Дистрибуции.
            Возможные значения:
            * `false` — магазин не размещен на сайтах партнеров Яндекс Дистрибуции.
            * `true` — магазин размещен на сайтах партнеров Яндекс Дистрибуции.
          type: boolean
        showInPremium:
          description: |
            Признак показа предложений магазина в блоке над результатами поиска (cпецразмещение).
            Возможные значения:
            * `false` — предложения не показываются в блоке cпецразмещения.
            * `true` — предложения показываются в блоке cпецразмещения.
          type: boolean
        useOpenStat:
          description: |
            Признак использования внешней интернет-статистики.
            Возможные значения:
            * `false` — внешняя интернет-статистика не используется.
            * `true` — внешняя интернет-статистика используется.
          type: boolean
        localRegion:
          $ref: '#/components/schemas/CampaignSettingsLocalRegionDTO'
      type: object
    RegionDTO:
      description: Регион доставки.
      example:
        parent: null
        children:
        - null
        - null
        name: name
        id: 0
        type: OTHER
      properties:
        id:
          description: Идентификатор региона.
          format: int64
          type: integer
        name:
          description: Название региона.
          type: string
        type:
          $ref: '#/components/schemas/RegionType'
        parent:
          $ref: '#/components/schemas/RegionDTO'
        children:
          description: Дочерние регионы.
          items:
            $ref: '#/components/schemas/RegionDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - id
      - name
      - type
      type: object
    OrderDTO:
      description: Заказ.
      example:
        delivery:
          dispatchType: UNKNOWN
          address:
            country: country
            city: city
            postcode: postcode
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            house: house
            subway: subway
            phone: phone
            street: street
            district: district
            recipient: recipient
            entryphone: entryphone
            block: block
            entrance: entrance
            floor: floor
            apartment: apartment
          liftType: NOT_NEEDED
          deliveryServiceId: 6
          vat: null
          estimated: true
          dates:
            fromDate: 23-09-2022
            toDate: 23-09-2022
            fromTime: fromTime
            toTime: toTime
            realDeliveryDate: 23-09-2022
          type: DELIVERY
          serviceName: serviceName
          shipments:
          - boxes:
            - fulfilmentId: fulfilmentId
              id: 3
            - fulfilmentId: fulfilmentId
              id: 3
            id: 6
            shipmentDate: 23-09-2022
            shipmentTime: shipmentTime
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
          - boxes:
            - fulfilmentId: fulfilmentId
              id: 3
            - fulfilmentId: fulfilmentId
              id: 3
            id: 6
            shipmentDate: 23-09-2022
            shipmentTime: shipmentTime
            tracks:
            - trackCode: trackCode
              deliveryServiceId: 9
            - trackCode: trackCode
              deliveryServiceId: 9
          tracks:
          - trackCode: trackCode
            deliveryServiceId: 9
          - trackCode: trackCode
            deliveryServiceId: 9
          courier:
            vehicleDescription: vehicleDescription
            phone: phone
            phoneExtension: phoneExtension
            fullName: fullName
            vehicleNumber: vehicleNumber
          price: 5.025004791520295
          outletStorageLimitDate: 23-09-2022
          eacType: MERCHANT_TO_COURIER
          liftPrice: 8.762042012749001
          eacCode: eacCode
          id: id
          region:
            parent: null
            children:
            - null
            - null
            name: name
            id: 0
            type: OTHER
          deliveryPartnerType: SHOP
          outletCode: outletCode
        notes: notes
        substatus: RESERVATION_EXPIRED
        deliveryTotal: 1.4658129805029452
        buyerItemsTotalBeforeDiscount: 2.3021358869347655
        creationDate: 23-09-2022 09:12:41
        buyerItemsTotal: 5.962133916683182
        paymentType: PREPAID
        buyer:
          lastName: lastName
          firstName: firstName
          middleName: middleName
          id: id
          type: PERSON
        expiryDate: 23-09-2022 09:12:41
        buyerTotalBeforeDiscount: 7.061401241503109
        itemsTotal: 6.027456183070403
        buyerTotal: 5.637376656633329
        subsidies:
        - amount: 4.965218492984954
          type: YANDEX_CASHBACK
        - amount: 4.965218492984954
          type: YANDEX_CASHBACK
        paymentMethod: CASH_ON_DELIVERY
        currency: RUR
        fake: true
        id: 0
        taxSystem: OSN
        cancelRequested: true
        items:
        - offerName: offerName
          subsidy: 1.0246457001441578
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          priceBeforeDiscount: 7.386281948385884
          count: 1
          vat: NO_VAT
          requiredInstanceTypes:
          - CIS
          - CIS
          tags:
          - ULTIMA
          - ULTIMA
          buyerPriceBeforeDiscount: 4.145608029883936
          shopSku: shopSku
          price: 3.616076749251911
          partnerWarehouseId: partnerWarehouseId
          subsidies:
          - amount: 1.1730742509559433
            type: YANDEX_CASHBACK
          - amount: 1.1730742509559433
            type: YANDEX_CASHBACK
          offerId: offerId
          buyerPrice: 2.027123023002322
          details:
          - updateDate: 23-09-2022
            itemStatus: REJECTED
            itemCount: 7
          - updateDate: 23-09-2022
            itemStatus: REJECTED
            itemCount: 7
          id: 9
          promos:
          - subsidy: 6.84685269835264
            shopPromoId: shopPromoId
            discount: 1.4894159098541704
            marketPromoId: marketPromoId
            type: DIRECT_DISCOUNT
          - subsidy: 6.84685269835264
            shopPromoId: shopPromoId
            discount: 1.4894159098541704
            marketPromoId: marketPromoId
            type: DIRECT_DISCOUNT
        - offerName: offerName
          subsidy: 1.0246457001441578
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          priceBeforeDiscount: 7.386281948385884
          count: 1
          vat: NO_VAT
          requiredInstanceTypes:
          - CIS
          - CIS
          tags:
          - ULTIMA
          - ULTIMA
          buyerPriceBeforeDiscount: 4.145608029883936
          shopSku: shopSku
          price: 3.616076749251911
          partnerWarehouseId: partnerWarehouseId
          subsidies:
          - amount: 1.1730742509559433
            type: YANDEX_CASHBACK
          - amount: 1.1730742509559433
            type: YANDEX_CASHBACK
          offerId: offerId
          buyerPrice: 2.027123023002322
          details:
          - updateDate: 23-09-2022
            itemStatus: REJECTED
            itemCount: 7
          - updateDate: 23-09-2022
            itemStatus: REJECTED
            itemCount: 7
          id: 9
          promos:
          - subsidy: 6.84685269835264
            shopPromoId: shopPromoId
            discount: 1.4894159098541704
            marketPromoId: marketPromoId
            type: DIRECT_DISCOUNT
          - subsidy: 6.84685269835264
            shopPromoId: shopPromoId
            discount: 1.4894159098541704
            marketPromoId: marketPromoId
            type: DIRECT_DISCOUNT
        status: PLACING
        updatedAt: 23-09-2022 09:12:41
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        creationDate:
          example: 23-09-2022 09:12:41
          format: date-dd-MM-yyyy-HH-mm-ss
          type: string
        updatedAt:
          example: 23-09-2022 09:12:41
          format: date-dd-MM-yyyy-HH-mm-ss
          type: string
        currency:
          $ref: '#/components/schemas/CurrencyType'
        itemsTotal:
          description: |
            Платеж покупателя.
          format: decimal
          type: number
        deliveryTotal:
          description: |
            Стоимость доставки.
          format: decimal
          type: number
        buyerItemsTotal:
          deprecated: true
          description: Стоимость всех товаров в заказе в валюте покупателя после применения
            скидок и без учета стоимости доставки.
          format: decimal
          type: number
        buyerTotal:
          deprecated: true
          description: Стоимость всех товаров в заказе в валюте покупателя после применения
            скидок и с учетом стоимости доставки.
          format: decimal
          type: number
        buyerItemsTotalBeforeDiscount:
          description: |
            Стоимость всех товаров в заказе в валюте покупателя без учета стоимости доставки и до применения скидок по:

            * акциям;
            * купонам;
            * промокодам.
          format: decimal
          type: number
        buyerTotalBeforeDiscount:
          deprecated: true
          description: Стоимость всех товаров в заказе в валюте покупателя до применения
            скидок и с учетом стоимости доставки (`buyerItemsTotalBeforeDiscount`
            + стоимость доставки).
          format: decimal
          type: number
        paymentType:
          $ref: '#/components/schemas/OrderPaymentType'
        paymentMethod:
          $ref: '#/components/schemas/OrderPaymentMethodType'
        fake:
          description: |
            Тип заказа:

            * `false` — настоящий заказ покупателя.

            * `true` — [тестовый](../../concepts/sandbox.md) заказ Маркета.
          type: boolean
        items:
          description: Список товаров в заказе.
          items:
            $ref: '#/components/schemas/OrderItemDTO'
          type: array
        subsidies:
          description: Список субсидий по типам.
          items:
            $ref: '#/components/schemas/OrderSubsidyDTO'
          minItems: 1
          nullable: true
          type: array
        delivery:
          $ref: '#/components/schemas/OrderDeliveryDTO'
        buyer:
          $ref: '#/components/schemas/OrderBuyerDTO'
        notes:
          description: Комментарий к заказу.
          type: string
        taxSystem:
          $ref: '#/components/schemas/OrderTaxSystemType'
        cancelRequested:
          description: |
            **Только для модели DBS**

            Запрошена ли отмена.
          type: boolean
        expiryDate:
          example: 23-09-2022 09:12:41
          format: date-dd-MM-yyyy-HH-mm-ss
          type: string
      required:
      - buyer
      - buyerItemsTotalBeforeDiscount
      - creationDate
      - currency
      - delivery
      - deliveryTotal
      - fake
      - id
      - items
      - itemsTotal
      - paymentMethod
      - paymentType
      - status
      - substatus
      - taxSystem
      type: object
    ForwardScrollingPagerDTO:
      description: |
        Идентификатор следующей страницы.
      example:
        nextPageToken: nextPageToken
      properties:
        nextPageToken:
          description: Идентификатор следующей страницы результатов.
          type: string
      type: object
    OrderItemInstanceModificationDTO:
      description: "Позиция в корзине, требующая маркировки."
      example:
        instances:
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          uin: uin
          cis: cis
        id: 0
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) — параметр `id` в `items`.
          format: int64
          type: integer
        instances:
          description: |
            Список кодов маркировки единиц товара.
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
          type: array
      required:
      - id
      - instances
      type: object
    OrderItemsModificationResultDTO:
      description: |
        Краткие сведения о промаркированных товарах. Параметр возвращается, если ответ `OK`.
      example:
        items:
        - offerName: offerName
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          price: 1.4658129805029452
          vat: NO_VAT
          count: 6
          offerId: offerId
          id: 0
        - offerName: offerName
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            cisFull: cisFull
            uin: uin
            cis: cis
          price: 1.4658129805029452
          vat: NO_VAT
          count: 6
          offerId: offerId
          id: 0
      properties:
        items:
          description: "Список позиций в заказе, подлежащих маркировке."
          items:
            $ref: '#/components/schemas/BriefOrderItemDTO'
          type: array
      required:
      - items
      type: object
    OrderItemModificationDTO:
      description: |
        Список товаров в заказе.

        Если магазин не передал информацию о товаре во входных данных, он будет удален из заказа.

        Обязательный параметр.
      example:
        instances:
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          uin: uin
          cis: cis
        count: 0
        id: 0
      properties:
        id:
          description: |
            Идентификатор товара в рамках заказа.

            Получить идентификатор можно с помощью ресурсов [GET campaigns/{campaignId}/orders](../../reference/orders/getOrders.md) или [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md).

            Обязательный параметр.
          format: int64
          type: integer
        count:
          description: Новое количество товара.
          format: int32
          minimum: 0
          type: integer
        instances:
          description: |
            Информация о маркировке единиц товара.

            Передавайте в запросе все единицы товара, который подлежит маркировке.

            Обязательный параметр, если в заказе от бизнеса есть товары, подлежащие маркировке в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - count
      - id
      type: object
    OrderItemsModificationRequestReasonType:
      description: |
        Причина, почему обновился состав заказа:

        * `PARTNER_REQUESTED_REMOVE` — магазин удалил товар.
        * `USER_REQUESTED_REMOVE` — покупатель попросил удалить товар.
      enum:
      - PARTNER_REQUESTED_REMOVE
      - USER_REQUESTED_REMOVE
      type: string
    OrderStatusChangeDTO:
      description: Заказ.
      example:
        delivery:
          dates:
            realDeliveryDate: 2000-01-23
        substatus: RESERVATION_EXPIRED
        status: PLACING
      properties:
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        delivery:
          $ref: '#/components/schemas/OrderStatusChangeDeliveryDTO'
      required:
      - status
      type: object
    OrderStateDTO:
      description: Информация по заказу.
      example:
        substatus: RESERVATION_EXPIRED
        id: 0
        status: PLACING
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
      required:
      - id
      - status
      type: object
    UpdateOrderStatusesDTO:
      description: "Список заказов, статус которых обновился."
      example:
        orders:
        - substatus: RESERVATION_EXPIRED
          updateStatus: OK
          id: 0
          status: PLACING
          errorDetails: errorDetails
        - substatus: RESERVATION_EXPIRED
          updateStatus: OK
          id: 0
          status: PLACING
          errorDetails: errorDetails
      properties:
        orders:
          description: Список с обновленными заказами.
          items:
            $ref: '#/components/schemas/UpdateOrderStatusDTO'
          type: array
      required:
      - orders
      type: object
    ParcelRequestDTO:
      description: Информация о грузовых местах в заказе.
      properties:
        boxes:
          description: Список грузовых мест. По его длине Маркет определяет количество
            мест.
          items:
            $ref: '#/components/schemas/ParcelBoxRequestDTO'
          minItems: 1
          type: array
      required:
      - boxes
      type: object
    ShipmentBoxesDTO:
      description: |
        В ответе Маркет возвращает переданный вами список грузовых мест. Не обращайте на это поле внимания.
      example:
        boxes:
        - fulfilmentId: fulfilmentId
          id: 0
        - fulfilmentId: fulfilmentId
          id: 0
      properties:
        boxes:
          description: |
            Список грузовых мест. По его длине Маркет определил количество мест.
          items:
            $ref: '#/components/schemas/ParcelBoxDTO'
          type: array
      required:
      - boxes
      type: object
    OrderCancellationReasonType:
      description: |
        Варианты причин, по которым заказ не может быть отменен.

        * `ORDER_DELIVERED` — заказ уже доставлен.
        * `ORDER_IN_DELIVERY` — заказ уже у курьера.
      enum:
      - ORDER_DELIVERED
      - ORDER_IN_DELIVERY
      type: string
    OrderDigitalItemDTO:
      description: Цифровой товар.
      example:
        codes:
        - codes
        - codes
        - codes
        - codes
        - codes
        activate_till: 2000-01-23
        code: code
        slip: slip
        id: 0
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) — параметр `id` в `items`.
          format: int64
          type: integer
        code:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `codes`" %}

            Совместное использование обоих параметров приведет к ошибке.

            {% endnote %}

            Сам ключ.
          type: string
        codes:
          description: "Ключи, относящиеся к товару."
          items:
            type: string
          maxItems: 5000
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
        slip:
          description: Инструкция по активации.
          maxLength: 10000
          type: string
        activate_till:
          description: |
            Дата, до которой нужно активировать ключи. Если ключи действуют бессрочно, укажите любую дату в отдаленном будущем.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
      required:
      - activate_till
      - id
      - slip
      type: object
    OrderBoxLayoutDTO:
      description: Информация о коробке.
      example:
        items:
        - partialCount:
            current: 1
            total: 2
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          id: 0
          fullCount: 1
        - partialCount:
            current: 1
            total: 2
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          id: 0
          fullCount: 1
      properties:
        items:
          description: |
            Список товаров в коробке.

            Если в коробке едет часть большого товара, в списке может быть только один пункт.
          items:
            $ref: '#/components/schemas/OrderBoxLayoutItemDTO'
          minItems: 1
          type: array
      required:
      - items
      type: object
    OrderBoxesLayoutDTO:
      description: Распределение товаров по коробкам.
      example:
        boxes:
        - items:
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
          boxId: 5
        - items:
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
          - partialCount:
              current: 1
              total: 2
            instances:
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            - rnpt: rnpt
              gtd: gtd
              countryCode: RU
              uin: uin
              cis: cis
            id: 0
            fullCount: 1
          boxId: 5
      properties:
        boxes:
          description: Список коробок.
          items:
            $ref: '#/components/schemas/EnrichedOrderBoxLayoutDTO'
          type: array
      required:
      - boxes
      type: object
    GetOrderIdentifiersStatusDTO:
      description: Список идентификаторов товаров и статусы проверки УИНов.
      example:
        items:
        - id: 0
          uin:
          - value: value
            status: OK
          - value: value
            status: OK
        - id: 0
          uin:
          - value: value
            status: OK
          - value: value
            status: OK
      properties:
        items:
          description: Список идентификаторов товаров и статусы проверки УИНов.
          items:
            $ref: '#/components/schemas/OrderItemValidationStatusDTO'
          type: array
      required:
      - items
      type: object
    OrderDeliveryDateDTO:
      description: Информация о новой дате доставки заказа.
      example:
        toDate: 2000-01-23
      properties:
        toDate:
          description: |
            Новая дата доставки заказа.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
      required:
      - toDate
      type: object
    OrderDeliveryDateReasonType:
      description: |
        Причина переноса доставки заказа. Возможные причины изменения даты:
          - ```USER_MOVED_DELIVERY_DATES``` — покупатель попросил изменить дату или вы договорились привезти ему заказ раньше изначальной даты. Кроме этого указывается для подтверждения даты доставки товаров на заказ с долгой (31-60 дней) доставкой.
          - ```PARTNER_MOVED_DELIVERY_DATES``` — магазин не может доставить заказ в срок.
      enum:
      - USER_MOVED_DELIVERY_DATES
      - PARTNER_MOVED_DELIVERY_DATES
      type: string
    OrderBuyerInfoDTO:
      allOf:
      - $ref: '#/components/schemas/OrderBuyerBasicInfoDTO'
      - properties:
          phone:
            description: |
              Подменный номер телефона покупателя. Подробнее о таких номерах читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/orders/dbs/call#fake-number).

              Формат номера: `+<код_страны><код_региона><номер_телефона>`.
            type: string
          trusted:
            description: |
              Проверенный покупатель.

              Если параметр `trusted` вернулся со значением `true`, Маркет уже проверил покупателя — не звоните ему. Обработайте заказ как обычно и передайте его курьеру или отвезите в ПВЗ.

              При необходимости свяжитесь с покупателем в чате. [Как это сделать](../../step-by-step/chats.md)

              Подробнее о звонках покупателю читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/ru/orders/dbs/call).
            type: boolean
        type: object
      description: Информация о покупателе и его номере телефона.
      example:
        lastName: lastName
        firstName: firstName
        phone: phone
        trusted: true
        middleName: middleName
        id: id
        type: PERSON
      type: object
    EacVerificationResultDTO:
      description: Результат выполнения запроса.
      example:
        verificationResult: ACCEPTED
        attemptsLeft: 0
      properties:
        verificationResult:
          $ref: '#/components/schemas/EacVerificationStatusType'
        attemptsLeft:
          description: |
            Количество оставшихся попыток проверки кода.

            Возвращается, если магазин отправил некорректный код.

            Когда все попытки будут исчерпаны, код обновится.
          format: int32
          type: integer
      type: object
    OrderLabelDTO:
      description: Данные для печати ярлыка.
      example:
        parcelBoxLabels:
        - supplierName: supplierName
          deliveryServiceId: deliveryServiceId
          orderId: 1
          fulfilmentId: fulfilmentId
          orderNum: orderNum
          weight: weight
          url: url
          deliveryServiceName: deliveryServiceName
          deliveryAddress: deliveryAddress
          recipientName: recipientName
          place: place
          shipmentDate: shipmentDate
          boxId: 5
        - supplierName: supplierName
          deliveryServiceId: deliveryServiceId
          orderId: 1
          fulfilmentId: fulfilmentId
          orderNum: orderNum
          weight: weight
          url: url
          deliveryServiceName: deliveryServiceName
          deliveryAddress: deliveryAddress
          recipientName: recipientName
          place: place
          shipmentDate: shipmentDate
          boxId: 5
        orderId: 0
        placesNumber: 6
        url: url
      properties:
        orderId:
          description: Идентификатор заказа.
          format: int64
          type: integer
        placesNumber:
          description: Количество коробок в заказе.
          format: int32
          type: integer
        url:
          deprecated: true
          description: |
            URL файла с ярлыками‑наклейками на все коробки в заказе.

            Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).
          type: string
        parcelBoxLabels:
          description: Информация на ярлыке.
          items:
            $ref: '#/components/schemas/ParcelBoxLabelDTO'
          type: array
      required:
      - orderId
      - parcelBoxLabels
      - placesNumber
      - url
      type: object
    OrderBusinessBuyerDTO:
      description: |
        Информация о покупателе.
      example:
        organizationName: organizationName
        organizationJurAddress: organizationJurAddress
        inn: inn
        kpp: kpp
      properties:
        inn:
          description: ИНН.
          type: string
        kpp:
          description: КПП.
          type: string
        organizationName:
          description: Наименование юридического лица.
          type: string
        organizationJurAddress:
          description: Юридический адрес.
          type: string
      type: object
    OrderBusinessDocumentsDTO:
      description: |
        Информация о документах.
      example:
        sf:
          date: 2000-01-23
          number: number
          status: READY
        torgTwelve:
          date: 2000-01-23
          number: number
          status: READY
        upd:
          date: 2000-01-23
          number: number
          status: READY
        ukd:
          date: 2000-01-23
          number: number
          status: READY
        ksf:
          date: 2000-01-23
          number: number
          status: READY
      properties:
        upd:
          $ref: '#/components/schemas/DocumentDTO'
        ukd:
          $ref: '#/components/schemas/DocumentDTO'
        torgTwelve:
          $ref: '#/components/schemas/DocumentDTO'
        sf:
          $ref: '#/components/schemas/DocumentDTO'
        ksf:
          $ref: '#/components/schemas/DocumentDTO'
      type: object
    PagedReturnsDTO:
      description: Невыкупы или возвраты.
      example:
        paging:
          nextPageToken: nextPageToken
        returns:
        - updateDate: 2020-02-02T14:30:30+03:00
          amount:
            currencyId: RUR
            value: 2.3021358869347655
          orderId: 6
          shipmentRecipientType: SHOP
          refundStatus: STARTED_BY_USER
          creationDate: 2020-02-02T14:30:30+03:00
          fastReturn: true
          logisticPickupPoint:
            logisticPartnerId: 5
            address:
              country: Россия
              city: Москва
              street: Стрелецкая улица
              postcode: "123518"
              house: 9к2
            instruction: instruction
            name: name
            id: 1
            type: WAREHOUSE
          id: 0
          items:
          - shopSku: shopSku
            instances:
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            marketSku: 1
            count: 9
            decisions:
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            tracks:
            - trackCode: trackCode
            - trackCode: trackCode
          - shopSku: shopSku
            instances:
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            marketSku: 1
            count: 9
            decisions:
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            tracks:
            - trackCode: trackCode
            - trackCode: trackCode
          returnType: UNREDEEMED
          shipmentStatus: CREATED
          refundAmount: 5
        - updateDate: 2020-02-02T14:30:30+03:00
          amount:
            currencyId: RUR
            value: 2.3021358869347655
          orderId: 6
          shipmentRecipientType: SHOP
          refundStatus: STARTED_BY_USER
          creationDate: 2020-02-02T14:30:30+03:00
          fastReturn: true
          logisticPickupPoint:
            logisticPartnerId: 5
            address:
              country: Россия
              city: Москва
              street: Стрелецкая улица
              postcode: "123518"
              house: 9к2
            instruction: instruction
            name: name
            id: 1
            type: WAREHOUSE
          id: 0
          items:
          - shopSku: shopSku
            instances:
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            marketSku: 1
            count: 9
            decisions:
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            tracks:
            - trackCode: trackCode
            - trackCode: trackCode
          - shopSku: shopSku
            instances:
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            - stockType: FIT
              imei: imei
              cis: cis
              status: CREATED
            marketSku: 1
            count: 9
            decisions:
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            - amount:
                currencyId: RUR
                value: 2.3021358869347655
              images:
              - images
              - images
              returnItemId: 3
              subreasonType: USER_DID_NOT_LIKE
              count: 2
              partnerCompensationAmount:
                currencyId: RUR
                value: 2.3021358869347655
              comment: comment
              decisionType: REFUND_MONEY
              reasonType: BAD_QUALITY
              partnerCompensation: 7
              refundAmount: 4
            tracks:
            - trackCode: trackCode
            - trackCode: trackCode
          returnType: UNREDEEMED
          shipmentStatus: CREATED
          refundAmount: 5
      properties:
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
        returns:
          description: Список невыкупов или возвратов.
          items:
            $ref: '#/components/schemas/ReturnDTO'
          type: array
      required:
      - returns
      type: object
    ReturnDTO:
      description: |
        Невыкуп или возврат в заказе.

        Параметров `logisticPickupPoint`, `shipmentRecipientType` и `shipmentStatus` может не быть в случае возврата:
          * С опцией **Быстрый возврат денег за дешевый брак**, когда товар остается у покупателя (`fastReturn=true`).
          * По заказу от бизнеса, если:
            * статус возврата `STARTED_BY_USER` или `WAITING_FOR_DECISION`;
            * возврат отменен до передачи товара.

        Статус возврата денег `refundStatus` актуален только для `returnType=RETURN`.
      example:
        updateDate: 2020-02-02T14:30:30+03:00
        amount:
          currencyId: RUR
          value: 2.3021358869347655
        orderId: 6
        shipmentRecipientType: SHOP
        refundStatus: STARTED_BY_USER
        creationDate: 2020-02-02T14:30:30+03:00
        fastReturn: true
        logisticPickupPoint:
          logisticPartnerId: 5
          address:
            country: Россия
            city: Москва
            street: Стрелецкая улица
            postcode: "123518"
            house: 9к2
          instruction: instruction
          name: name
          id: 1
          type: WAREHOUSE
        id: 0
        items:
        - shopSku: shopSku
          instances:
          - stockType: FIT
            imei: imei
            cis: cis
            status: CREATED
          - stockType: FIT
            imei: imei
            cis: cis
            status: CREATED
          marketSku: 1
          count: 9
          decisions:
          - amount:
              currencyId: RUR
              value: 2.3021358869347655
            images:
            - images
            - images
            returnItemId: 3
            subreasonType: USER_DID_NOT_LIKE
            count: 2
            partnerCompensationAmount:
              currencyId: RUR
              value: 2.3021358869347655
            comment: comment
            decisionType: REFUND_MONEY
            reasonType: BAD_QUALITY
            partnerCompensation: 7
            refundAmount: 4
          - amount:
              currencyId: RUR
              value: 2.3021358869347655
            images:
            - images
            - images
            returnItemId: 3
            subreasonType: USER_DID_NOT_LIKE
            count: 2
            partnerCompensationAmount:
              currencyId: RUR
              value: 2.3021358869347655
            comment: comment
            decisionType: REFUND_MONEY
            reasonType: BAD_QUALITY
            partnerCompensation: 7
            refundAmount: 4
          tracks:
          - trackCode: trackCode
          - trackCode: trackCode
        - shopSku: shopSku
          instances:
          - stockType: FIT
            imei: imei
            cis: cis
            status: CREATED
          - stockType: FIT
            imei: imei
            cis: cis
            status: CREATED
          marketSku: 1
          count: 9
          decisions:
          - amount:
              currencyId: RUR
              value: 2.3021358869347655
            images:
            - images
            - images
            returnItemId: 3
            subreasonType: USER_DID_NOT_LIKE
            count: 2
            partnerCompensationAmount:
              currencyId: RUR
              value: 2.3021358869347655
            comment: comment
            decisionType: REFUND_MONEY
            reasonType: BAD_QUALITY
            partnerCompensation: 7
            refundAmount: 4
          - amount:
              currencyId: RUR
              value: 2.3021358869347655
            images:
            - images
            - images
            returnItemId: 3
            subreasonType: USER_DID_NOT_LIKE
            count: 2
            partnerCompensationAmount:
              currencyId: RUR
              value: 2.3021358869347655
            comment: comment
            decisionType: REFUND_MONEY
            reasonType: BAD_QUALITY
            partnerCompensation: 7
            refundAmount: 4
          tracks:
          - trackCode: trackCode
          - trackCode: trackCode
        returnType: UNREDEEMED
        shipmentStatus: CREATED
        refundAmount: 5
      properties:
        id:
          description: Идентификатор невыкупа или возврата.
          format: int64
          type: integer
        orderId:
          description: Номер заказа.
          format: int64
          type: integer
        creationDate:
          description: |
            Дата создания невыкупа или возврата клиентом.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2020-02-02T14:30:30+03:00
          format: date-time
          type: string
        updateDate:
          description: |
            Дата обновления невыкупа или возврата.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2020-02-02T14:30:30+03:00
          format: date-time
          type: string
        refundStatus:
          $ref: '#/components/schemas/RefundStatusType'
        logisticPickupPoint:
          $ref: '#/components/schemas/LogisticPickupPointDTO'
        shipmentRecipientType:
          $ref: '#/components/schemas/RecipientType'
        shipmentStatus:
          $ref: '#/components/schemas/ReturnShipmentStatusType'
        refundAmount:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `amount`." %}

             

            {% endnote %}

            Сумма возврата в копейках.
          format: int64
          type: integer
        amount:
          $ref: '#/components/schemas/CurrencyValueDTO'
        items:
          description: Список товаров в невыкупе или возврате.
          items:
            $ref: '#/components/schemas/ReturnItemDTO'
          type: array
        returnType:
          $ref: '#/components/schemas/ReturnType'
        fastReturn:
          description: |
            Используется ли опция **Быстрый возврат денег за дешевый брак**.

            Актуально только для `returnType=RETURN`.
          type: boolean
      required:
      - id
      - items
      - orderId
      - returnType
      type: object
    ReturnItemId:
      description: Идентификатор товара в возврате.
      format: int64
      type: integer
    ReturnRequestDecisionType:
      description: |
        Решение по товару в возврате:

        * `REFUND_MONEY` — вернуть деньги за товар.
        * `REFUND_MONEY_INCLUDING_SHIPMENT` — вернуть деньги за товар и обратную пересылку.
        * `REPAIR` — магазин устранит недостатки товара.
        * `REPLACE` — магазин заменит товар.
        * `SEND_TO_EXAMINATION` — магазин отправит товар на экспертизу.
        * `DECLINE_REFUND` — не возвращать деньги.
        * `OTHER_DECISION` — другое решение.
      enum:
      - REFUND_MONEY
      - REFUND_MONEY_INCLUDING_SHIPMENT
      - REPAIR
      - REPLACE
      - SEND_TO_EXAMINATION
      - DECLINE_REFUND
      - OTHER_DECISION
      type: string
    ReturnItemDecisionComment:
      description: |
        Комментарий к решению. Укажите:

        * для `REFUND_MONEY_INCLUDING_SHIPMENT`— стоимость обратной пересылки.

        * для `REPAIR` — когда вы устраните недостатки товара.

        * для `DECLINE_REFUND` — причину отказа.

        * для `OTHER_DECISION` — какое решение вы предлагаете.
      type: string
    CountryDTO:
      description: Страна и ее код в формате ISO 3166-1 alpha-2.
      example:
        countryCode: RU
        region:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: OTHER
      properties:
        region:
          $ref: '#/components/schemas/RegionDTO'
        countryCode:
          description: |
            Страна производства в формате ISO 3166-1 alpha-2. [Как получить](../../reference/regions/getRegionsCodes.md)
          example: RU
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: string
      required:
      - countryCode
      - region
      type: object
    ShipmentDTO:
      allOf:
      - $ref: '#/components/schemas/BaseShipmentDTO'
      - $ref: '#/components/schemas/ExtensionShipmentDTO'
      description: Информация об отгрузке.
      example:
        deliveryService:
          name: name
          id: 1
        availableActions:
        - CONFIRM
        - CONFIRM
        draftCount: 0
        plannedCount: 0
        signature:
          signed: true
        currentStatus:
          description: description
          updateTime: 2017-11-21T00:00:00+03:00
          status: OUTBOUND_CREATED
        planIntervalTo: 2017-11-21T00:00:00+03:00
        externalId: externalId
        warehouse:
          address: address
          name: name
          id: 1
        shipmentType: IMPORT
        planIntervalFrom: 2017-11-21T00:00:00+03:00
        warehouseTo:
          address: address
          name: name
          id: 1
        factCount: 0
        palletsCount:
          fact: 0
          planned: 0
        id: 1
        orderIds:
        - 1
        - 1
      type: object
    OrdersShipmentInfoDTO:
      description: Годные/негодные ярлыки по заказам в отгрузке.
      example:
        orderIdsWithLabels:
        - 0
        - 0
        orderIdsWithoutLabels:
        - 6
        - 6
      properties:
        orderIdsWithLabels:
          description: "Идентификаторы заказов в отгрузке, для которых можно распе\
            чатать ярлыки."
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
        orderIdsWithoutLabels:
          description: "Идентификаторы заказов в отгрузке, для которых нельзя расп\
            ечатать ярлыки."
          items:
            format: int64
            type: integer
          type: array
          uniqueItems: true
      required:
      - orderIdsWithLabels
      - orderIdsWithoutLabels
      type: object
    ShipmentStatusType:
      description: |
        Статус отгрузки:

        * `OUTBOUND_CREATED` — формируется.
        * `OUTBOUND_READY_FOR_CONFIRMATION` — можно обрабатывать.
        * `OUTBOUND_CONFIRMED` — подтверждена и готова к отправке.
        * `OUTBOUND_SIGNED` — по ней подписан электронный акт приема-передачи.
        * `ACCEPTED` — принята в сортировочном центре или пункте приема.
        * `ACCEPTED_WITH_DISCREPANCIES` — принята с расхождениями.
        * `FINISHED` — завершена.
        * `ERROR` — отменена из-за ошибки.
      enum:
      - OUTBOUND_CREATED
      - OUTBOUND_READY_FOR_CONFIRMATION
      - OUTBOUND_CONFIRMED
      - OUTBOUND_SIGNED
      - FINISHED
      - ACCEPTED
      - ACCEPTED_WITH_DISCREPANCIES
      - ERROR
      type: string
    SearchShipmentsResponseDTO:
      description: Информация об отгрузках.
      example:
        paging:
          nextPageToken: nextPageToken
        shipments:
        - deliveryService:
            name: name
            id: 1
          draftCount: 0
          plannedCount: 0
          signature:
            signed: true
          planIntervalTo: 2017-11-21T00:00:00+03:00
          externalId: externalId
          warehouse:
            address: address
            name: name
            id: 1
          shipmentType: IMPORT
          planIntervalFrom: 2017-11-21T00:00:00+03:00
          statusDescription: statusDescription
          warehouseTo:
            address: address
            name: name
            id: 1
          factCount: 0
          palletsCount:
            fact: 0
            planned: 0
          id: 1
          orderIds:
          - 1
          - 1
          statusUpdateTime: 2017-11-21T00:00:00+03:00
          status: OUTBOUND_CREATED
        - deliveryService:
            name: name
            id: 1
          draftCount: 0
          plannedCount: 0
          signature:
            signed: true
          planIntervalTo: 2017-11-21T00:00:00+03:00
          externalId: externalId
          warehouse:
            address: address
            name: name
            id: 1
          shipmentType: IMPORT
          planIntervalFrom: 2017-11-21T00:00:00+03:00
          statusDescription: statusDescription
          warehouseTo:
            address: address
            name: name
            id: 1
          factCount: 0
          palletsCount:
            fact: 0
            planned: 0
          id: 1
          orderIds:
          - 1
          - 1
          statusUpdateTime: 2017-11-21T00:00:00+03:00
          status: OUTBOUND_CREATED
      properties:
        shipments:
          description: Список с информацией об отгрузках.
          items:
            $ref: '#/components/schemas/ShipmentInfoDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - shipments
      type: object
    DeleteOffersDTO:
      description: "Список товаров, которые не удалось удалить, потому что они хра\
        нятся на складе Маркета."
      example:
        notDeletedOfferIds:
        - null
        - null
      properties:
        notDeletedOfferIds:
          description: "Список SKU товаров, которые не удалось удалить."
          items:
            $ref: '#/components/schemas/ShopSku'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    OfferCardStatusType:
      description: |
        Статус карточки товара:

        * `HAS_CARD_CAN_NOT_UPDATE` — Карточка Маркета.
        * `HAS_CARD_CAN_UPDATE` — Можно дополнить.
        * `HAS_CARD_CAN_UPDATE_ERRORS` — Изменения не приняты.
        * `HAS_CARD_CAN_UPDATE_PROCESSING` — Изменения на проверке.
        * `NO_CARD_NEED_CONTENT` — Создайте карточку.
        * `NO_CARD_MARKET_WILL_CREATE` — Создаст Маркет.
        * `NO_CARD_ERRORS` — Не создана из-за ошибки.
        * `NO_CARD_PROCESSING` — Проверяем данные.
        * `NO_CARD_ADD_TO_CAMPAIGN` — Разместите товар в магазине.

        [Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/content/statuses.html)
      enum:
      - HAS_CARD_CAN_NOT_UPDATE
      - HAS_CARD_CAN_UPDATE
      - HAS_CARD_CAN_UPDATE_ERRORS
      - HAS_CARD_CAN_UPDATE_PROCESSING
      - NO_CARD_NEED_CONTENT
      - NO_CARD_MARKET_WILL_CREATE
      - NO_CARD_ERRORS
      - NO_CARD_PROCESSING
      - NO_CARD_ADD_TO_CAMPAIGN
      type: string
    GetOfferMappingsResultDTO:
      description: Информация о товарах.
      example:
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
        offerMappings:
        - offer:
            commodityCodes:
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            downloadable: true
            sellingPrograms:
            - sellingProgram: FBY
              status: FINE
            - sellingProgram: FBY
              status: FINE
            marketCategoryId: 0
            manufacturerCountries:
            - Россия
            - Россия
            description: description
            mediaFiles:
              firstVideoAsCover: true
              videos:
              - uploadState: UPLOADING
                title: title
                url: url
              - uploadState: UPLOADING
                title: title
                url: url
              pictures:
              - uploadState: UPLOADING
                title: title
                url: url
              - uploadState: UPLOADING
                title: title
                url: url
              manuals:
              - uploadState: UPLOADING
                title: title
                url: url
              - uploadState: UPLOADING
                title: title
                url: url
            videos:
            - videos
            - videos
            - videos
            - videos
            - videos
            purchasePrice:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
            type: DEFAULT
            pictures:
            - pictures
            - pictures
            - pictures
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            archived: true
            campaigns:
            - campaignId: 9
              status: PUBLISHED
            - campaignId: 9
              status: PUBLISHED
            vendor: LEVENHUK
            basicPrice:
              discountBase: 0.23021358869347652
              currencyId: RUR
              value: 0.5637376656633328
              updatedAt: 2000-01-23T04:56:07.000+00:00
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            cofinancePrice:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
            cardStatus: HAS_CARD_CAN_NOT_UPDATE
            barcodes:
            - "46012300000000"
            - "46012300000000"
            params:
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            tags:
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            condition:
              reason: reason
              type: PREOWNED
              quality: PERFECT
            certificates:
            - certificates
            - certificates
            - certificates
            - certificates
            - certificates
            boxCount: 2
            additionalExpenses:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            customsCommodityCode: "8517610008"
            adult: true
            age:
              ageUnit: YEAR
              value: 0.5962133916683182
            manuals:
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
          mapping:
            marketSkuName: marketSkuName
            marketCategoryName: marketCategoryName
            marketCategoryId: 4
            marketSku: 1
            marketModelId: 2
            marketModelName: marketModelName
        - offer:
            commodityCodes:
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            - code: code
              type: CUSTOMS_COMMODITY_CODE
            downloadable: true
            sellingPrograms:
            - sellingProgram: FBY
              status: FINE
            - sellingProgram: FBY
              status: FINE
            marketCategoryId: 0
            manufacturerCountries:
            - Россия
            - Россия
            description: description
            mediaFiles:
              firstVideoAsCover: true
              videos:
              - uploadState: UPLOADING
                title: title
                url: url
              - uploadState: UPLOADING
                title: title
                url: url
              pictures:
              - uploadState: UPLOADING
                title: title
                url: url
              - uploadState: UPLOADING
                title: title
                url: url
              manuals:
              - uploadState: UPLOADING
                title: title
                url: url
              - uploadState: UPLOADING
                title: title
                url: url
            videos:
            - videos
            - videos
            - videos
            - videos
            - videos
            purchasePrice:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
            type: DEFAULT
            pictures:
            - pictures
            - pictures
            - pictures
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            archived: true
            campaigns:
            - campaignId: 9
              status: PUBLISHED
            - campaignId: 9
              status: PUBLISHED
            vendor: LEVENHUK
            basicPrice:
              discountBase: 0.23021358869347652
              currencyId: RUR
              value: 0.5637376656633328
              updatedAt: 2000-01-23T04:56:07.000+00:00
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            cofinancePrice:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
            cardStatus: HAS_CARD_CAN_NOT_UPDATE
            barcodes:
            - "46012300000000"
            - "46012300000000"
            params:
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            - name: Wi-Fi
              value: есть
            tags:
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            - до 500 рублей
            condition:
              reason: reason
              type: PREOWNED
              quality: PERFECT
            certificates:
            - certificates
            - certificates
            - certificates
            - certificates
            - certificates
            boxCount: 2
            additionalExpenses:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            customsCommodityCode: "8517610008"
            adult: true
            age:
              ageUnit: YEAR
              value: 0.5962133916683182
            manuals:
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
            - title: title
              url: url
          mapping:
            marketSkuName: marketSkuName
            marketCategoryName: marketCategoryName
            marketCategoryId: 4
            marketSku: 1
            marketModelId: 2
            marketModelName: marketModelName
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerMappings:
          description: Информация о товарах.
          items:
            $ref: '#/components/schemas/GetOfferMappingDTO'
          type: array
      required:
      - offerMappings
      type: object
    UpdateOfferMappingDTO:
      description: Информация о товаре.
      example:
        offer:
          commodityCodes:
          - code: code
            type: CUSTOMS_COMMODITY_CODE
          - code: code
            type: CUSTOMS_COMMODITY_CODE
          downloadable: true
          marketCategoryId: 0
          manufacturerCountries:
          - Россия
          - Россия
          deleteParameters:
          - ADDITIONAL_EXPENSES
          - ADDITIONAL_EXPENSES
          description: description
          videos:
          - videos
          - videos
          - videos
          - videos
          - videos
          purchasePrice:
            currencyId: null
            value: 0.9301444243932576
          type: DEFAULT
          pictures:
          - pictures
          - pictures
          - pictures
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          vendor: LEVENHUK
          basicPrice:
            discountBase: 0.7061401241503109
            currencyId: RUR
            value: 0.23021358869347652
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          cofinancePrice:
            currencyId: null
            value: 0.9301444243932576
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          firstVideoAsCover: true
          barcodes:
          - "46012300000000"
          - "46012300000000"
          params:
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          tags:
          - до 500 рублей
          - до 500 рублей
          - до 500 рублей
          - до 500 рублей
          - до 500 рублей
          condition:
            reason: reason
            type: PREOWNED
            quality: PERFECT
          certificates:
          - certificates
          - certificates
          - certificates
          - certificates
          - certificates
          boxCount: 2
          additionalExpenses:
            currencyId: null
            value: 0.9301444243932576
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          customsCommodityCode: "8517610008"
          adult: true
          age:
            ageUnit: YEAR
            value: 0.5962133916683182
          manuals:
          - title: title
            url: url
          - title: title
            url: url
          - title: title
            url: url
          - title: title
            url: url
          - title: title
            url: url
        mapping:
          marketSku: 1
      properties:
        offer:
          $ref: '#/components/schemas/UpdateOfferDTO'
        mapping:
          $ref: '#/components/schemas/UpdateMappingDTO'
      required:
      - offer
      type: object
    UpdateOfferMappingResultDTO:
      description: "Ошибки и предупреждения, которые появились из-за переданных ха\
        рактеристик."
      example:
        warnings:
        - parameterId: 0
          type: UNKNOWN_CATEGORY
          message: message
        - parameterId: 0
          type: UNKNOWN_CATEGORY
          message: message
        offerId: offerId
        errors:
        - parameterId: 0
          type: UNKNOWN_CATEGORY
          message: message
        - parameterId: 0
          type: UNKNOWN_CATEGORY
          message: message
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        errors:
          description: |
            Ошибки.

            Если хотя бы по одному товару есть ошибка, информация в каталоге не обновится по всем переданным товарам.
          items:
            $ref: '#/components/schemas/OfferMappingErrorDTO'
          minItems: 1
          nullable: true
          type: array
        warnings:
          description: |
            Предупреждения.

            Информация в каталоге обновится.
          items:
            $ref: '#/components/schemas/OfferMappingErrorDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - offerId
      type: object
    SuggestedOfferDTO:
      description: Информация о товаре.
      example:
        vendor: LEVENHUK
        basicPrice:
          currencyId: null
          value: 0.9301444243932576
        name: "Ударная дрель Makita HP1630, 710 Вт"
        offerId: offerId
        description: description
        category: category
        barcodes:
        - "46012300000000"
        - "46012300000000"
        vendorCode: VNDR-0005A
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        name:
          description: |
            Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

            Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

            Оптимальная длина — 50–60 символов.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
          example: "Ударная дрель Makita HP1630, 710 Вт"
          maxLength: 256
          type: string
        category:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `marketCategoryId`." %}

             

            {% endnote %}

            Категория товара в вашем магазине.
          type: string
        vendor:
          description: "Название бренда или производителя. Должно быть записано та\
            к, как его пишет сам бренд."
          example: LEVENHUK
          type: string
        barcodes:
          description: |+
            Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

            Для книг указывайте ISBN.

            Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

            [Что такое GTIN](*gtin)

          items:
            example: "46012300000000"
            type: string
          minItems: 1
          nullable: true
          type: array
        description:
          description: |
            Подробное описание товара: например, его преимущества и особенности.

            Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

            Можно использовать теги:

            * \<h>, \<h1>, \<h2> и так далее — для заголовков;
            * \<br> и \<p> — для переноса строки;
            * \<ol> — для нумерованного списка;
            * \<ul> — для маркированного списка;
            * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
            * \<div> — поддерживается, но не влияет на отображение текста.

            Оптимальная длина — 400–600 символов.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
          maxLength: 6000
          type: string
        vendorCode:
          description: Артикул товара от производителя.
          example: VNDR-0005A
          type: string
        basicPrice:
          $ref: '#/components/schemas/BasePriceDTO'
      type: object
    GetSuggestedOfferMappingsResultDTO:
      description: Подобранные карточки на Маркете.
      example:
        offers:
        - offer:
            vendor: LEVENHUK
            basicPrice:
              currencyId: null
              value: 0.9301444243932576
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            description: description
            category: category
            barcodes:
            - "46012300000000"
            - "46012300000000"
            vendorCode: VNDR-0005A
          mapping:
            marketSkuName: marketSkuName
            marketCategoryName: marketCategoryName
            marketCategoryId: 4
            marketSku: 1
            marketModelId: 2
            marketModelName: marketModelName
        - offer:
            vendor: LEVENHUK
            basicPrice:
              currencyId: null
              value: 0.9301444243932576
            name: "Ударная дрель Makita HP1630, 710 Вт"
            offerId: offerId
            description: description
            category: category
            barcodes:
            - "46012300000000"
            - "46012300000000"
            vendorCode: VNDR-0005A
          mapping:
            marketSkuName: marketSkuName
            marketCategoryName: marketCategoryName
            marketCategoryId: 4
            marketSku: 1
            marketModelId: 2
            marketModelName: marketModelName
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/SuggestedOfferMappingDTO'
          type: array
      required:
      - offers
      type: object
    AddOffersToArchiveDTO:
      description: "Товары, которые не удалось поместить в архив."
      example:
        notArchivedOffers:
        - offerId: offerId
          error: OFFER_HAS_STOCKS
        - offerId: offerId
          error: OFFER_HAS_STOCKS
      properties:
        notArchivedOffers:
          description: "Список товаров, которые не удалось поместить в архив."
          items:
            $ref: '#/components/schemas/AddOffersToArchiveErrorDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    DeleteOffersFromArchiveDTO:
      description: "Товары, которые не удалось восстановить из архива."
      example:
        notUnarchivedOfferIds:
        - null
        - null
      properties:
        notUnarchivedOfferIds:
          description: "Список товаров, которые не удалось восстановить из архива."
          items:
            $ref: '#/components/schemas/ShopSku'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      type: object
    OfferMappingEntriesDTO:
      description: Информация о товарах в каталоге.
      example:
        offerMappingEntries:
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: ACTIVE
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            price: 2.027123023002322
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          mapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          awaitingModerationMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          rejectedMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
        - offer:
            manufacturerCountries:
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            - manufacturerCountries
            certificate: certificate
            description: description
            availability: ACTIVE
            pictures:
            - pictures
            - pictures
            vendorCode: VNDR-0005A
            manufacturer: manufacturer
            urls:
            - urls
            - urls
            deliveryDurationDays: 5
            feedId: 0
            vendor: LEVENHUK
            price: 2.027123023002322
            transportUnitSize: 1
            id: id
            lifeTime:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            shelfLife:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            supplyScheduleDays:
            - MONDAY
            - MONDAY
            lifeTimeDays: 9
            quantumOfSupply: 5
            barcodes:
            - "46012300000000"
            - "46012300000000"
            customsCommodityCodes:
            - customsCommodityCodes
            - customsCommodityCodes
            processingState:
              notes:
              - payload: payload
                type: ASSORTMENT
              - payload: payload
                type: ASSORTMENT
              status: UNKNOWN
            shopSku: shopSku
            boxCount: 2
            minShipment: 6
            name: "Ударная дрель Makita HP1630, 710 Вт"
            shelfLifeDays: 7
            guaranteePeriod:
              timePeriod: 6
              comment: comment
              timeUnit: HOUR
            weightDimensions:
              length: 65.55
              width: 50.7
              weight: 1.001
              height: 20
            category: category
            guaranteePeriodDays: 3
          mapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          awaitingModerationMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
          rejectedMapping:
            modelId: 7
            marketSku: 1
            categoryId: 1
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerMappingEntries:
          description: Информация о товарах в каталоге.
          items:
            $ref: '#/components/schemas/OfferMappingEntryDTO'
          type: array
      required:
      - offerMappingEntries
      type: object
    UpdateOfferMappingEntryDTO:
      allOf:
      - properties:
          offer:
            $ref: '#/components/schemas/UpdateMappingsOfferDTO'
        type: object
      - $ref: '#/components/schemas/OfferMappingInfoDTO'
      description: |
        Список товаров.

        В теле запроса можно передать от одного до 500 товаров.

        Обязательный параметр.
      example:
        offer:
          manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: ACTIVE
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
        mapping:
          modelId: 7
          marketSku: 1
          categoryId: 1
        awaitingModerationMapping:
          modelId: 7
          marketSku: 1
          categoryId: 1
        rejectedMapping:
          modelId: 7
          marketSku: 1
          categoryId: 1
      type: object
    MappingsOfferDTO:
      allOf:
      - $ref: '#/components/schemas/MappingsOfferInfoDTO'
      - properties:
          price:
            description: Цена на товар.
            type: number
        type: object
      description: Информация о товарах в каталоге.
      example:
        manufacturerCountries:
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        certificate: certificate
        description: description
        availability: ACTIVE
        pictures:
        - pictures
        - pictures
        vendorCode: VNDR-0005A
        manufacturer: manufacturer
        urls:
        - urls
        - urls
        deliveryDurationDays: 5
        feedId: 0
        vendor: LEVENHUK
        price: 2.027123023002322
        transportUnitSize: 1
        id: id
        lifeTime:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        shelfLife:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        supplyScheduleDays:
        - MONDAY
        - MONDAY
        lifeTimeDays: 9
        quantumOfSupply: 5
        barcodes:
        - "46012300000000"
        - "46012300000000"
        customsCommodityCodes:
        - customsCommodityCodes
        - customsCommodityCodes
        processingState:
          notes:
          - payload: payload
            type: ASSORTMENT
          - payload: payload
            type: ASSORTMENT
          status: UNKNOWN
        shopSku: shopSku
        boxCount: 2
        minShipment: 6
        name: "Ударная дрель Makita HP1630, 710 Вт"
        shelfLifeDays: 7
        guaranteePeriod:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        weightDimensions:
          length: 65.55
          width: 50.7
          weight: 1.001
          height: 20
        category: category
        guaranteePeriodDays: 3
      type: object
    OfferMappingSuggestionsListDTO:
      description: Список рекомендованных карточек товара.
      example:
        offers:
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          marketCategoryId: 4
          certificate: certificate
          description: description
          availability: ACTIVE
          marketModelId: 7
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          marketSkuName: marketSkuName
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          marketSku: null
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          marketModelName: marketModelName
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          marketCategoryName: marketCategoryName
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
        - manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          marketCategoryId: 4
          certificate: certificate
          description: description
          availability: ACTIVE
          marketModelId: 7
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          marketSkuName: marketSkuName
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          marketSku: null
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          marketModelName: marketModelName
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          marketCategoryName: marketCategoryName
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
      properties:
        offers:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/EnrichedMappingsOfferDTO'
          type: array
      required:
      - offers
      type: object
    UpdateBusinessOfferPriceDTO:
      description: Товар с новой ценой.
      example:
        price:
          discountBase: 0.6027456183070403
          currencyId: RUR
          value: 0.08008281904610115
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        price:
          $ref: '#/components/schemas/UpdateBusinessPricesDTO'
      required:
      - offerId
      - price
      type: object
    OfferPriceDTO:
      description: Товар с информацией о новой цене на него.
      example:
        price:
          vat: 1
          discountBase: 6.027456183070403
          currencyId: RUR
          value: 0.8008281904610115
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        price:
          $ref: '#/components/schemas/PriceDTO'
      type: object
    OfferPriceListResponseDTO:
      description: Список цен на товары.
      example:
        offers:
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          marketSku: 1
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          marketSku: 1
          id: id
          updatedAt: 2000-01-23T04:56:07.000+00:00
        total: 6
        paging:
          nextPageToken: nextPageToken
      properties:
        offers:
          description: Страница списка.
          items:
            $ref: '#/components/schemas/OfferPriceResponseDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
        total:
          description: "Количество всех цен магазина, измененных через API."
          format: int32
          type: integer
      required:
      - offers
      type: object
    OfferPriceByOfferIdsListResponseDTO:
      description: Список цен.
      example:
        offers:
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          offerId: offerId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - price:
            vat: 1
            discountBase: 6.027456183070403
            currencyId: RUR
            value: 0.8008281904610115
          offerId: offerId
          updatedAt: 2000-01-23T04:56:07.000+00:00
        paging:
          nextPageToken: nextPageToken
      properties:
        offers:
          description: Страница списка цен.
          items:
            $ref: '#/components/schemas/OfferPriceByOfferIdsResponseDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - offers
      type: object
    SuggestOfferPriceDTO:
      description: "Товар, для которого требуется получить цены для продвижения."
      example:
        marketSku: 1
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
      type: object
    SuggestPricesResultDTO:
      description: Результат запроса цен для продвижения.
      example:
        offers:
        - marketSku: 1
          offerId: offerId
          priceSuggestion:
          - price: 6.027456183070403
            type: BUYBOX
          - price: 6.027456183070403
            type: BUYBOX
        - marketSku: 1
          offerId: offerId
          priceSuggestion:
          - price: 6.027456183070403
            type: BUYBOX
          - price: 6.027456183070403
            type: BUYBOX
      properties:
        offers:
          description: Список товаров с ценами для продвижения.
          items:
            $ref: '#/components/schemas/PriceSuggestOfferDTO'
          type: array
      required:
      - offers
      type: object
    GetQuarantineOffersResultDTO:
      description: Список товаров в карантине.
      example:
        offers:
        - verdicts:
          - type: PRICE_CHANGE
            params:
            - name: CURRENT_PRICE
              value: value
            - name: CURRENT_PRICE
              value: value
          - type: PRICE_CHANGE
            params:
            - name: CURRENT_PRICE
              value: value
            - name: CURRENT_PRICE
              value: value
          offerId: offerId
          currentPrice:
            currencyId: null
            value: 0.9301444243932576
          lastValidPrice:
            currencyId: null
            value: 0.9301444243932576
        - verdicts:
          - type: PRICE_CHANGE
            params:
            - name: CURRENT_PRICE
              value: value
            - name: CURRENT_PRICE
              value: value
          - type: PRICE_CHANGE
            params:
            - name: CURRENT_PRICE
              value: value
            - name: CURRENT_PRICE
              value: value
          offerId: offerId
          currentPrice:
            currencyId: null
            value: 0.9301444243932576
          lastValidPrice:
            currencyId: null
            value: 0.9301444243932576
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offers:
          description: Страница списка товаров в карантине.
          items:
            $ref: '#/components/schemas/QuarantineOfferDTO'
          type: array
      required:
      - offers
      type: object
    GetHiddenOffersResultDTO:
      description: |
        Список скрытых вами товаров.
      example:
        hiddenOffers:
        - offerId: offerId
        - offerId: offerId
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        hiddenOffers:
          description: Список скрытых товаров.
          items:
            $ref: '#/components/schemas/HiddenOfferDTO'
          type: array
      required:
      - hiddenOffers
      type: object
    HiddenOfferDTO:
      description: Информация о скрытии.
      example:
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
      required:
      - offerId
      type: object
    UpdateStockDTO:
      description: Информация об остатках одного товара на одном из складов.
      example:
        sku: sku
        items:
        - count: 160165638
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        sku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        items:
          description: |
            Информация об остатках товара.
          items:
            $ref: '#/components/schemas/UpdateStockItemDTO'
          maxItems: 1
          minItems: 1
          type: array
      required:
      - items
      - sku
      type: object
    GetWarehouseStocksDTO:
      description: Список складов с информацией об остатках на каждом из них.
      example:
        warehouses:
        - offers:
          - offerId: offerId
            turnoverSummary:
              turnoverDays: 6.027456183070403
              turnover: LOW
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - offerId: offerId
            turnoverSummary:
              turnoverDays: 6.027456183070403
              turnover: LOW
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
            updatedAt: 2000-01-23T04:56:07.000+00:00
          warehouseId: 0
        - offers:
          - offerId: offerId
            turnoverSummary:
              turnoverDays: 6.027456183070403
              turnover: LOW
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
            updatedAt: 2000-01-23T04:56:07.000+00:00
          - offerId: offerId
            turnoverSummary:
              turnoverDays: 6.027456183070403
              turnover: LOW
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
            updatedAt: 2000-01-23T04:56:07.000+00:00
          warehouseId: 0
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        warehouses:
          description: Страница списка складов.
          items:
            $ref: '#/components/schemas/WarehouseOffersDTO'
          type: array
      required:
      - warehouses
      type: object
    DeliveryServicesDTO:
      description: Информация о службах доставки.
      example:
        deliveryService:
        - name: name
          id: 0
        - name: name
          id: 0
      properties:
        deliveryService:
          description: Информация о службе доставки.
          items:
            $ref: '#/components/schemas/DeliveryServiceInfoDTO'
          type: array
      required:
      - deliveryService
      type: object
    OrderStatsStatusType:
      description: |
        Текущий статус заказа:

        * `CANCELLED_BEFORE_PROCESSING` — заказ отменен до начала его обработки.

        * `CANCELLED_IN_DELIVERY` — заказ отменен во время его доставки.

        * `CANCELLED_IN_PROCESSING` — заказ отменен во время его обработки.

        * `DELIVERY` — заказ передан службе доставки.

        * `DELIVERED` — заказ доставлен.

        * `PARTIALLY_DELIVERED` — заказ частично доставлен.

            {% note warning "Статус заказа может перейти в `PARTIALLY_DELIVERED` не сразу" %}

            Если в доставленном заказе был невыкуп, статус изменится только после получения заказа на складе Маркета.

            {% endnote %}

        * `PARTIALLY_RETURNED` — заказ частично возвращен покупателем.

        * `PENDING` — заказ ожидает подтверждения.

        * `PICKUP` — заказ доставлен в пункт выдачи.

        * `PROCESSING` — заказ в обработке.

        * `RESERVED` — товар зарезервирован на складе.

        * `RETURNED` — заказ полностью возвращен покупателем.

        * `UNKNOWN` — неизвестный статус заказа.

        * `UNPAID` — заказ от юридического лица ожидает оплаты.

        * `LOST` — заказ утерян.
      enum:
      - CANCELLED_BEFORE_PROCESSING
      - CANCELLED_IN_DELIVERY
      - CANCELLED_IN_PROCESSING
      - DELIVERY
      - DELIVERED
      - PARTIALLY_DELIVERED
      - PARTIALLY_RETURNED
      - PENDING
      - PICKUP
      - PROCESSING
      - RESERVED
      - RETURNED
      - UNKNOWN
      - UNPAID
      - LOST
      type: string
    OrdersStatsDTO:
      description: Информация по заказам.
      example:
        orders:
        - partnerOrderId: partnerOrderId
          statusUpdateDate: 2000-01-23T04:56:07.000+00:00
          payments:
          - date: 2000-01-23
            total: 7.386281948385884
            paymentOrder:
              date: 2000-01-23
              id: id
            id: id
            source: BUYER
            type: PAYMENT
          - date: 2000-01-23
            total: 7.386281948385884
            paymentOrder:
              date: 2000-01-23
              id: id
            id: id
            source: BUYER
            type: PAYMENT
          creationDate: 2000-01-23
          paymentType: POSTPAID
          commissions:
          - actual: 1.2315135367772556
            type: FEE
          - actual: 1.2315135367772556
            type: FEE
          subsidies:
          - amount: 1.0246457001441578
            operationType: ACCRUAL
            type: YANDEX_CASHBACK
          - amount: 1.0246457001441578
            operationType: ACCRUAL
            type: YANDEX_CASHBACK
          fake: true
          deliveryRegion:
            name: name
            id: 6
          currency: RUR
          id: 0
          items:
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          initialItems:
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          status: CANCELLED_BEFORE_PROCESSING
        - partnerOrderId: partnerOrderId
          statusUpdateDate: 2000-01-23T04:56:07.000+00:00
          payments:
          - date: 2000-01-23
            total: 7.386281948385884
            paymentOrder:
              date: 2000-01-23
              id: id
            id: id
            source: BUYER
            type: PAYMENT
          - date: 2000-01-23
            total: 7.386281948385884
            paymentOrder:
              date: 2000-01-23
              id: id
            id: id
            source: BUYER
            type: PAYMENT
          creationDate: 2000-01-23
          paymentType: POSTPAID
          commissions:
          - actual: 1.2315135367772556
            type: FEE
          - actual: 1.2315135367772556
            type: FEE
          subsidies:
          - amount: 1.0246457001441578
            operationType: ACCRUAL
            type: YANDEX_CASHBACK
          - amount: 1.0246457001441578
            operationType: ACCRUAL
            type: YANDEX_CASHBACK
          fake: true
          deliveryRegion:
            name: name
            id: 6
          currency: RUR
          id: 0
          items:
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          initialItems:
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          - cofinanceValue: 4.145608029883936
            initialCount: 3
            offerName: offerName
            shopSku: shopSku
            cisList:
            - cisList
            - cisList
            marketSku: 1
            count: 5
            bidFee: 570
            cofinanceThreshold: 2.027123023002322
            details:
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            - updateDate: 2000-01-23
              stockType: FIT
              itemStatus: REJECTED
              itemCount: 9
            prices:
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            - total: 2.3021358869347655
              costPerItem: 5.637376656633329
              type: BUYER
            warehouse:
              name: name
              id: 7
          status: CANCELLED_BEFORE_PROCESSING
        paging:
          nextPageToken: nextPageToken
      properties:
        orders:
          description: Список заказов.
          items:
            $ref: '#/components/schemas/OrdersStatsOrderDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - orders
      type: object
    GoodsStatsDTO:
      description: Отчет по товарам.
      example:
        shopSkus:
        - shopSku: shopSku
          marketSku: 1
          price: 6.027456183070403
          name: name
          warehouses:
          - name: name
            id: 9
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
          - name: name
            id: 9
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
          weightDimensions:
            length: 5.962133916683182
            width: 5.637376656633329
            weight: 7.061401241503109
            height: 2.3021358869347655
          categoryName: categoryName
          categoryId: 1
          pictures:
          - pictures
          - pictures
          tariffs:
          - amount: 2.027123023002322
            currency: RUR
            type: AGENCY_COMMISSION
            percent: 3.616076749251911
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - amount: 2.027123023002322
            currency: RUR
            type: AGENCY_COMMISSION
            percent: 3.616076749251911
            parameters:
            - name: name
              value: value
            - name: name
              value: value
        - shopSku: shopSku
          marketSku: 1
          price: 6.027456183070403
          name: name
          warehouses:
          - name: name
            id: 9
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
          - name: name
            id: 9
            stocks:
            - count: 1
              type: FIT
            - count: 1
              type: FIT
          weightDimensions:
            length: 5.962133916683182
            width: 5.637376656633329
            weight: 7.061401241503109
            height: 2.3021358869347655
          categoryName: categoryName
          categoryId: 1
          pictures:
          - pictures
          - pictures
          tariffs:
          - amount: 2.027123023002322
            currency: RUR
            type: AGENCY_COMMISSION
            percent: 3.616076749251911
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - amount: 2.027123023002322
            currency: RUR
            type: AGENCY_COMMISSION
            percent: 3.616076749251911
            parameters:
            - name: name
              value: value
            - name: name
              value: value
      properties:
        shopSkus:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/GoodsStatsGoodsDTO'
          type: array
      required:
      - shopSkus
      type: object
    ReportInfoDTO:
      description: Статус генерации и ссылка на готовый отчет.
      example:
        generationRequestedAt: 2000-01-23T04:56:07.000+00:00
        file: file
        generationFinishedAt: 2000-01-23T04:56:07.000+00:00
        subStatus: NO_DATA
        status: PENDING
        estimatedGenerationTime: 0
      properties:
        status:
          $ref: '#/components/schemas/ReportStatusType'
        subStatus:
          $ref: '#/components/schemas/ReportSubStatusType'
        generationRequestedAt:
          description: Дата и время запроса на генерацию.
          format: date-time
          type: string
        generationFinishedAt:
          description: Дата и время завершения генерации.
          format: date-time
          type: string
        file:
          description: Ссылка на готовый отчет.
          type: string
        estimatedGenerationTime:
          description: Ожидаемая продолжительность генерации в миллисекундах.
          format: int64
          type: integer
      required:
      - generationRequestedAt
      - status
      type: object
    MonthOfYearDTO:
      description: "Месяц, за который нужен отчет о баллах Маркета."
      example:
        month: 12
        year: 2025
      properties:
        year:
          description: Год.
          example: 2025
          format: int32
          type: integer
        month:
          description: Номер месяца.
          example: 12
          format: int32
          maximum: 12
          minimum: 1
          type: integer
      required:
      - month
      - year
      type: object
    PlacementType:
      description: |
        Модель, по которой работает магазин:

        * `FBS` — FBS или Экспресс.
        * `FBY` — FBY.
        * `DBS` — DBS.
      enum:
      - FBS
      - FBY
      - DBS
      type: string
    GenerateReportDTO:
      description: "Идентификатор, который понадобится для отслеживания статуса ге\
        нерации и получения готового отчета."
      example:
        reportId: reportId
        estimatedGenerationTime: 0
      properties:
        reportId:
          description: "Идентификатор, который понадобится для отслеживания статус\
            а генерации и получения готового отчета."
          type: string
        estimatedGenerationTime:
          description: Ожидаемая продолжительность генерации в миллисекундах.
          format: int64
          type: integer
      required:
      - estimatedGenerationTime
      - reportId
      type: object
    Year:
      description: Год.
      example: 2025
      format: int32
      type: integer
    Month:
      description: Номер месяца.
      example: 12
      format: int32
      maximum: 12
      minimum: 1
      type: integer
    ReturnShipmentStatusType:
      description: |
        Статус передачи возврата:

        * `CREATED` — возврат создан.

        * `RECEIVED` — принят у покупателя.

        * `IN_TRANSIT` — возврат в пути.

        * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.

        * `PICKED` — возврат выдан магазину.

        * `LOST` — возврат утерян при транспортировке.

        * `EXPIRED` — покупатель не принес товар на возврат вовремя.

        * `CANCELLED` — возврат отменен.

        * `FULFILMENT_RECEIVED` — возврат принят на складе Маркета.

        * `PREPARED_FOR_UTILIZATION` — возврат передан в утилизацию.

        * `NOT_IN_DEMAND` — возврат не забрали с почты.

        * `UTILIZED` — возврат утилизирован.

        * `READY_FOR_EXPROPRIATION` — товары в возврате направлены на перепродажу.

        * `RECEIVED_FOR_EXPROPRIATION` — товары в возврате приняты для перепродажи.

        * `UNKNOWN` — неизвестный статус.
      enum:
      - CREATED
      - RECEIVED
      - IN_TRANSIT
      - READY_FOR_PICKUP
      - PICKED
      - LOST
      - EXPIRED
      - CANCELLED
      - FULFILMENT_RECEIVED
      - PREPARED_FOR_UTILIZATION
      - NOT_IN_DEMAND
      - UTILIZED
      - READY_FOR_EXPROPRIATION
      - RECEIVED_FOR_EXPROPRIATION
      - UNKNOWN
      type: string
    ShowsSalesGroupingType:
      description: |
        Группировка данных отчета.
        Возможные значения:
        * `CATEGORIES` — группировка по категориям.
        * `OFFERS` — группировка по товарам.
      enum:
      - CATEGORIES
      - OFFERS
      type: string
    StatisticsAttributionType:
      description: |
        Тип атрибуции:
          * `CLICKS` — по кликам.
          * `SHOWS` — по показам.
        <br><br>

        О том, какие данные в отчете зависят и не зависят от типа атрибуции, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/shelf#stats).
      enum:
      - CLICKS
      - SHOWS
      type: string
    LabelsSortingType:
      description: |
        Тип сортировки ярлыков:

        * `SORT_BY_GIVEN_ORDER` — ярлыки заказов будут расположены в том же порядке, в каком были переданы идентификаторы заказов в запросе.
        * `SORT_BY_ORDER_CREATED_AT` — ярлыки будут расположены в соответствии с датой создания заказа с группировкой по магазинам.

        Если параметр не указан, ярлыки сортируются по дате создания.
      enum:
      - SORT_BY_GIVEN_ORDER
      - SORT_BY_ORDER_CREATED_AT
      type: string
    FullOutletDTO:
      allOf:
      - $ref: '#/components/schemas/OutletDTO'
      - properties:
          id:
            description: "Идентификатор точки продаж, присвоенный Маркетом."
            format: int64
            type: integer
          status:
            $ref: '#/components/schemas/OutletStatusType'
          region:
            $ref: '#/components/schemas/RegionDTO'
          shopOutletId:
            description: "Идентификатор точки продаж, заданный магазином."
            type: string
          workingTime:
            description: Рабочее время.
            type: string
          moderationReason:
            description: Статус модерации.
            type: string
        type: object
      description: Информация о точке продаж.
      example:
        storagePeriod: 9
        address:
          number: number
          km: 6
          regionId: 0
          city: city
          street: street
          additional: additional
          estate: estate
          block: block
          building: building
        moderationReason: moderationReason
        visibility: HIDDEN
        isMain: true
        phones:
        - phones
        - phones
        workingTime: workingTime
        type: DEPOT
        workingSchedule:
          scheduleItems:
          - startDay: MONDAY
            endDay: null
            startTime: 09:59
            endTime: 23:59
          - startDay: MONDAY
            endDay: null
            startTime: 09:59
            endTime: 23:59
          workInHoliday: true
        shopOutletId: shopOutletId
        shopOutletCode: shopOutletCode
        name: name
        id: 3
        region:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: OTHER
        coords: coords
        deliveryRules:
        - priceFreePickup: 7.061401241503109
          deliveryServiceId: 5
          maxDeliveryDays: 35
          minDeliveryDays: 8
          orderBefore: 5
          unspecifiedDeliveryInterval: true
        - priceFreePickup: 7.061401241503109
          deliveryServiceId: 5
          maxDeliveryDays: 35
          minDeliveryDays: 8
          orderBefore: 5
          unspecifiedDeliveryInterval: true
        status: AT_MODERATION
      required:
      - id
      type: object
    ScrollingPagerDTO:
      allOf:
      - $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      - properties:
          prevPageToken:
            description: Идентификатор предыдущей страницы результатов.
            type: string
        type: object
      description: Информация о страницах результатов.
      example:
        prevPageToken: prevPageToken
        nextPageToken: nextPageToken
      type: object
    OutletDTO:
      description: Информация о точке продаж.
      properties:
        name:
          description: |
            Название точки продаж.
          type: string
        type:
          $ref: '#/components/schemas/OutletType'
        coords:
          description: |
            Координаты точки продаж.

            Формат: долгота, широта. Разделители: запятая и / или пробел. Например, `20.4522144, 54.7104264`.

            Если параметр не передан, координаты будут определены по значениям параметров, вложенных в `address`.
          type: string
        isMain:
          description: |
            Признак основной точки продаж.

            Возможные значения:

            * `false` — неосновная точка продаж.
            * `true` — основная точка продаж.
          type: boolean
        shopOutletCode:
          description: "Идентификатор точки продаж, присвоенный магазином."
          type: string
        visibility:
          $ref: '#/components/schemas/OutletVisibilityType'
        address:
          $ref: '#/components/schemas/OutletAddressDTO'
        phones:
          description: |
            Номера телефонов точки продаж. Передавайте в формате: `+7 (999) 999-99-99`.
          items:
            minLength: 1
            type: string
          minItems: 1
          type: array
        workingSchedule:
          $ref: '#/components/schemas/OutletWorkingScheduleDTO'
        deliveryRules:
          description: |
            Информация об условиях доставки для данной точки продаж.

            Обязательный параметр, если параметр `type=DEPOT` или `type=MIXED`.
          items:
            $ref: '#/components/schemas/OutletDeliveryRuleDTO'
          minItems: 1
          nullable: true
          type: array
        storagePeriod:
          description: Срок хранения заказа в собственном пункте выдачи заказов. Считается
            в днях.
          format: int64
          type: integer
      required:
      - address
      - name
      - phones
      - type
      - workingSchedule
      type: object
    OutletResponseDTO:
      description: |
        Результат выполнения запроса.
        Выводится, если `status="OK"`.
      example:
        id: 0
      properties:
        id:
          description: "Идентификатор точки продаж, присвоенный Маркетом."
          format: int64
          type: integer
      type: object
    OutletLicensesResponseDTO:
      description: Ответ на запрос информации о лицензиях для точек продаж.
      example:
        licenses:
        - licenseType: ALCOHOL
          number: number
          dateOfExpiry: 2022-11-20T00:00:00+03:00
          checkStatus: NEW
          outletId: 1
          id: 0
          dateOfIssue: 2017-11-13T00:00:00+03:00
          checkComment: checkComment
        - licenseType: ALCOHOL
          number: number
          dateOfExpiry: 2022-11-20T00:00:00+03:00
          checkStatus: NEW
          outletId: 1
          id: 0
          dateOfIssue: 2017-11-13T00:00:00+03:00
          checkComment: checkComment
      properties:
        licenses:
          description: Список лицензий.
          items:
            $ref: '#/components/schemas/FullOutletLicenseDTO'
          type: array
      required:
      - licenses
      type: object
    OutletLicenseDTO:
      description: Информация о лицензии.
      example:
        licenseType: ALCOHOL
        number: number
        dateOfExpiry: 2022-11-20T00:00:00+03:00
        outletId: 1
        id: 0
        dateOfIssue: 2017-11-13T00:00:00+03:00
      properties:
        id:
          description: |
            Идентификатор лицензии.

            Параметр указывается, только если нужно изменить информацию о существующей лицензии. Ее идентификатор можно узнать с помощью запроса [GET campaigns/{campaignId}/outlets/licenses](../../reference/outlets/getOutletLicenses.md). При передаче информации о новой лицензии указывать идентификатор не нужно.

            Идентификатор лицензии присваивается Маркетом. Не путайте его с номером, указанным на лицензии: он передается в параметре `number`.
          format: int64
          type: integer
        outletId:
          description: "Идентификатор точки продаж, для которой действительна лице\
            нзия."
          format: int64
          minimum: 1
          type: integer
        licenseType:
          $ref: '#/components/schemas/LicenseType'
        number:
          description: Номер лицензии.
          type: string
        dateOfIssue:
          description: |
            Дата выдачи лицензии.

            Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если лицензия для точки продаж в Москве выдана 13 ноября 2017 года, то параметр должен иметь значение `2017-11-13T00:00:00+03:00`.

            Не может быть позже даты окончания срока действия, указанной в параметре `dateOfExpiry`.
          example: 2017-11-13T00:00:00+03:00
          format: date-time
          type: string
        dateOfExpiry:
          description: |
            Дата окончания действия лицензии.

            Формат даты: ISO 8601 со смещением относительно UTC. Нужно передать дату, указанную на лицензии, время `00:00:00` и часовой пояс, соответствующий региону точки продаж. Например, если действие лицензии для точки продаж в Москве заканчивается 20 ноября 2022 года, то параметр должен иметь значение `2022-11-20T00:00:00+03:00`.

            Не может быть раньше даты выдачи, указанной в параметре `dateOfIssue`.
          example: 2022-11-20T00:00:00+03:00
          format: date-time
          type: string
      required:
      - dateOfExpiry
      - dateOfIssue
      - licenseType
      - number
      - outletId
      type: object
    GoodsFeedbackId:
      description: |
        Идентификатор отзыва.
      format: int64
      type: integer
    FeedbackReactionStatusType:
      description: |
        Статус реакции на отзыв:

        * `ALL` — все отзывы.

        * `NEED_REACTION` — отзывы, на которые нужно ответить.
      enum:
      - ALL
      - NEED_REACTION
      type: string
    GoodsFeedbackListDTO:
      description: |
        Список отзывов о товарах.
      example:
        feedbacks:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          needReaction: true
          identifiers:
            orderId: 6
            modelId: 1
          author: author
          feedbackId: 0
          description:
            advantages: advantages
            disadvantages: disadvantages
            comment: comment
          media:
            videos:
            - videos
            - videos
            photos:
            - photos
            - photos
          statistics:
            commentsCount: 5
            rating: 3
            paidAmount: 2
            recommended: true
        - createdAt: 2000-01-23T04:56:07.000+00:00
          needReaction: true
          identifiers:
            orderId: 6
            modelId: 1
          author: author
          feedbackId: 0
          description:
            advantages: advantages
            disadvantages: disadvantages
            comment: comment
          media:
            videos:
            - videos
            - videos
            photos:
            - photos
            - photos
          statistics:
            commentsCount: 5
            rating: 3
            paidAmount: 2
            recommended: true
        paging:
          nextPageToken: nextPageToken
      properties:
        feedbacks:
          description: Список отзывов.
          items:
            $ref: '#/components/schemas/GoodsFeedbackDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - feedbacks
      type: object
    UpdateGoodsFeedbackCommentDTO:
      description: Комментарий к отзыву или другому комментарию.
      example:
        id: 6
        text: text
        parentId: 1
      properties:
        id:
          description: |
            Идентификатор комментария к отзыву.
          format: int64
          type: integer
        parentId:
          description: |
            Идентификатор комментария к отзыву.
          format: int64
          type: integer
        text:
          description: Текст комментария.
          maxLength: 4096
          minLength: 1
          type: string
      required:
      - text
      type: object
    GoodsFeedbackCommentDTO:
      description: Комментарий к отзыву.
      example:
        author:
          name: name
          type: USER
        feedbackId: 1
        id: 0
        text: text
        canModify: true
        parentId: 6
        status: PUBLISHED
      properties:
        id:
          description: |
            Идентификатор комментария к отзыву.
          format: int64
          type: integer
        text:
          description: Текст комментария.
          maxLength: 4096
          minLength: 1
          type: string
        canModify:
          description: Может ли продавец изменять комментарий или удалять его.
          type: boolean
        parentId:
          description: |
            Идентификатор комментария к отзыву.
          format: int64
          type: integer
        author:
          $ref: '#/components/schemas/GoodsFeedbackCommentAuthorDTO'
        status:
          $ref: '#/components/schemas/GoodsFeedbackCommentStatusType'
        feedbackId:
          description: |
            Идентификатор отзыва.
          format: int64
          type: integer
      required:
      - author
      - feedbackId
      - id
      - status
      - text
      type: object
    GoodsFeedbackCommentId:
      description: |
        Идентификатор комментария к отзыву.
      format: int64
      type: integer
    GoodsFeedbackCommentListDTO:
      description: Комментарии к отзыву.
      example:
        comments:
        - author:
            name: name
            type: USER
          feedbackId: 1
          id: 0
          text: text
          canModify: true
          parentId: 6
          status: PUBLISHED
        - author:
            name: name
            type: USER
          feedbackId: 1
          id: 0
          text: text
          canModify: true
          parentId: 6
          status: PUBLISHED
        paging:
          nextPageToken: nextPageToken
      properties:
        comments:
          description: Список комментариев.
          items:
            $ref: '#/components/schemas/GoodsFeedbackCommentDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - comments
      type: object
    OfferCampaignStatusType:
      description: |
        Статус товара:

        * `PUBLISHED` — Готов к продаже.
        * `CHECKING` — На проверке.
        * `DISABLED_BY_PARTNER` — Скрыт вами.
        * `REJECTED_BY_MARKET` — Отклонен.
        * `DISABLED_AUTOMATICALLY` — Исправьте ошибки.
        * `CREATING_CARD` — Создается карточка.
        * `NO_CARD` — Нужна карточка.
        * `NO_STOCKS` — Нет на складе.
        * `ARCHIVED` — В архиве.

        [Что обозначает каждый из статусов](https://yandex.ru/support/marketplace/assortment/add/statuses.html)
      enum:
      - PUBLISHED
      - CHECKING
      - DISABLED_BY_PARTNER
      - DISABLED_AUTOMATICALLY
      - REJECTED_BY_MARKET
      - CREATING_CARD
      - NO_CARD
      - NO_STOCKS
      - ARCHIVED
      type: string
    GetCampaignOffersResultDTO:
      description: Список товаров в заданном магазине.
      example:
        offers:
        - campaignPrice:
            vat: 5
            discountBase: 5.962133916683182
            currencyId: RUR
            value: 1.4658129805029452
            updatedAt: 2000-01-23T04:56:07.000+00:00
          basicPrice:
            discountBase: 0.23021358869347652
            currencyId: RUR
            value: 0.5637376656633328
            updatedAt: 2000-01-23T04:56:07.000+00:00
          warnings:
          - comment: comment
            message: message
          - comment: comment
            message: message
          available: true
          offerId: offerId
          quantum:
            minQuantity: 1
            stepQuantity: 60
          errors:
          - comment: comment
            message: message
          - comment: comment
            message: message
          status: PUBLISHED
        - campaignPrice:
            vat: 5
            discountBase: 5.962133916683182
            currencyId: RUR
            value: 1.4658129805029452
            updatedAt: 2000-01-23T04:56:07.000+00:00
          basicPrice:
            discountBase: 0.23021358869347652
            currencyId: RUR
            value: 0.5637376656633328
            updatedAt: 2000-01-23T04:56:07.000+00:00
          warnings:
          - comment: comment
            message: message
          - comment: comment
            message: message
          available: true
          offerId: offerId
          quantum:
            minQuantity: 1
            stepQuantity: 60
          errors:
          - comment: comment
            message: message
          - comment: comment
            message: message
          status: PUBLISHED
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offers:
          description: Страница списка товаров.
          items:
            $ref: '#/components/schemas/GetCampaignOfferDTO'
          type: array
      required:
      - offers
      type: object
    UpdateCampaignOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseCampaignOfferDTO'
      - properties:
          vat:
            $ref: '#/components/schemas/VatType'
        type: object
      description: Параметры размещения товара в магазине.
      example:
        available: true
        vat: null
        offerId: offerId
        quantum:
          minQuantity: 1
          stepQuantity: 60
      type: object
    DeleteCampaignOffersDTO:
      description: "Список товаров, которые не удалось удалить, потому что они не\
        \ найдены или хранятся на складе Маркета."
      example:
        notDeletedOfferIds:
        - null
        - null
      properties:
        notDeletedOfferIds:
          description: Список SKU.
          items:
            $ref: '#/components/schemas/ShopSku'
          minItems: 1
          nullable: true
          type: array
      type: object
    FieldStateType:
      description: |
        Фильтр по заполненности или незаполненности поля:

        * `SPECIFIED` — вывести товары, у которых поле заполнено.
        * `EMPTY` — вывести товары, у которых поле не заполнено.
      enum:
      - SPECIFIED
      - EMPTY
      type: string
    PriceCompetitivenessType:
      description: |
        Привлекательность цены:

        * `OPTIMAL` — привлекательная.
        * `AVERAGE` — умеренная.
        * `LOW` — непривлекательная.
      enum:
      - OPTIMAL
      - AVERAGE
      - LOW
      type: string
    OfferRecommendationsResultDTO:
      description: Список товаров с рекомендациями.
      example:
        paging:
          prevPageToken: prevPageToken
          nextPageToken: nextPageToken
        offerRecommendations:
        - offer:
            shows: 0
            price:
              currencyId: null
              value: 0.9301444243932576
            offerId: offerId
            competitiveness: OPTIMAL
            cofinancePrice:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
          recommendation:
            offerId: offerId
            competitivenessThresholds:
              optimalPrice:
                currencyId: null
                value: 0.9301444243932576
              averagePrice:
                currencyId: null
                value: 0.9301444243932576
        - offer:
            shows: 0
            price:
              currencyId: null
              value: 0.9301444243932576
            offerId: offerId
            competitiveness: OPTIMAL
            cofinancePrice:
              currencyId: null
              value: 0.7061401241503109
              updatedAt: 2000-01-23T04:56:07.000+00:00
          recommendation:
            offerId: offerId
            competitivenessThresholds:
              optimalPrice:
                currencyId: null
                value: 0.9301444243932576
              averagePrice:
                currencyId: null
                value: 0.9301444243932576
      properties:
        paging:
          $ref: '#/components/schemas/ScrollingPagerDTO'
        offerRecommendations:
          description: Страница списка товаров.
          items:
            $ref: '#/components/schemas/OfferRecommendationDTO'
          type: array
      required:
      - offerRecommendations
      type: object
    ModelsDTO:
      description: Список моделей товаров.
      properties:
        models:
          description: Список моделей товаров.
          items:
            $ref: '#/components/schemas/ModelDTO'
          type: array
      required:
      - models
      type: object
    RegionalModelInfoDTO:
      description: Региональная информация.
      properties:
        currency:
          $ref: '#/components/schemas/CurrencyType'
        regionId:
          description: |
            Идентификатор региона, для которого выводится информация о предложениях модели (доставляемых в этот регион).

            Информацию о регионе по идентификатору можно получить с помощью запроса [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).
          format: int64
          type: integer
      type: object
    EnrichedModelsDTO:
      description: Список моделей товаров.
      properties:
        models:
          description: Список моделей товаров.
          items:
            $ref: '#/components/schemas/EnrichedModelDTO'
          type: array
      required:
      - models
      type: object
    SkuBidItemDTO:
      description: Список товаров и ставок на них.
      example:
        sku: sku
        bid: 570
      properties:
        sku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        bid:
          description: Значение ставки.
          example: 570
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
      required:
      - bid
      - sku
      type: object
    GetBidsInfoResponseDTO:
      description: Список товаров с указанными ставками.
      example:
        bids:
        - sku: sku
          bid: 570
        - sku: sku
          bid: 570
        paging:
          nextPageToken: nextPageToken
      properties:
        bids:
          description: Страница списка товаров.
          items:
            $ref: '#/components/schemas/SkuBidItemDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - bids
      type: object
    GetBidsRecommendationsResponseDTO:
      description: Список товаров с рекомендованными ставками.
      example:
        recommendations:
        - bidRecommendations:
          - benefits:
            - BESTS
            - BESTS
            showPercent: 8
            bid: 570
          - benefits:
            - BESTS
            - BESTS
            showPercent: 8
            bid: 570
          priceRecommendations:
          - campaignId: 6
            price: 1.1465812980502945
          - campaignId: 6
            price: 1.1465812980502945
          sku: sku
          bid: 570
        - bidRecommendations:
          - benefits:
            - BESTS
            - BESTS
            showPercent: 8
            bid: 570
          - benefits:
            - BESTS
            - BESTS
            showPercent: 8
            bid: 570
          priceRecommendations:
          - campaignId: 6
            price: 1.1465812980502945
          - campaignId: 6
            price: 1.1465812980502945
          sku: sku
          bid: 570
      properties:
        recommendations:
          description: Список товаров с рекомендованными ставками.
          items:
            $ref: '#/components/schemas/SkuBidRecommendationItemDTO'
          type: array
      required:
      - recommendations
      type: object
    WarehousesDTO:
      description: Информация о складах и группах складов.
      example:
        warehouses:
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          campaignId: 6
          name: name
          express: true
          id: 0
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          campaignId: 6
          name: name
          express: true
          id: 0
        warehouseGroups:
        - name: name
          warehouses:
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
          mainWarehouse:
            address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
        - name: name
          warehouses:
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
          - address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
          mainWarehouse:
            address:
              number: number
              city: city
              street: street
              block: block
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
              building: building
            campaignId: 6
            name: name
            express: true
            id: 0
      properties:
        warehouses:
          description: "Список складов, не входящих в группы."
          items:
            $ref: '#/components/schemas/WarehouseDTO'
          type: array
        warehouseGroups:
          description: Список групп складов.
          items:
            $ref: '#/components/schemas/WarehouseGroupDTO'
          type: array
      required:
      - warehouseGroups
      - warehouses
      type: object
    WarehouseComponentType:
      description: |
        Свойства складов, которые необходимо вернуть:

        * `ADDRESS` — адрес склада.
        * `STATUS` — статус склада.
      enum:
      - ADDRESS
      - STATUS
      type: string
    PagedWarehousesDTO:
      description: Информация о складах в кабинете.
      example:
        warehouses:
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          campaignId: 6
          name: name
          express: true
          id: 0
          groupInfo:
            name: name
            id: 1
          status:
            status: DISABLED_MANUALLY
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          campaignId: 6
          name: name
          express: true
          id: 0
          groupInfo:
            name: name
            id: 1
          status:
            status: DISABLED_MANUALLY
        paging:
          nextPageToken: nextPageToken
      properties:
        warehouses:
          description: Список складов.
          items:
            $ref: '#/components/schemas/WarehouseDetailsDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - warehouses
      type: object
    FulfillmentWarehousesDTO:
      description: Список складов Маркета (FBY).
      example:
        warehouses:
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          name: name
          id: 0
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          name: name
          id: 0
      properties:
        warehouses:
          description: Список складов Маркета (FBY).
          items:
            $ref: '#/components/schemas/FulfillmentWarehouseDTO'
          type: array
      required:
      - warehouses
      type: object
    WarehouseStatusDTO:
      description: Информация о статусе склада.
      example:
        status: DISABLED_MANUALLY
      properties:
        status:
          $ref: '#/components/schemas/WarehouseStatusType'
      required:
      - status
      type: object
    CategoryContentParametersDTO:
      description: Информация о параметрах категории.
      example:
        parameters:
        - values:
          - description: description
            id: 5
            value: value
          - description: description
            id: 5
            value: value
          recommendationTypes:
          - HAS_VIDEO
          - HAS_VIDEO
          description: description
          type: TEXT
          constraints:
            minValue: 2.3021358869347655
            maxValue: 7.061401241503109
            maxLength: 9
          required: true
          multivalue: true
          unit:
            defaultUnitId: 1
            units:
            - name: кг
              fullName: килограмм
              id: 5
            - name: кг
              fullName: килограмм
              id: 5
          valueRestrictions:
          - limitedValues:
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            limitingParameterId: 1
          - limitedValues:
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            limitingParameterId: 1
          distinctive: true
          name: name
          id: 1
          filtering: true
          allowCustomValues: true
        - values:
          - description: description
            id: 5
            value: value
          - description: description
            id: 5
            value: value
          recommendationTypes:
          - HAS_VIDEO
          - HAS_VIDEO
          description: description
          type: TEXT
          constraints:
            minValue: 2.3021358869347655
            maxValue: 7.061401241503109
            maxLength: 9
          required: true
          multivalue: true
          unit:
            defaultUnitId: 1
            units:
            - name: кг
              fullName: килограмм
              id: 5
            - name: кг
              fullName: килограмм
              id: 5
          valueRestrictions:
          - limitedValues:
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            limitingParameterId: 1
          - limitedValues:
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            - limitingOptionValueId: 2
              optionValueIds:
              - 1
              - 1
            limitingParameterId: 1
          distinctive: true
          name: name
          id: 1
          filtering: true
          allowCustomValues: true
        categoryId: 1
      properties:
        categoryId:
          description: |
            Идентификатор категории на Маркете.

            При изменении категории убедитесь, что характеристики товара и их значения в параметре `parameterValues` вы передаете для новой категории.

            Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).
          format: int32
          minimum: 1
          type: integer
        parameters:
          description: Список характеристик.
          items:
            $ref: '#/components/schemas/CategoryParameterDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - categoryId
      type: object
    CategoryId:
      description: |
        Идентификатор категории на Маркете.

        При изменении категории убедитесь, что характеристики товара и их значения в параметре `parameterValues` вы передаете для новой категории.

        Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).
      format: int32
      minimum: 1
      type: integer
    OfferCardsContentStatusDTO:
      description: Список товаров с информацией о состоянии карточек.
      example:
        offerCards:
        - mapping:
            marketSkuName: marketSkuName
            marketCategoryName: marketCategoryName
            marketCategoryId: 4
            marketSku: 1
            marketModelId: 2
            marketModelName: marketModelName
          warnings:
          - comment: comment
            message: message
          - comment: comment
            message: message
          offerId: offerId
          contentRating: 0
          contentRatingStatus: UPDATING
          recommendations:
          - remainingRatingPoints: 60
            type: HAS_VIDEO
            percent: 14
          - remainingRatingPoints: 60
            type: HAS_VIDEO
            percent: 14
          cardStatus: HAS_CARD_CAN_NOT_UPDATE
          averageContentRating: 6
          errors:
          - comment: comment
            message: message
          - comment: comment
            message: message
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
        - mapping:
            marketSkuName: marketSkuName
            marketCategoryName: marketCategoryName
            marketCategoryId: 4
            marketSku: 1
            marketModelId: 2
            marketModelName: marketModelName
          warnings:
          - comment: comment
            message: message
          - comment: comment
            message: message
          offerId: offerId
          contentRating: 0
          contentRatingStatus: UPDATING
          recommendations:
          - remainingRatingPoints: 60
            type: HAS_VIDEO
            percent: 14
          - remainingRatingPoints: 60
            type: HAS_VIDEO
            percent: 14
          cardStatus: HAS_CARD_CAN_NOT_UPDATE
          averageContentRating: 6
          errors:
          - comment: comment
            message: message
          - comment: comment
            message: message
          parameterValues:
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
          - valueId: 5
            parameterId: 1
            unitId: 5
            value: value
        paging:
          nextPageToken: nextPageToken
      properties:
        offerCards:
          description: Страница списка товаров с информацией о состоянии карточек.
          items:
            $ref: '#/components/schemas/OfferCardDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - offerCards
      type: object
    OfferContentDTO:
      description: Товар с указанными характеристиками.
      example:
        offerId: offerId
        categoryId: 1
        parameterValues:
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        categoryId:
          description: |
            Идентификатор категории на Маркете.

            При изменении категории убедитесь, что характеристики товара и их значения в параметре `parameterValues` вы передаете для новой категории.

            Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).
          format: int32
          minimum: 1
          type: integer
        parameterValues:
          description: |
            Список характеристик с их значениями.

            С `parameterValues` обязательно передавайте `categoryId` — идентификатор категории на Маркете, к которой относятся указанные характеристики товара.

            При **изменении** характеристик передавайте только те, значение которых нужно обновить. Если в `categoryId` вы меняете категорию, значения общих характеристик для старой и новой категории сохранятся, передавать их не нужно.

            Чтобы **удалить** значение заданной характеристики, передайте ее `parameterId` с пустым `value`.
          items:
            $ref: '#/components/schemas/ParameterValueDTO'
          maxItems: 300
          minItems: 1
          type: array
      required:
      - categoryId
      - offerId
      - parameterValues
      type: object
    UpdateOfferContentResultDTO:
      description: "Ошибки и предупреждения, которые появились из-за переданных ха\
        рактеристик."
      example:
        warnings:
        - parameterId: 0
          type: OFFER_NOT_FOUND
          message: message
        - parameterId: 0
          type: OFFER_NOT_FOUND
          message: message
        offerId: offerId
        errors:
        - parameterId: 0
          type: OFFER_NOT_FOUND
          message: message
        - parameterId: 0
          type: OFFER_NOT_FOUND
          message: message
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        errors:
          description: |
            Ошибки.

            Если хотя бы по одному товару есть ошибка, информация в каталоге не обновится по всем переданным товарам.
          items:
            $ref: '#/components/schemas/OfferContentErrorDTO'
          minItems: 1
          nullable: true
          type: array
        warnings:
          description: |
            Предупреждения.

            Информация в каталоге обновится.
          items:
            $ref: '#/components/schemas/OfferContentErrorDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - offerId
      type: object
    CreateChatResultDTO:
      description: Информация о созданном чате.
      example:
        chatId: 1
      properties:
        chatId:
          description: Идентификатор чата.
          format: int64
          minimum: 1
          type: integer
      required:
      - chatId
      type: object
    ChatType:
      description: |
        Тип чата:

        * `CHAT` — чат с покупателем.
        * `ARBITRAGE` — спор.
      enum:
      - CHAT
      - ARBITRAGE
      type: string
    ChatStatusType:
      description: |
        Статус чата:

        * `NEW` — новый чат.
        * `WAITING_FOR_CUSTOMER` — нужен ответ покупателя.
        * `WAITING_FOR_PARTNER` — нужен ответ магазина.
        * `WAITING_FOR_ARBITER` — нужен ответ арбитра.
        * `WAITING_FOR_MARKET` — нужен ответ Маркета.
        * `FINISHED` — чат завершен.
      enum:
      - NEW
      - WAITING_FOR_CUSTOMER
      - WAITING_FOR_PARTNER
      - WAITING_FOR_ARBITER
      - WAITING_FOR_MARKET
      - FINISHED
      type: string
    GetChatsInfoDTO:
      description: Список чатов.
      example:
        chats:
        - createdAt: 2017-11-21T00:00:00+03:00
          chatId: 1
          orderId: 1
          type: CHAT
          status: NEW
          updatedAt: 2017-11-21T00:00:00+03:00
        - createdAt: 2017-11-21T00:00:00+03:00
          chatId: 1
          orderId: 1
          type: CHAT
          status: NEW
          updatedAt: 2017-11-21T00:00:00+03:00
        paging:
          nextPageToken: nextPageToken
      properties:
        chats:
          description: Информация о чатах.
          items:
            $ref: '#/components/schemas/GetChatInfoDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - chats
      type: object
    GetChatInfoDTO:
      description: Информация о чате.
      example:
        createdAt: 2017-11-21T00:00:00+03:00
        chatId: 1
        orderId: 1
        type: CHAT
        status: NEW
        updatedAt: 2017-11-21T00:00:00+03:00
      properties:
        chatId:
          description: Идентификатор чата.
          format: int64
          minimum: 1
          type: integer
        orderId:
          description: Идентификатор заказа.
          format: int64
          minimum: 1
          type: integer
        type:
          $ref: '#/components/schemas/ChatType'
        status:
          $ref: '#/components/schemas/ChatStatusType'
        createdAt:
          description: |
            Дата и время создания чата.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2017-11-21T00:00:00+03:00
          format: date-time
          type: string
        updatedAt:
          description: |
            Дата и время последнего сообщения в чате.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2017-11-21T00:00:00+03:00
          format: date-time
          type: string
      required:
      - chatId
      - createdAt
      - orderId
      - status
      - type
      - updatedAt
      type: object
    ChatMessageDTO:
      description: Информация о сообщении.
      example:
        createdAt: 2017-11-21T00:00:00+03:00
        sender: PARTNER
        payload:
        - size: 6
          name: name
          url: url
        - size: 6
          name: name
          url: url
        messageId: 1
        message: message
      properties:
        messageId:
          description: Идентификатор сообщения.
          format: int64
          minimum: 1
          type: integer
        createdAt:
          description: |
            Дата и время создания сообщения.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2017-11-21T00:00:00+03:00
          format: date-time
          type: string
        sender:
          $ref: '#/components/schemas/ChatMessageSenderType'
        message:
          description: |
            Текст сообщения.

            Необязательный параметр, если возвращается параметр `payload`.
          type: string
        payload:
          description: |
            Информация о приложенных к сообщению файлах.

            Необязательный параметр, если возвращается параметр `message`.
          items:
            $ref: '#/components/schemas/ChatMessagePayloadDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - createdAt
      - messageId
      - sender
      type: object
    ChatMessagesResultDTO:
      description: Информация о сообщениях.
      example:
        orderId: 0
        messages:
        - createdAt: 2017-11-21T00:00:00+03:00
          sender: PARTNER
          payload:
          - size: 6
            name: name
            url: url
          - size: 6
            name: name
            url: url
          messageId: 1
          message: message
        - createdAt: 2017-11-21T00:00:00+03:00
          sender: PARTNER
          payload:
          - size: 6
            name: name
            url: url
          - size: 6
            name: name
            url: url
          messageId: 1
          message: message
        paging:
          nextPageToken: nextPageToken
      properties:
        orderId:
          description: Идентификатор заказа.
          format: int64
          type: integer
        messages:
          description: Информация о сообщениях.
          items:
            $ref: '#/components/schemas/ChatMessageDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - messages
      - orderId
      type: object
    CalculateTariffsParametersDTO:
      description: Параметры для расчета стоимости услуг.
      example:
        campaignId: 1
        sellingProgram: FBY
        frequency: DAILY
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.

            У пользователя, который выполняет запрос, должен быть доступ к этой кампании.

            Используйте параметр `campaignId`, если уже завершили подключение магазина на Маркете. Иначе вернется пустой список.

            Обязательный параметр, если не указан параметр `sellingProgram`. Совместное использование параметров приведет к ошибке.
          format: int64
          minimum: 1
          type: integer
        sellingProgram:
          $ref: '#/components/schemas/SellingProgramType'
        frequency:
          $ref: '#/components/schemas/PaymentFrequencyType'
      type: object
    CalculateTariffsOfferDTO:
      description: "Параметры товара, для которого нужно рассчитать стоимость услу\
        г."
      example:
        quantity: 1
        price: 0.6027456183070403
        length: 0.14658129805029452
        width: 0.5962133916683182
        weight: 0.23021358869347652
        categoryId: 0
        height: 0.5637376656633328
      properties:
        categoryId:
          description: |
            Идентификатор категории товара на Маркете.

            Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.

            Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md).
          exclusiveMinimum: true
          format: int64
          minimum: 0
          type: integer
        price:
          description: Цена на товар в рублях.
          exclusiveMinimum: true
          minimum: 0
          type: number
        length:
          description: Длина товара в сантиметрах.
          exclusiveMinimum: true
          minimum: 0
          type: number
        width:
          description: Ширина товара в сантиметрах.
          exclusiveMinimum: true
          minimum: 0
          type: number
        height:
          description: Высота товара в сантиметрах.
          exclusiveMinimum: true
          minimum: 0
          type: number
        weight:
          description: Вес товара в килограммах.
          exclusiveMinimum: true
          minimum: 0
          type: number
        quantity:
          default: 1
          description: Квант продажи — количество единиц товара в одном товарном предложении.
          format: int32
          minimum: 1
          type: integer
      required:
      - categoryId
      - height
      - length
      - price
      - weight
      - width
      type: object
    CalculateTariffsResponseDTO:
      description: Расчет стоимости услуг.
      example:
        offers:
        - offer:
            quantity: 1
            price: 0.6027456183070403
            length: 0.14658129805029452
            width: 0.5962133916683182
            weight: 0.23021358869347652
            categoryId: 0
            height: 0.5637376656633328
          tariffs:
          - amount: 9.301444243932576
            type: AGENCY_COMMISSION
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - amount: 9.301444243932576
            type: AGENCY_COMMISSION
            parameters:
            - name: name
              value: value
            - name: name
              value: value
        - offer:
            quantity: 1
            price: 0.6027456183070403
            length: 0.14658129805029452
            width: 0.5962133916683182
            weight: 0.23021358869347652
            categoryId: 0
            height: 0.5637376656633328
          tariffs:
          - amount: 9.301444243932576
            type: AGENCY_COMMISSION
            parameters:
            - name: name
              value: value
            - name: name
              value: value
          - amount: 9.301444243932576
            type: AGENCY_COMMISSION
            parameters:
            - name: name
              value: value
            - name: name
              value: value
      properties:
        offers:
          description: Стоимость услуг.
          items:
            $ref: '#/components/schemas/CalculateTariffsOfferInfoDTO'
          type: array
      required:
      - offers
      type: object
    LanguageType:
      description: |
        Язык:

        * `RU` — русский.

        * `EN` — английский.
      enum:
      - RU
      - EN
      type: string
    CategoryDTO:
      description: |
        Информация о категории.

        Категория считается листовой, если у нее нет дочерних категорий.
      example:
        children:
        - null
        - null
        name: name
        id: 0
      properties:
        id:
          description: Идентификатор категории.
          format: int64
          type: integer
        name:
          description: Название категории.
          type: string
        children:
          description: Дочерние категории.
          items:
            $ref: '#/components/schemas/CategoryDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - id
      - name
      type: object
    GetCategoriesMaxSaleQuantumDTO:
      description: Категории и лимит на установку кванта и минимального количества
        товаров.
      properties:
        results:
          description: Категории и лимит на установку кванта и минимального количества
            товаров.
          items:
            $ref: '#/components/schemas/MaxSaleQuantumDTO'
          type: array
        errors:
          description: "Ошибки, которые появились из-за переданных категорий."
          items:
            $ref: '#/components/schemas/CategoryErrorDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - results
      type: object
    CampaignsQualityRatingDTO:
      description: Информация об индексе качества магазинов.
      example:
        campaignRatings:
        - campaignId: 0
          ratings:
          - components:
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            rating: 60
            calculationDate: 2000-01-23
          - components:
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            rating: 60
            calculationDate: 2000-01-23
        - campaignId: 0
          ratings:
          - components:
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            rating: 60
            calculationDate: 2000-01-23
          - components:
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            - componentType: DBS_CANCELLATION_RATE
              value: 14.658129805029452
            rating: 60
            calculationDate: 2000-01-23
      properties:
        campaignRatings:
          description: Список магазинов c информацией об их индексе качества.
          items:
            $ref: '#/components/schemas/CampaignQualityRatingDTO'
          type: array
      required:
      - campaignRatings
      type: object
    QualityRatingDetailsDTO:
      description: "Информация о заказах, которые повлияли на индекс качества."
      example:
        affectedOrders:
        - componentType: DBS_CANCELLATION_RATE
          orderId: 0
          description: description
        - componentType: DBS_CANCELLATION_RATE
          orderId: 0
          description: description
      properties:
        affectedOrders:
          description: "Список заказов, которые повлияли на индекс качества."
          items:
            $ref: '#/components/schemas/QualityRatingAffectedOrderDTO'
          type: array
      required:
      - affectedOrders
      type: object
    PromoParticipationType:
      description: |
        Какие акции вернутся:

        * `PARTICIPATING_NOW` — текущие и будущие акции продавца.

        * `PARTICIPATED` — завершенные акции продавца за последний год. Если за год их было меньше 15, в ответе придут 15 последних акций за все время.
      enum:
      - PARTICIPATING_NOW
      - PARTICIPATED
      type: string
    MechanicsType:
      description: |
        Тип акции:

        * `DIRECT_DISCOUNT` — прямая скидка.

        * `BLUE_FLASH` — флеш-акция.

        * `MARKET_PROMOCODE` — скидка по промокоду.
      enum:
      - DIRECT_DISCOUNT
      - BLUE_FLASH
      - MARKET_PROMOCODE
      type: string
    GetPromosResultDTO:
      description: Информация об акциях Маркета.
      example:
        promos:
        - period:
            dateTimeFrom: 2000-01-23T04:56:07.000+00:00
            dateTimeTo: 2000-01-23T04:56:07.000+00:00
          channels:
          - "{}"
          - "{}"
          mechanicsInfo:
            promocodeInfo:
              promocode: promocode
              discount: 1
            type: DIRECT_DISCOUNT
          bestsellerInfo:
            renewalEnabled: true
            bestseller: true
            entryDeadline: 2000-01-23T04:56:07.000+00:00
          name: name
          participating: true
          id: id
          constraints:
            warehouseIds:
            - 5
            - 5
          assortmentInfo:
            activeOffers: 0
            processing: true
            potentialOffers: 6
        - period:
            dateTimeFrom: 2000-01-23T04:56:07.000+00:00
            dateTimeTo: 2000-01-23T04:56:07.000+00:00
          channels:
          - "{}"
          - "{}"
          mechanicsInfo:
            promocodeInfo:
              promocode: promocode
              discount: 1
            type: DIRECT_DISCOUNT
          bestsellerInfo:
            renewalEnabled: true
            bestseller: true
            entryDeadline: 2000-01-23T04:56:07.000+00:00
          name: name
          participating: true
          id: id
          constraints:
            warehouseIds:
            - 5
            - 5
          assortmentInfo:
            activeOffers: 0
            processing: true
            potentialOffers: 6
      properties:
        promos:
          description: Акции Маркета.
          items:
            $ref: '#/components/schemas/GetPromoDTO'
          type: array
      required:
      - promos
      type: object
    PromoOfferParticipationStatusFilterType:
      description: |
        Фильтр для товаров, которые добавлены в акцию вручную:

        * `MANUALLY_ADDED` — товары, которые добавлены вручную.

        * `NOT_MANUALLY_ADDED`— товары, которые не участвуют в акции и те, которые добавлены автоматически.

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      enum:
      - MANUALLY_ADDED
      - NOT_MANUALLY_ADDED
      type: string
    PromoOfferParticipationStatusMultiFilterType:
      description: |
        Фильтр для товаров, которые могут участвовать в акции:

        * `MANUALLY_ADDED` — товары, которые добавлены вручную.

        * `RENEWED` — товары, которые добавлены автоматически из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `RENEW_FAILED` — товары, которые не получилось перенести из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `NOT_MANUALLY_ADDED` — товары, которые не участвуют в акции и те, которые добавлены автоматически.

        * `MINIMUM_FOR_PROMOS` — товары с установленным минимумом по цене для акций, который соответствует порогу `maxPromoPrice`. Такие товары участвуют в акции с ценой `maxPromoPrice`. Только для акций «Бестселлеры Маркета».

        Если не передать параметр `statuses`, вернутся все товары.

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      enum:
      - MANUALLY_ADDED
      - RENEWED
      - RENEW_FAILED
      - NOT_MANUALLY_ADDED
      - MINIMUM_FOR_PROMOS
      type: string
    GetPromoOffersResultDTO:
      description: "Список товаров, которые участвуют или могут участвовать в акци\
        и."
      example:
        offers:
        - offerId: offerId
          params:
            discountParams:
              promoPrice: 6
              maxPromoPrice: 1
              price: 0
            promocodeParams:
              maxPrice: 5
          status: AUTO
          autoParticipatingDetails:
            campaignIds:
            - 5
            - 5
        - offerId: offerId
          params:
            discountParams:
              promoPrice: 6
              maxPromoPrice: 1
              price: 0
            promocodeParams:
              maxPrice: 5
          status: AUTO
          autoParticipatingDetails:
            campaignIds:
            - 5
            - 5
        paging:
          nextPageToken: nextPageToken
      properties:
        offers:
          description: "Товары, которые участвуют или могут участвовать в акции."
          items:
            $ref: '#/components/schemas/GetPromoOfferDTO'
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - offers
      type: object
    UpdatePromoOfferDTO:
      description: "Описание товаров, которые участвуют в акции."
      example:
        offerId: offerId
        params:
          discountParams:
            promoPrice: 1
            price: 1
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        params:
          $ref: '#/components/schemas/UpdatePromoOfferParamsDTO'
      required:
      - offerId
      type: object
    UpdatePromoOffersResultDTO:
      description: "Ошибки и предупреждения, которые появились при добавлении това\
        ров в акцию."
      example:
        rejectedOffers:
        - reason: OFFER_DOES_NOT_EXIST
          offerId: offerId
        - reason: OFFER_DOES_NOT_EXIST
          offerId: offerId
        warningOffers:
        - warnings:
          - code: DEEP_DISCOUNT_OFFER
            campaignIds:
            - 0
            - 0
          - code: DEEP_DISCOUNT_OFFER
            campaignIds:
            - 0
            - 0
          offerId: offerId
        - warnings:
          - code: DEEP_DISCOUNT_OFFER
            campaignIds:
            - 0
            - 0
          - code: DEEP_DISCOUNT_OFFER
            campaignIds:
            - 0
            - 0
          offerId: offerId
      properties:
        rejectedOffers:
          description: |
            Изменения, которые были отклонены.

            Возвращается, только если есть отклоненные изменения.
          items:
            $ref: '#/components/schemas/RejectedPromoOfferUpdateDTO'
          minItems: 1
          nullable: true
          type: array
        warningOffers:
          description: |
            Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.

            Возвращается, только если есть предупреждения.
          items:
            $ref: '#/components/schemas/WarningPromoOfferUpdateDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    DeletePromoOffersResultDTO:
      description: |
        Результат удаления товаров из акции.

        Возвращается, только если в запросе был передан параметр `offerIds`.
      example:
        rejectedOffers:
        - reason: OFFER_DOES_NOT_EXIST
          offerId: offerId
        - reason: OFFER_DOES_NOT_EXIST
          offerId: offerId
      properties:
        rejectedOffers:
          description: |
            Товары, при удалении которых появились ошибки.

            Возвращается, только если есть такие товары.
          items:
            $ref: '#/components/schemas/RejectedPromoOfferDeleteDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    SupplyRequestId:
      description: |
        Идентификатор заявки.

        {% note warning "Используется только в API" %}

        По нему не получится найти заявки в кабинете продавца на Маркете. Для этого используйте `marketplaceRequestId` или `warehouseRequestId`.

        {% endnote %}
      format: int64
      minimum: 1
      type: integer
    SupplyRequestType:
      description: |
        Тип заявки:

        * `SUPPLY` — поставка товаров.
        * `WITHDRAW` — вывоз товаров.
        * `UTILIZATION` — утилизация товаров.
      enum:
      - SUPPLY
      - WITHDRAW
      - UTILIZATION
      type: string
    SupplyRequestSubType:
      description: |
        Подтип заявки:

        * `DEFAULT` — поставка товаров на склад хранения или вывоз с него.
        * `XDOC` — поставка товаров через транзитный склад или вывоз с него.
        * `INVENTORYING_SUPPLY` — инвентаризация на складе по запросу магазина.
        * `INVENTORYING_SUPPLY_WAREHOUSE_BASED_PER_SUPPLIER` — инвентаризация на складе по запросу склада.
        * `MOVEMENT_SUPPLY` — входящее перемещение между складами.

            При перемещении между складами создаются 2 заявки — `MOVEMENT_SUPPLY` и `MOVEMENT_WITHDRAW`.
        * `ADDITIONAL_SUPPLY` — дополнительная поставка непринятых товаров.
        * `VIRTUAL_DISTRIBUTION_CENTER` — родительская заявка при [мультипоставке](*multisupply).
        * `VIRTUAL_DISTRIBUTION_CENTER_CHILD` — дочерняя заявка при [мультипоставке](*multisupply).
        * `FORCE_PLAN` — автоматическая утилизация по запросу склада.
        * `FORCE_PLAN_ANOMALY_PER_SUPPLY` — утилизация непринятых товаров.
        * `PLAN_BY_SUPPLIER` — утилизация по запросу магазина.
        * `ANOMALY_WITHDRAW` — вывоз непринятых товаров.
        * `FIX_LOST_INVENTORYING` — товары, которые не нашли после второй инвентаризации.
        * `OPER_LOST_INVENTORYING` — товары, которые не нашли после первой инвентаризации.
        * `MOVEMENT_WITHDRAW` — исходящее перемещение между складами.

            При перемещении между складами создаются 2 заявки — `MOVEMENT_SUPPLY` и `MOVEMENT_WITHDRAW`.
        * `MISGRADING_SUPPLY` — пересортица в большую сторону.
        * `MISGRADING_WITHDRAW` — пересортица в меньшую сторону.
        * `MAN_UTIL` — ручная утилизация по запросу склада.
      enum:
      - DEFAULT
      - XDOC
      - INVENTORYING_SUPPLY
      - INVENTORYING_SUPPLY_WAREHOUSE_BASED_PER_SUPPLIER
      - MOVEMENT_SUPPLY
      - ADDITIONAL_SUPPLY
      - VIRTUAL_DISTRIBUTION_CENTER
      - VIRTUAL_DISTRIBUTION_CENTER_CHILD
      - FORCE_PLAN
      - FORCE_PLAN_ANOMALY_PER_SUPPLY
      - PLAN_BY_SUPPLIER
      - ANOMALY_WITHDRAW
      - FIX_LOST_INVENTORYING
      - OPER_LOST_INVENTORYING
      - MOVEMENT_WITHDRAW
      - MISGRADING_SUPPLY
      - MISGRADING_WITHDRAW
      - MAN_UTIL
      type: string
    SupplyRequestStatusType:
      description: |
        Статус заявки на поставку:

        * `CREATED` — создан черновик заявки.
        * `FINISHED` — заявка завершена, товары:
          * приняты на складе;
          * переданы на другой склад при перемещении;
          * переданы продавцу при вывозе;
          * утилизированы.
        * `CANCELLED` — заявка отменена.
        * `INVALID` — ошибка обработки.
        * `VALIDATED` — заявка в обработке.
        * `PUBLISHED` — создана заявка.
        * `ARRIVED_TO_SERVICE` — поставка прибыла на склад хранения.
        * `ARRIVED_TO_XDOC_SERVICE` — поставка прибыла на транзитный склад.
        * `SHIPPED_TO_SERVICE` — поставка отправлена с транзитного склада на склад хранения.
        * `CANCELLATION_REQUESTED` — запрошена отмена заявки.
        * `CANCELLATION_REJECTED` — заявка не будет отменена.
        * `REGISTERED_IN_ELECTRONIC_QUEUE` — поставка зарегистрирована в электронной очереди.
        * `READY_FOR_UTILIZATION` — товары готовы к утилизации.
        * `TRANSIT_MOVING` — перемещение товаров на склад вывоза.
        * `WAREHOUSE_HANDLING` — вторичная приемка товаров или их сборка для вывоза или утилизации.
        * `ACCEPTED_BY_WAREHOUSE_SYSTEM` — информация о заявке направлена на склад.
        * `READY_TO_WITHDRAW` — товары готовы к выдаче.
      enum:
      - CREATED
      - FINISHED
      - CANCELLED
      - INVALID
      - VALIDATED
      - PUBLISHED
      - ARRIVED_TO_SERVICE
      - ARRIVED_TO_XDOC_SERVICE
      - SHIPPED_TO_SERVICE
      - CANCELLATION_REQUESTED
      - CANCELLATION_REJECTED
      - REGISTERED_IN_ELECTRONIC_QUEUE
      - READY_FOR_UTILIZATION
      - TRANSIT_MOVING
      - WAREHOUSE_HANDLING
      - ACCEPTED_BY_WAREHOUSE_SYSTEM
      - READY_TO_WITHDRAW
      type: string
    SupplyRequestSortingDTO:
      description: Параметры сортировки.
      example:
        attribute: ID
        direction: ASC
      properties:
        direction:
          $ref: '#/components/schemas/SortOrderType'
        attribute:
          $ref: '#/components/schemas/SupplyRequestSortAttributeType'
      required:
      - attribute
      - direction
      type: object
    GetSupplyRequestsDTO:
      description: Список заявок и информация по ним.
      example:
        paging:
          nextPageToken: nextPageToken
        requests:
        - childrenLinks:
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          parentLink:
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          counters:
            undefinedCount: 0
            acceptableCount: 0
            actualPalletsCount: 0
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            actualBoxCount: 0
            factCount: 0
            defectCount: 0
            unacceptableCount: 0
          subtype: DEFAULT
          transitLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: SUPPLY
          targetLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - childrenLinks:
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          parentLink:
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          counters:
            undefinedCount: 0
            acceptableCount: 0
            actualPalletsCount: 0
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            actualBoxCount: 0
            factCount: 0
            defectCount: 0
            unacceptableCount: 0
          subtype: DEFAULT
          transitLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: SUPPLY
          targetLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - childrenLinks:
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          parentLink:
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          counters:
            undefinedCount: 0
            acceptableCount: 0
            actualPalletsCount: 0
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            actualBoxCount: 0
            factCount: 0
            defectCount: 0
            unacceptableCount: 0
          subtype: DEFAULT
          transitLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: SUPPLY
          targetLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - childrenLinks:
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          parentLink:
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          counters:
            undefinedCount: 0
            acceptableCount: 0
            actualPalletsCount: 0
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            actualBoxCount: 0
            factCount: 0
            defectCount: 0
            unacceptableCount: 0
          subtype: DEFAULT
          transitLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: SUPPLY
          targetLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - childrenLinks:
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          - id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          parentLink:
            id:
              marketplaceRequestId: marketplaceRequestId
              warehouseRequestId: warehouseRequestId
              id: 1
            type: VIRTUAL_DISTRIBUTION
          counters:
            undefinedCount: 0
            acceptableCount: 0
            actualPalletsCount: 0
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            actualBoxCount: 0
            factCount: 0
            defectCount: 0
            unacceptableCount: 0
          subtype: DEFAULT
          transitLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: SUPPLY
          targetLocation:
            address:
              fullAddress: fullAddress
              gps:
                latitude: 9.965781217890562
                longitude: 9.369310271410669
            name: name
            requestedDate: 2000-01-23T04:56:07.000+00:00
            serviceId: 7
            type: FULFILLMENT
          status: CREATED
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        requests:
          description: Список заявок.
          items:
            $ref: '#/components/schemas/SupplyRequestDTO'
          maxItems: 100
          minItems: 0
          nullable: false
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - requests
      type: object
    GetSupplyRequestItemsDTO:
      description: Информация о товарах в заявке.
      example:
        paging:
          nextPageToken: nextPageToken
        items:
        - counters:
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            factCount: 0
            defectCount: 0
          price:
            currencyId: RUR
            value: 2.3021358869347655
          name: name
          offerId: offerId
        - counters:
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            factCount: 0
            defectCount: 0
          price:
            currencyId: RUR
            value: 2.3021358869347655
          name: name
          offerId: offerId
        - counters:
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            factCount: 0
            defectCount: 0
          price:
            currencyId: RUR
            value: 2.3021358869347655
          name: name
          offerId: offerId
        - counters:
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            factCount: 0
            defectCount: 0
          price:
            currencyId: RUR
            value: 2.3021358869347655
          name: name
          offerId: offerId
        - counters:
            planCount: 0
            surplusCount: 0
            shortageCount: 0
            factCount: 0
            defectCount: 0
          price:
            currencyId: RUR
            value: 2.3021358869347655
          name: name
          offerId: offerId
      properties:
        items:
          description: Список товаров.
          items:
            $ref: '#/components/schemas/SupplyRequestItemDTO'
          maxItems: 100
          minItems: 0
          nullable: false
          type: array
        paging:
          $ref: '#/components/schemas/ForwardScrollingPagerDTO'
      required:
      - items
      type: object
    GetSupplyRequestDocumentsDTO:
      description: Информация о документах по заявке.
      example:
        documents:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          type: SUPPLY
          url: url
        - createdAt: 2000-01-23T04:56:07.000+00:00
          type: SUPPLY
          url: url
      properties:
        documents:
          description: Список документов.
          items:
            $ref: '#/components/schemas/SupplyRequestDocumentDTO'
          minItems: 0
          nullable: false
          type: array
      required:
      - documents
      type: object
    TokenDTO:
      description: Информация об авторизационном токене.
      example:
        apiKey:
          authScopes:
          - ALL_METHODS
          - ALL_METHODS
          name: name
      properties:
        apiKey:
          $ref: '#/components/schemas/ApiKeyDTO'
      required:
      - apiKey
      type: object
    ApiResponseStatusType:
      description: |
        Тип ответа.
        Возможные значения:
        * `OK` — ошибок нет.
        * `ERROR` — при обработке запроса произошла ошибка.
      enum:
      - OK
      - ERROR
      type: string
    BusinessDTO:
      description: Информация о кабинете.
      example:
        name: name
        id: 0
      properties:
        id:
          description: Идентификатор кабинета.
          format: int64
          type: integer
        name:
          description: Название бизнеса.
          type: string
      type: object
    BusinessSettingsDTO:
      description: Настройки кабинета.
      example:
        currency: RUR
        onlyDefaultPrice: true
      properties:
        onlyDefaultPrice:
          description: |
            Управление ценами на товары:

            * `false` — можно установить цену, которая действует:
              * во всех магазинах кабинета — [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md);
              * в конкретном магазине — [POST campaigns/{campaignId}/offer-prices/updates](../../reference/assortment/updatePrices.md).
            * `true` — можно установить только цену, которая действует во всех магазинах кабинета, — [POST businesses/{businessId}/offer-prices/updates](../../reference/business-assortment/updateBusinessPrices.md).
          type: boolean
        currency:
          $ref: '#/components/schemas/CurrencyType'
      type: object
    ApiErrorDTO:
      description: Общий формат ошибки.
      example:
        code: code
        message: message
      properties:
        code:
          description: Код ошибки.
          type: string
        message:
          description: Описание ошибки.
          type: string
      required:
      - code
      type: object
    CampaignSettingsLocalRegionDTO:
      description: Информация о своем регионе магазина.
      example:
        delivery:
          schedule:
            customWorkingDays:
            - 23-09-2022
            - 23-09-2022
            period:
              fromDate: 23-09-2022
              toDate: 23-09-2022
            customHolidays:
            - 23-09-2022
            - 23-09-2022
            weeklyHolidays:
            - 1
            - 1
            availableOnHolidays: true
            totalHolidays:
            - 23-09-2022
            - 23-09-2022
        name: name
        id: 6
        type: OTHER
        deliveryOptionsSource: WEB
      properties:
        id:
          description: Идентификатор региона.
          format: int64
          type: integer
        name:
          description: Название региона.
          type: string
        type:
          $ref: '#/components/schemas/RegionType'
        deliveryOptionsSource:
          $ref: '#/components/schemas/CampaignSettingsScheduleSourceType'
        delivery:
          $ref: '#/components/schemas/CampaignSettingsDeliveryDTO'
      type: object
    RegionType:
      description: |
        Тип региона.

        Возможные значения:

        * `CITY_DISTRICT` — район города.

        * `CITY` — крупный город.

        * `CONTINENT` — континент.

        * `COUNTRY_DISTRICT` — область.

        * `COUNTRY` — страна.

        * `REGION` — регион.

        * `REPUBLIC_AREA` — район субъекта федерации.

        * `REPUBLIC` — субъект федерации.

        * `SUBWAY_STATION` — станция метро.

        * `VILLAGE` — город.

        * `OTHER` — неизвестный регион.
      enum:
      - OTHER
      - CONTINENT
      - REGION
      - COUNTRY
      - COUNTRY_DISTRICT
      - REPUBLIC
      - CITY
      - VILLAGE
      - CITY_DISTRICT
      - SUBWAY_STATION
      - REPUBLIC_AREA
      type: string
    DateDdMmYyyyHhMmSs:
      example: 23-09-2022 09:12:41
      format: date-dd-MM-yyyy-HH-mm-ss
      type: string
    OrderPaymentType:
      description: |
        Тип оплаты заказа:

        * `PREPAID` — оплата при оформлении заказа.

        * `POSTPAID` — оплата при получении заказа.

        * `UNKNOWN` — неизвестный тип.

        Если параметр отсутствует, заказ будет оплачен при получении.
      enum:
      - PREPAID
      - POSTPAID
      - UNKNOWN
      type: string
    OrderPaymentMethodType:
      description: |
        Способ оплаты заказа:

        * Значения, если выбрана оплата при оформлении заказа (`"paymentType": "PREPAID"`):

          * `YANDEX` — банковской картой.

          * `APPLE_PAY` — Apple Pay.

          * `GOOGLE_PAY` — Google Pay.

          * `CREDIT` — в кредит.

          * `TINKOFF_CREDIT` — в кредит в Тинькофф Банке.

          * `TINKOFF_INSTALLMENTS` — рассрочка в Тинькофф Банке.

          * `EXTERNAL_CERTIFICATE` — подарочным сертификатом (например, из приложения «Сбербанк Онлайн»).

          * `SBP` — через систему быстрых платежей.

          * `B2B_ACCOUNT_PREPAYMENT` — заказ оплачивает организация.


        * Значения, если выбрана оплата при получении заказа (`"paymentType": "POSTPAID"`):

          * `CARD_ON_DELIVERY` — банковской картой.

          * `BOUND_CARD_ON_DELIVERY` — привязанной картой при получении.

          * `BNPL_BANK_ON_DELIVERY` — супер Сплитом.

          * `BNPL_ON_DELIVERY` — Сплитом.

          * `CASH_ON_DELIVERY` — наличными.

          * `B2B_ACCOUNT_POSTPAYMENT` — заказ оплачивает организация после доставки.

        * `UNKNOWN` — неизвестный тип.

        Значение по умолчанию: `CASH_ON_DELIVERY`.
      enum:
      - CASH_ON_DELIVERY
      - CARD_ON_DELIVERY
      - BOUND_CARD_ON_DELIVERY
      - BNPL_BANK_ON_DELIVERY
      - BNPL_ON_DELIVERY
      - YANDEX
      - APPLE_PAY
      - EXTERNAL_CERTIFICATE
      - CREDIT
      - GOOGLE_PAY
      - TINKOFF_CREDIT
      - SBP
      - TINKOFF_INSTALLMENTS
      - B2B_ACCOUNT_PREPAYMENT
      - B2B_ACCOUNT_POSTPAYMENT
      - UNKNOWN
      type: string
    OrderItemDTO:
      description: Список товаров в заказе.
      example:
        offerName: offerName
        subsidy: 1.0246457001441578
        instances:
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          cisFull: cisFull
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          cisFull: cisFull
          uin: uin
          cis: cis
        priceBeforeDiscount: 7.386281948385884
        count: 1
        vat: NO_VAT
        requiredInstanceTypes:
        - CIS
        - CIS
        tags:
        - ULTIMA
        - ULTIMA
        buyerPriceBeforeDiscount: 4.145608029883936
        shopSku: shopSku
        price: 3.616076749251911
        partnerWarehouseId: partnerWarehouseId
        subsidies:
        - amount: 1.1730742509559433
          type: YANDEX_CASHBACK
        - amount: 1.1730742509559433
          type: YANDEX_CASHBACK
        offerId: offerId
        buyerPrice: 2.027123023002322
        details:
        - updateDate: 23-09-2022
          itemStatus: REJECTED
          itemCount: 7
        - updateDate: 23-09-2022
          itemStatus: REJECTED
          itemCount: 7
        id: 9
        promos:
        - subsidy: 6.84685269835264
          shopPromoId: shopPromoId
          discount: 1.4894159098541704
          marketPromoId: marketPromoId
          type: DIRECT_DISCOUNT
        - subsidy: 6.84685269835264
          shopPromoId: shopPromoId
          discount: 1.4894159098541704
          marketPromoId: marketPromoId
          type: DIRECT_DISCOUNT
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Позволяет идентифицировать товар в рамках данного заказа.
          format: int64
          type: integer
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        offerName:
          description: Название товара.
          type: string
        price:
          description: |
            Цена на товар в валюте заказа без учета вознаграждения партнеру за скидки по промокодам, купонам и акциям (параметр `subsidies`).
          format: decimal
          type: number
        buyerPrice:
          description: |
            Цена на товар в валюте покупателя. В цене уже учтены скидки по:

            * акциям;
            * купонам;
            * промокодам.
          format: decimal
          type: number
        buyerPriceBeforeDiscount:
          description: |
            Стоимость товара в валюте покупателя до применения скидок по:

            * акциям;
            * купонам;
            * промокодам.
          format: decimal
          type: number
        priceBeforeDiscount:
          deprecated: true
          description: Стоимость товара в валюте магазина до применения скидок.
          format: decimal
          type: number
        count:
          description: Количество единиц товара.
          type: integer
        vat:
          $ref: '#/components/schemas/OrderVatType'
        shopSku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        subsidy:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `subsidies`." %}

             

            {% endnote %}

            Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:

            * по промокодам;
            * по купонам;
            * по баллам Плюса;
            * по акциям.
          format: decimal
          type: number
        partnerWarehouseId:
          deprecated: true
          description: "Идентификатор склада в системе партнера, на который сформи\
            рован заказ."
          type: string
        promos:
          description: "Информация о вознаграждениях партнеру за скидки на товар п\
            о промокодам, купонам и акциям."
          items:
            $ref: '#/components/schemas/OrderItemPromoDTO'
          minItems: 1
          nullable: true
          type: array
        instances:
          description: |
            Информация о маркировке единиц товара.

            Возвращаются данные для маркировки, переданные в запросе [PUT campaigns/{campaignId}/orders/{orderId}/identifiers](../../reference/orders/provideOrderItemIdentifiers.md).

            Если магазин еще не передавал коды для этого заказа, `instances` отсутствует.
          items:
            $ref: '#/components/schemas/OrderItemInstanceDTO'
          minItems: 1
          nullable: true
          type: array
        details:
          deprecated: true
          description: |
            {% note warning "Для получения информации о невыкупах и возвратах используйте [GET campaigns/{campaignId}/returns](../../reference/orders/getReturns.md)." %}

             

            {% endnote %}

            Информация о невыкупленных или возвращенных товарах в заказе.
          items:
            $ref: '#/components/schemas/OrderItemDetailDTO'
          minItems: 1
          nullable: true
          type: array
        subsidies:
          description: Список субсидий по типам.
          items:
            $ref: '#/components/schemas/OrderItemSubsidyDTO'
          minItems: 1
          nullable: true
          type: array
        requiredInstanceTypes:
          description: Список необходимых маркировок товара.
          items:
            $ref: '#/components/schemas/OrderItemInstanceType'
          minItems: 1
          nullable: true
          type: array
        tags:
          description: Признаки товара.
          items:
            $ref: '#/components/schemas/OrderItemTagType'
          minItems: 1
          nullable: true
          type: array
      required:
      - buyerPrice
      - buyerPriceBeforeDiscount
      - count
      - id
      - offerId
      - offerName
      - price
      - vat
      type: object
    OrderSubsidyDTO:
      description: |
        Общее вознаграждение партнеру за DBS-доставку и все скидки на товар:

        * по промокодам, купонам и акциям;
        * по баллам Плюса;
        * по доставке (DBS).
      example:
        amount: 4.965218492984954
        type: YANDEX_CASHBACK
      properties:
        type:
          $ref: '#/components/schemas/OrderSubsidyType'
        amount:
          description: Сумма субсидии.
          format: decimal
          type: number
      required:
      - amount
      - type
      type: object
    OrderDeliveryDTO:
      description: Информация о доставке.
      example:
        dispatchType: UNKNOWN
        address:
          country: country
          city: city
          postcode: postcode
          gps:
            latitude: 9.965781217890562
            longitude: 9.369310271410669
          house: house
          subway: subway
          phone: phone
          street: street
          district: district
          recipient: recipient
          entryphone: entryphone
          block: block
          entrance: entrance
          floor: floor
          apartment: apartment
        liftType: NOT_NEEDED
        deliveryServiceId: 6
        vat: null
        estimated: true
        dates:
          fromDate: 23-09-2022
          toDate: 23-09-2022
          fromTime: fromTime
          toTime: toTime
          realDeliveryDate: 23-09-2022
        type: DELIVERY
        serviceName: serviceName
        shipments:
        - boxes:
          - fulfilmentId: fulfilmentId
            id: 3
          - fulfilmentId: fulfilmentId
            id: 3
          id: 6
          shipmentDate: 23-09-2022
          shipmentTime: shipmentTime
          tracks:
          - trackCode: trackCode
            deliveryServiceId: 9
          - trackCode: trackCode
            deliveryServiceId: 9
        - boxes:
          - fulfilmentId: fulfilmentId
            id: 3
          - fulfilmentId: fulfilmentId
            id: 3
          id: 6
          shipmentDate: 23-09-2022
          shipmentTime: shipmentTime
          tracks:
          - trackCode: trackCode
            deliveryServiceId: 9
          - trackCode: trackCode
            deliveryServiceId: 9
        tracks:
        - trackCode: trackCode
          deliveryServiceId: 9
        - trackCode: trackCode
          deliveryServiceId: 9
        courier:
          vehicleDescription: vehicleDescription
          phone: phone
          phoneExtension: phoneExtension
          fullName: fullName
          vehicleNumber: vehicleNumber
        price: 5.025004791520295
        outletStorageLimitDate: 23-09-2022
        eacType: MERCHANT_TO_COURIER
        liftPrice: 8.762042012749001
        eacCode: eacCode
        id: id
        region:
          parent: null
          children:
          - null
          - null
          name: name
          id: 0
          type: OTHER
        deliveryPartnerType: SHOP
        outletCode: outletCode
      properties:
        id:
          deprecated: true
          description: |
            Идентификатор доставки, присвоенный магазином.

            Указывается, только если магазин передал данный идентификатор в ответе на запрос методом `POST cart`.
          type: string
        type:
          $ref: '#/components/schemas/OrderDeliveryType'
        serviceName:
          description: Наименование службы доставки.
          type: string
        price:
          deprecated: true
          description: |
            {% note warning "Стоимость доставки смотрите в параметре `deliveryTotal`." %}

             

            {% endnote %}

            Стоимость доставки в валюте заказа.
          format: decimal
          type: number
        deliveryPartnerType:
          $ref: '#/components/schemas/OrderDeliveryPartnerType'
        courier:
          $ref: '#/components/schemas/OrderCourierDTO'
        dates:
          $ref: '#/components/schemas/OrderDeliveryDatesDTO'
        region:
          $ref: '#/components/schemas/RegionDTO'
        address:
          $ref: '#/components/schemas/OrderDeliveryAddressDTO'
        vat:
          $ref: '#/components/schemas/OrderVatType'
        deliveryServiceId:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
        liftType:
          $ref: '#/components/schemas/OrderLiftType'
        liftPrice:
          description: Стоимость подъема на этаж.
          format: decimal
          type: number
        outletCode:
          description: "Идентификатор пункта самовывоза, присвоенный магазином."
          type: string
        outletStorageLimitDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        dispatchType:
          $ref: '#/components/schemas/OrderDeliveryDispatchType'
        tracks:
          description: Информация для отслеживания перемещений посылки.
          items:
            $ref: '#/components/schemas/OrderTrackDTO'
          minItems: 1
          nullable: true
          type: array
        shipments:
          description: Информация о посылках.
          items:
            $ref: '#/components/schemas/OrderShipmentDTO'
          minItems: 1
          nullable: true
          type: array
        estimated:
          description: Приблизительная ли дата доставки.
          type: boolean
        eacType:
          $ref: '#/components/schemas/OrderDeliveryEacType'
        eacCode:
          description: |
            Код подтверждения ЭАПП (для типа `MERCHANT_TO_COURIER`).
          type: string
      required:
      - dates
      - deliveryPartnerType
      - deliveryServiceId
      - serviceName
      - type
      type: object
    OrderBuyerDTO:
      allOf:
      - $ref: '#/components/schemas/OrderBuyerBasicInfoDTO'
      - type: object
      description: |
        Информация о покупателе.

        Параметры `id`, `lastName`, `firstName` и `middleName` возвращаются, только если вы работаете по модели DBS.
      example:
        lastName: lastName
        firstName: firstName
        middleName: middleName
        id: id
        type: PERSON
      type: object
    OrderTaxSystemType:
      description: |
        Система налогообложения (СНО) магазина на момент оформления заказа:

        * `ECHN` — единый сельскохозяйственный налог (ЕСХН).

        * `ENVD` — единый налог на вмененный доход (ЕНВД).

        * `OSN` — общая система налогообложения (ОСН).

        * `PSN` — патентная система налогообложения (ПСН).

        * `USN` — упрощенная система налогообложения (УСН).

        * `USN_MINUS_COST` — упрощенная система налогообложения, доходы, уменьшенные на величину расходов (УСН «Доходы минус расходы»).

        * `NPD` — налог на профессиональный доход (НПД).

        * `UNKNOWN_VALUE` — неизвестное значение.
        Используется только совместно с параметром `payment-method=YANDEX`.
      enum:
      - OSN
      - USN
      - USN_MINUS_COST
      - ENVD
      - ECHN
      - PSN
      - NPD
      - UNKNOWN_VALUE
      type: string
    BriefOrderItemInstanceDTO:
      description: |
        Идентификатор единицы товара.

        Заполните только одно поле в зависимости от того, в какой системе маркирован товар.

        Подробно о работе с маркируемыми товарами рассказано [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/orders/cz.html).
      example:
        rnpt: rnpt
        gtd: gtd
        countryCode: RU
        uin: uin
        cis: cis
      properties:
        cis:
          description: |
            Код идентификации единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).

            {% note warning "Не экранируйте косую черту в коде символа-разделителя `\u001d`" %}

            ✅ `01030410947874432155Qbag!\u001d93Zjqw`

            ❌ `01030410947874432155Qbag!\\u001d93Zjqw`

            Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\` и `\"`

            {% endnote %}
          type: string
        uin:
          description: |
            Уникальный идентификационный номер ювелирного изделия.

            Представляет собой число из 16 цифр.
          type: string
        rnpt:
          description: |
            Регистрационный номер партии товара.

            Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
          type: string
        gtd:
          description: |
            Грузовая таможенная декларация.

            Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
          type: string
        countryCode:
          description: |
            Страна производства в формате ISO 3166-1 alpha-2. [Как получить](../../reference/regions/getRegionsCodes.md)
          example: RU
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: string
      type: object
    BriefOrderItemDTO:
      description: Информация о маркированном товаре.
      example:
        offerName: offerName
        instances:
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          cisFull: cisFull
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          cisFull: cisFull
          uin: uin
          cis: cis
        price: 1.4658129805029452
        vat: NO_VAT
        count: 6
        offerId: offerId
        id: 0
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Позволяет идентифицировать товар в рамках данного заказа.
          format: int64
          type: integer
        vat:
          $ref: '#/components/schemas/OrderVatType'
        count:
          description: Количество единиц товара.
          format: int32
          type: integer
        price:
          description: |
            Цена на товар. Указана в той валюте, которая была задана в каталоге. Разделитель целой и дробной части — точка.
          type: number
        offerName:
          description: Название товара.
          type: string
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        instances:
          description: Переданные вами коды маркировки.
          items:
            $ref: '#/components/schemas/OrderItemInstanceDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    OrderStatusChangeDeliveryDTO:
      description: Информация о доставке.
      example:
        dates:
          realDeliveryDate: 2000-01-23
      properties:
        dates:
          $ref: '#/components/schemas/OrderStatusChangeDeliveryDatesDTO'
      type: object
    UpdateOrderStatusDTO:
      description: Список заказов.
      example:
        substatus: RESERVATION_EXPIRED
        updateStatus: OK
        id: 0
        status: PLACING
        errorDetails: errorDetails
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OrderStatusType'
        substatus:
          $ref: '#/components/schemas/OrderSubstatusType'
        updateStatus:
          $ref: '#/components/schemas/OrderUpdateStatusType'
        errorDetails:
          description: |
            Ошибка при изменении статуса заказа. Содержит описание ошибки и идентификатор заказа.

            Возвращается, если параметр `updateStatus` принимает значение `ERROR`.
          type: string
      type: object
    ParcelBoxRequestDTO:
      description: "Параметр отображает одно грузовое место. Вложенные поля больше\
        \ не используются, передавайте параметр пустым."
      example:
        fulfilmentId: fulfilmentId
      properties:
        fulfilmentId:
          deprecated: true
          description: |
            {% note warning "Не используйте этот параметр." %}

             

            {% endnote %}
          pattern: "^[\\p{Alnum}- ]*$"
          type: string
      type: object
    ParcelBoxDTO:
      description: Параметр отображает одно грузовое место.
      example:
        fulfilmentId: fulfilmentId
        id: 0
      properties:
        id:
          description: Идентификатор коробки в составе заказа.
          format: int64
          type: integer
        fulfilmentId:
          deprecated: true
          description: |
            {% note warning "Не используйте этот параметр." %}

             

            {% endnote %}
          pattern: "^[\\p{Alnum}- ]*$"
          type: string
      type: object
    OrderBoxLayoutItemDTO:
      description: Информация о товаре в коробке.
      example:
        partialCount:
          current: 1
          total: 2
        instances:
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          uin: uin
          cis: cis
        - rnpt: rnpt
          gtd: gtd
          countryCode: RU
          uin: uin
          cis: cis
        id: 0
        fullCount: 1
      properties:
        id:
          description: |
            Идентификатор товара в заказе.

            Он приходит в ответе на запрос [GET campaigns/{campaignId}/orders/{orderId}](../../reference/orders/getOrder.md) — параметр `id` в `items`.
          format: int64
          type: integer
        fullCount:
          description: |
            Количество единиц товара в коробке.

            Используйте это поле, если в коробке поедут целые товары, не разделенные на части. Не используйте это поле одновременно с `partialCount`.
          format: int32
          minimum: 1
          type: integer
        partialCount:
          $ref: '#/components/schemas/OrderBoxLayoutPartialCountDTO'
        instances:
          description: Переданные вами коды маркировки.
          items:
            $ref: '#/components/schemas/BriefOrderItemInstanceDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - id
      type: object
    EnrichedOrderBoxLayoutDTO:
      allOf:
      - $ref: '#/components/schemas/OrderBoxLayoutDTO'
      - properties:
          boxId:
            description: Идентификатор коробки.
            format: int64
            type: integer
        type: object
      description: Информация о коробке.
      example:
        items:
        - partialCount:
            current: 1
            total: 2
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          id: 0
          fullCount: 1
        - partialCount:
            current: 1
            total: 2
          instances:
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          - rnpt: rnpt
            gtd: gtd
            countryCode: RU
            uin: uin
            cis: cis
          id: 0
          fullCount: 1
        boxId: 5
      type: object
    OrderItemValidationStatusDTO:
      description: Идентификатор товара и статус проверки его УИНа.
      example:
        id: 0
        uin:
        - value: value
          status: OK
        - value: value
          status: OK
      properties:
        id:
          description: Идентификатор товара в заказе.
          format: int64
          type: integer
        uin:
          description: Статусы проверки УИНов.
          items:
            $ref: '#/components/schemas/UinDTO'
          type: array
      required:
      - id
      - uin
      type: object
    OrderBuyerBasicInfoDTO:
      description: Информация о покупателе с базовыми полями.
      properties:
        id:
          description: Идентификатор покупателя.
          type: string
        lastName:
          description: Фамилия покупателя.
          type: string
        firstName:
          description: Имя покупателя.
          type: string
        middleName:
          description: Отчество покупателя.
          type: string
        type:
          $ref: '#/components/schemas/OrderBuyerType'
      required:
      - type
      type: object
    EacVerificationStatusType:
      description: |
        Статус проверки кода подтверждения:

        * `ACCEPTED` — код верный.
        * `REJECTED` — код неверный.
        * `NEED_UPDATE` — Маркет отправит новый код. Значение возвращается, если превышено количество попыток отправки кода.
      enum:
      - ACCEPTED
      - REJECTED
      - NEED_UPDATE
      type: string
    ParcelBoxLabelDTO:
      description: Информация о ярлыке для коробки.
      example:
        supplierName: supplierName
        deliveryServiceId: deliveryServiceId
        orderId: 1
        fulfilmentId: fulfilmentId
        orderNum: orderNum
        weight: weight
        url: url
        deliveryServiceName: deliveryServiceName
        deliveryAddress: deliveryAddress
        recipientName: recipientName
        place: place
        shipmentDate: shipmentDate
        boxId: 5
      properties:
        url:
          description: |
            Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/shipments/{shipmentId}/boxes/{boxId}/label](../../reference/orders/generateOrderLabel.md).
          type: string
        supplierName:
          description: Юридическое название магазина.
          type: string
        deliveryServiceName:
          description: Юридическое название службы доставки.
          type: string
        orderId:
          description: Идентификатор заказа в системе Маркета.
          format: int64
          type: integer
        orderNum:
          description: |
            Идентификатор заказа в информационной системе магазина.

            Совпадает с `orderId`, если Маркету неизвестен номер заказа в системе магазина.
          type: string
        recipientName:
          description: Фамилия и инициалы получателя заказа.
          type: string
        boxId:
          description: Идентификатор коробки.
          format: int64
          type: integer
        fulfilmentId:
          description: |
            Идентификатор коробки в информационной системе магазина.

            Возвращается в формате: `номер заказа на Маркете-номер коробки`. Например, `7206821‑1`, `7206821‑2` и т. д.
          type: string
        place:
          description: |
            Номер коробки в заказе. Возвращается в формате: `номер места/общее количество мест`.
          type: string
        weight:
          deprecated: true
          description: |
            Общая масса всех товаров в заказе.

            Возвращается в формате: `weight кг`.
          type: string
        deliveryServiceId:
          description: "Идентификатор службы доставки. Информацию о службе доставк\
            и можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md)."
          type: string
        deliveryAddress:
          description: Адрес получателя.
          type: string
        shipmentDate:
          description: Дата отгрузки в формате `dd.MM.yyyy`.
          type: string
      required:
      - boxId
      - deliveryServiceId
      - deliveryServiceName
      - fulfilmentId
      - orderId
      - orderNum
      - place
      - recipientName
      - supplierName
      - url
      - weight
      type: object
    DocumentDTO:
      description: Информация о документе.
      example:
        date: 2000-01-23
        number: number
        status: READY
      properties:
        status:
          $ref: '#/components/schemas/OrderDocumentStatusType'
        number:
          description: Номер документа.
          type: string
        date:
          description: Дата создания документа.
          format: date
          type: string
      type: object
    LogisticPickupPointDTO:
      description: Описание пункта вывоза для возврата.
      example:
        logisticPartnerId: 5
        address:
          country: Россия
          city: Москва
          street: Стрелецкая улица
          postcode: "123518"
          house: 9к2
        instruction: instruction
        name: name
        id: 1
        type: WAREHOUSE
      properties:
        id:
          description: Идентификатор пункта вывоза.
          format: int64
          type: integer
        name:
          description: Название пункта вывоза.
          type: string
        address:
          $ref: '#/components/schemas/PickupAddressDTO'
        instruction:
          description: Дополнительные инструкции к вывозу.
          type: string
        type:
          $ref: '#/components/schemas/LogisticPointType'
        logisticPartnerId:
          description: "Идентификатор логистического партнера, к которому относитс\
            я логистическая точка."
          format: int64
          type: integer
      type: object
    RecipientType:
      description: |
        Способ возврата товара покупателем:

        * `SHOP` — в точку возврата магазина.

        * `DELIVERY_SERVICE` — отправить курьером.

        * `POST` — почта.
      enum:
      - SHOP
      - DELIVERY_SERVICE
      - POST
      type: string
    CurrencyValueDTO:
      description: Валюта и ее значение.
      example:
        currencyId: RUR
        value: 2.3021358869347655
      properties:
        value:
          description: Значение.
          type: number
        currencyId:
          $ref: '#/components/schemas/CurrencyType'
      required:
      - currencyId
      - value
      type: object
    ReturnItemDTO:
      description: Список товаров в невыкупе или возврате.
      example:
        shopSku: shopSku
        instances:
        - stockType: FIT
          imei: imei
          cis: cis
          status: CREATED
        - stockType: FIT
          imei: imei
          cis: cis
          status: CREATED
        marketSku: 1
        count: 9
        decisions:
        - amount:
            currencyId: RUR
            value: 2.3021358869347655
          images:
          - images
          - images
          returnItemId: 3
          subreasonType: USER_DID_NOT_LIKE
          count: 2
          partnerCompensationAmount:
            currencyId: RUR
            value: 2.3021358869347655
          comment: comment
          decisionType: REFUND_MONEY
          reasonType: BAD_QUALITY
          partnerCompensation: 7
          refundAmount: 4
        - amount:
            currencyId: RUR
            value: 2.3021358869347655
          images:
          - images
          - images
          returnItemId: 3
          subreasonType: USER_DID_NOT_LIKE
          count: 2
          partnerCompensationAmount:
            currencyId: RUR
            value: 2.3021358869347655
          comment: comment
          decisionType: REFUND_MONEY
          reasonType: BAD_QUALITY
          partnerCompensation: 7
          refundAmount: 4
        tracks:
        - trackCode: trackCode
        - trackCode: trackCode
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
        shopSku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        count:
          description: Количество единиц товара.
          format: int64
          type: integer
        decisions:
          description: Список решений по возврату.
          items:
            $ref: '#/components/schemas/ReturnDecisionDTO'
          minItems: 1
          nullable: true
          type: array
        instances:
          description: Список логистических позиций возврата.
          items:
            $ref: '#/components/schemas/ReturnInstanceDTO'
          minItems: 1
          nullable: true
          type: array
        tracks:
          description: Список трек-кодов для почтовых отправлений.
          items:
            $ref: '#/components/schemas/TrackDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - count
      - shopSku
      type: object
    CountryCode:
      description: |
        Страна производства в формате ISO 3166-1 alpha-2. [Как получить](../../reference/regions/getRegionsCodes.md)
      example: RU
      maxLength: 2
      minLength: 2
      pattern: "^[A-Z]{2}$"
      type: string
    BaseShipmentDTO:
      description: Информация об отгрузке.
      properties:
        id:
          description: Идентификатор отгрузки.
          format: int64
          minimum: 1
          type: integer
        planIntervalFrom:
          description: |
            Начало планового интервала отгрузки.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2017-11-21T00:00:00+03:00
          format: date-time
          type: string
        planIntervalTo:
          description: |
            Конец планового интервала отгрузки.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2017-11-21T00:00:00+03:00
          format: date-time
          type: string
        shipmentType:
          $ref: '#/components/schemas/ShipmentType'
        warehouse:
          $ref: '#/components/schemas/PartnerShipmentWarehouseDTO'
        warehouseTo:
          $ref: '#/components/schemas/PartnerShipmentWarehouseDTO'
        externalId:
          description: "Идентификатор отгрузки в вашей системе. Если вы еще не пер\
            едавали идентификатор, вернется идентификатор из параметра `id`."
          type: string
        deliveryService:
          $ref: '#/components/schemas/DeliveryServiceDTO'
        palletsCount:
          $ref: '#/components/schemas/PalletsCountDTO'
        orderIds:
          description: Идентификаторы заказов в отгрузке.
          items:
            format: int64
            minimum: 1
            type: integer
          type: array
          uniqueItems: true
        draftCount:
          description: "Количество заказов, которое Маркет запланировал к отгрузке\
            ."
          format: int32
          minimum: 0
          type: integer
        plannedCount:
          description: "Количество заказов, которое Маркет подтвердил к отгрузке."
          format: int32
          minimum: 0
          type: integer
        factCount:
          description: "Количество заказов, принятых в сортировочном центре или пу\
            нкте приема."
          format: int32
          minimum: 0
          type: integer
        signature:
          $ref: '#/components/schemas/SignatureDTO'
      required:
      - draftCount
      - factCount
      - id
      - orderIds
      - planIntervalFrom
      - planIntervalTo
      - plannedCount
      - signature
      type: object
    ExtensionShipmentDTO:
      description: Информация об отгрузке.
      properties:
        currentStatus:
          $ref: '#/components/schemas/ShipmentStatusChangeDTO'
        availableActions:
          description: Доступные действия над отгрузкой.
          items:
            $ref: '#/components/schemas/ShipmentActionType'
          type: array
          uniqueItems: true
      required:
      - availableActions
      type: object
    ShipmentInfoDTO:
      allOf:
      - $ref: '#/components/schemas/BaseShipmentDTO'
      - properties:
          status:
            $ref: '#/components/schemas/ShipmentStatusType'
          statusDescription:
            description: Описание статуса отгрузки.
            type: string
          statusUpdateTime:
            description: |
              Время последнего изменения статуса отгрузки

              Формат даты: ISO 8601 со смещением относительно UTC.
            example: 2017-11-21T00:00:00+03:00
            format: date-time
            type: string
        type: object
      description: Список с информацией об отгрузках.
      example:
        deliveryService:
          name: name
          id: 1
        draftCount: 0
        plannedCount: 0
        signature:
          signed: true
        planIntervalTo: 2017-11-21T00:00:00+03:00
        externalId: externalId
        warehouse:
          address: address
          name: name
          id: 1
        shipmentType: IMPORT
        planIntervalFrom: 2017-11-21T00:00:00+03:00
        statusDescription: statusDescription
        warehouseTo:
          address: address
          name: name
          id: 1
        factCount: 0
        palletsCount:
          fact: 0
          planned: 0
        id: 1
        orderIds:
        - 1
        - 1
        statusUpdateTime: 2017-11-21T00:00:00+03:00
        status: OUTBOUND_CREATED
      type: object
    GetOfferMappingDTO:
      description: Информация о товаре.
      example:
        offer:
          commodityCodes:
          - code: code
            type: CUSTOMS_COMMODITY_CODE
          - code: code
            type: CUSTOMS_COMMODITY_CODE
          downloadable: true
          sellingPrograms:
          - sellingProgram: FBY
            status: FINE
          - sellingProgram: FBY
            status: FINE
          marketCategoryId: 0
          manufacturerCountries:
          - Россия
          - Россия
          description: description
          mediaFiles:
            firstVideoAsCover: true
            videos:
            - uploadState: UPLOADING
              title: title
              url: url
            - uploadState: UPLOADING
              title: title
              url: url
            pictures:
            - uploadState: UPLOADING
              title: title
              url: url
            - uploadState: UPLOADING
              title: title
              url: url
            manuals:
            - uploadState: UPLOADING
              title: title
              url: url
            - uploadState: UPLOADING
              title: title
              url: url
          videos:
          - videos
          - videos
          - videos
          - videos
          - videos
          purchasePrice:
            currencyId: null
            value: 0.7061401241503109
            updatedAt: 2000-01-23T04:56:07.000+00:00
          type: DEFAULT
          pictures:
          - pictures
          - pictures
          - pictures
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          archived: true
          campaigns:
          - campaignId: 9
            status: PUBLISHED
          - campaignId: 9
            status: PUBLISHED
          vendor: LEVENHUK
          basicPrice:
            discountBase: 0.23021358869347652
            currencyId: RUR
            value: 0.5637376656633328
            updatedAt: 2000-01-23T04:56:07.000+00:00
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          cofinancePrice:
            currencyId: null
            value: 0.7061401241503109
            updatedAt: 2000-01-23T04:56:07.000+00:00
          cardStatus: HAS_CARD_CAN_NOT_UPDATE
          barcodes:
          - "46012300000000"
          - "46012300000000"
          params:
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          - name: Wi-Fi
            value: есть
          tags:
          - до 500 рублей
          - до 500 рублей
          - до 500 рублей
          - до 500 рублей
          - до 500 рублей
          condition:
            reason: reason
            type: PREOWNED
            quality: PERFECT
          certificates:
          - certificates
          - certificates
          - certificates
          - certificates
          - certificates
          boxCount: 2
          additionalExpenses:
            currencyId: null
            value: 0.7061401241503109
            updatedAt: 2000-01-23T04:56:07.000+00:00
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          customsCommodityCode: "8517610008"
          adult: true
          age:
            ageUnit: YEAR
            value: 0.5962133916683182
          manuals:
          - title: title
            url: url
          - title: title
            url: url
          - title: title
            url: url
          - title: title
            url: url
          - title: title
            url: url
        mapping:
          marketSkuName: marketSkuName
          marketCategoryName: marketCategoryName
          marketCategoryId: 4
          marketSku: 1
          marketModelId: 2
          marketModelName: marketModelName
      properties:
        offer:
          $ref: '#/components/schemas/GetOfferDTO'
        mapping:
          $ref: '#/components/schemas/GetMappingDTO'
      type: object
    UpdateOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseOfferDTO'
      - properties:
          parameterValues:
            description: |
              Список характеристик с их значениями.

              С `parameterValues` обязательно передавайте `marketCategoryId` — идентификатор категории на Маркете, к которой относятся указанные характеристики товара.

              При **изменении** характеристик передавайте только те, значение которых нужно обновить. Если в `marketCategoryId` вы меняете категорию, значения общих характеристик для старой и новой категории сохранятся, передавать их не нужно.

              Чтобы **удалить** значение заданной характеристики, передайте ее `parameterId` с пустым `value`.
            items:
              $ref: '#/components/schemas/ParameterValueDTO'
            maxItems: 300
            minItems: 1
            nullable: true
            type: array
          basicPrice:
            $ref: '#/components/schemas/PriceWithDiscountDTO'
          purchasePrice:
            $ref: '#/components/schemas/BasePriceDTO'
          additionalExpenses:
            $ref: '#/components/schemas/BasePriceDTO'
          cofinancePrice:
            $ref: '#/components/schemas/BasePriceDTO'
          firstVideoAsCover:
            description: |
              Использовать первое видео в карточке как видеообложку.

              Передайте `true`, чтобы первое видео использовалось как видеообложка, или `false`, чтобы видеообложка не отображалась в карточке товара.
            type: boolean
          deleteParameters:
            description: |
              Параметры, которые вы ранее передали в `UpdateOfferDTO`, а теперь хотите удалить.

              Если передать `adult`, `downloadable` и `firstVideoAsCover`, они не удалятся — их значение изменится на `false`.

              Можно передать сразу несколько значений.

              Не используйте вместе с соответствующим параметром в `UpdateOfferDTO`. Это приведет к ошибке `400`.
            items:
              $ref: '#/components/schemas/DeleteOfferParameterType'
            minItems: 1
            nullable: true
            type: array
            uniqueItems: true
        type: object
      description: Параметры товара.
      example:
        commodityCodes:
        - code: code
          type: CUSTOMS_COMMODITY_CODE
        - code: code
          type: CUSTOMS_COMMODITY_CODE
        downloadable: true
        marketCategoryId: 0
        manufacturerCountries:
        - Россия
        - Россия
        deleteParameters:
        - ADDITIONAL_EXPENSES
        - ADDITIONAL_EXPENSES
        description: description
        videos:
        - videos
        - videos
        - videos
        - videos
        - videos
        purchasePrice:
          currencyId: null
          value: 0.9301444243932576
        type: DEFAULT
        pictures:
        - pictures
        - pictures
        - pictures
        - pictures
        - pictures
        vendorCode: VNDR-0005A
        vendor: LEVENHUK
        basicPrice:
          discountBase: 0.7061401241503109
          currencyId: RUR
          value: 0.23021358869347652
        lifeTime:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        shelfLife:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        cofinancePrice:
          currencyId: null
          value: 0.9301444243932576
        parameterValues:
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        firstVideoAsCover: true
        barcodes:
        - "46012300000000"
        - "46012300000000"
        params:
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        tags:
        - до 500 рублей
        - до 500 рублей
        - до 500 рублей
        - до 500 рублей
        - до 500 рублей
        condition:
          reason: reason
          type: PREOWNED
          quality: PERFECT
        certificates:
        - certificates
        - certificates
        - certificates
        - certificates
        - certificates
        boxCount: 2
        additionalExpenses:
          currencyId: null
          value: 0.9301444243932576
        name: "Ударная дрель Makita HP1630, 710 Вт"
        offerId: offerId
        guaranteePeriod:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        weightDimensions:
          length: 65.55
          width: 50.7
          weight: 1.001
          height: 20
        category: category
        customsCommodityCode: "8517610008"
        adult: true
        age:
          ageUnit: YEAR
          value: 0.5962133916683182
        manuals:
        - title: title
          url: url
        - title: title
          url: url
        - title: title
          url: url
        - title: title
          url: url
        - title: title
          url: url
      type: object
    UpdateMappingDTO:
      description: |
        Карточка на Маркете, которая, с вашей точки зрения, подходит товару. Чтобы определить идентификатор подходящей карточки, воспользуйтесь поиском в кабинете (**Товары** → **Каталог** → **Загрузить товары**).

        По результатам проверки Маркет может привязать товар к более подходящей карточке.
      example:
        marketSku: 1
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
      type: object
    OfferMappingErrorDTO:
      description: Текст ошибки или предупреждения.
      example:
        parameterId: 0
        type: UNKNOWN_CATEGORY
        message: message
      properties:
        type:
          $ref: '#/components/schemas/OfferMappingErrorType'
        parameterId:
          description: "Идентификатор характеристики, с которой связана ошибка или\
            \ предупреждение."
          format: int64
          type: integer
        message:
          description: Текст ошибки или предупреждения.
          type: string
      required:
      - message
      - type
      type: object
    OfferName:
      description: |
        Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

        Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

        Оптимальная длина — 50–60 символов.

        [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
      example: "Ударная дрель Makita HP1630, 710 Вт"
      maxLength: 256
      type: string
    OfferCategory:
      deprecated: true
      description: |
        {% note warning "Вместо него используйте `marketCategoryId`." %}

         

        {% endnote %}

        Категория товара в вашем магазине.
      type: string
    OfferVendor:
      description: "Название бренда или производителя. Должно быть записано так, к\
        ак его пишет сам бренд."
      example: LEVENHUK
      type: string
    OfferBarcodes:
      description: |+
        Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

        Для книг указывайте ISBN.

        Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

        [Что такое GTIN](*gtin)

      items:
        example: "46012300000000"
        type: string
      minItems: 1
      nullable: true
      type: array
    OfferDescription:
      description: |
        Подробное описание товара: например, его преимущества и особенности.

        Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

        Можно использовать теги:

        * \<h>, \<h1>, \<h2> и так далее — для заголовков;
        * \<br> и \<p> — для переноса строки;
        * \<ol> — для нумерованного списка;
        * \<ul> — для маркированного списка;
        * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
        * \<div> — поддерживается, но не влияет на отображение текста.

        Оптимальная длина — 400–600 символов.

        [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
      maxLength: 6000
      type: string
    OfferVendorCode:
      description: Артикул товара от производителя.
      example: VNDR-0005A
      type: string
    BasePriceDTO:
      description: Цена на товар.
      example:
        currencyId: null
        value: 0.9301444243932576
      properties:
        value:
          description: Значение.
          exclusiveMinimum: true
          minimum: 0
          type: number
        currencyId:
          $ref: '#/components/schemas/CurrencyType'
      required:
      - currencyId
      - value
      type: object
    SuggestedOfferMappingDTO:
      description: Товар с соответствующей карточкой на Маркете.
      example:
        offer:
          vendor: LEVENHUK
          basicPrice:
            currencyId: null
            value: 0.9301444243932576
          name: "Ударная дрель Makita HP1630, 710 Вт"
          offerId: offerId
          description: description
          category: category
          barcodes:
          - "46012300000000"
          - "46012300000000"
          vendorCode: VNDR-0005A
        mapping:
          marketSkuName: marketSkuName
          marketCategoryName: marketCategoryName
          marketCategoryId: 4
          marketSku: 1
          marketModelId: 2
          marketModelName: marketModelName
      properties:
        offer:
          $ref: '#/components/schemas/SuggestedOfferDTO'
        mapping:
          $ref: '#/components/schemas/GetMappingDTO'
      type: object
    AddOffersToArchiveErrorDTO:
      description: "Товар, который не удалось поместить в архив."
      example:
        offerId: offerId
        error: OFFER_HAS_STOCKS
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        error:
          $ref: '#/components/schemas/AddOffersToArchiveErrorType'
      required:
      - error
      - offerId
      type: object
    OfferMappingEntryDTO:
      allOf:
      - properties:
          offer:
            $ref: '#/components/schemas/MappingsOfferDTO'
        type: object
      - $ref: '#/components/schemas/OfferMappingInfoDTO'
      description: |
        Список товаров.
      example:
        offer:
          manufacturerCountries:
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          - manufacturerCountries
          certificate: certificate
          description: description
          availability: ACTIVE
          pictures:
          - pictures
          - pictures
          vendorCode: VNDR-0005A
          manufacturer: manufacturer
          urls:
          - urls
          - urls
          deliveryDurationDays: 5
          feedId: 0
          vendor: LEVENHUK
          price: 2.027123023002322
          transportUnitSize: 1
          id: id
          lifeTime:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          shelfLife:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          supplyScheduleDays:
          - MONDAY
          - MONDAY
          lifeTimeDays: 9
          quantumOfSupply: 5
          barcodes:
          - "46012300000000"
          - "46012300000000"
          customsCommodityCodes:
          - customsCommodityCodes
          - customsCommodityCodes
          processingState:
            notes:
            - payload: payload
              type: ASSORTMENT
            - payload: payload
              type: ASSORTMENT
            status: UNKNOWN
          shopSku: shopSku
          boxCount: 2
          minShipment: 6
          name: "Ударная дрель Makita HP1630, 710 Вт"
          shelfLifeDays: 7
          guaranteePeriod:
            timePeriod: 6
            comment: comment
            timeUnit: HOUR
          weightDimensions:
            length: 65.55
            width: 50.7
            weight: 1.001
            height: 20
          category: category
          guaranteePeriodDays: 3
        mapping:
          modelId: 7
          marketSku: 1
          categoryId: 1
        awaitingModerationMapping:
          modelId: 7
          marketSku: 1
          categoryId: 1
        rejectedMapping:
          modelId: 7
          marketSku: 1
          categoryId: 1
      type: object
    UpdateMappingsOfferDTO:
      allOf:
      - $ref: '#/components/schemas/MappingsOfferInfoDTO'
      description: Информация о товарах в каталоге.
      example:
        manufacturerCountries:
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        certificate: certificate
        description: description
        availability: ACTIVE
        pictures:
        - pictures
        - pictures
        vendorCode: VNDR-0005A
        manufacturer: manufacturer
        urls:
        - urls
        - urls
        deliveryDurationDays: 5
        feedId: 0
        vendor: LEVENHUK
        transportUnitSize: 1
        id: id
        lifeTime:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        shelfLife:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        supplyScheduleDays:
        - MONDAY
        - MONDAY
        lifeTimeDays: 9
        quantumOfSupply: 5
        barcodes:
        - "46012300000000"
        - "46012300000000"
        customsCommodityCodes:
        - customsCommodityCodes
        - customsCommodityCodes
        processingState:
          notes:
          - payload: payload
            type: ASSORTMENT
          - payload: payload
            type: ASSORTMENT
          status: UNKNOWN
        shopSku: shopSku
        boxCount: 2
        minShipment: 6
        name: "Ударная дрель Makita HP1630, 710 Вт"
        shelfLifeDays: 7
        guaranteePeriod:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        weightDimensions:
          length: 65.55
          width: 50.7
          weight: 1.001
          height: 20
        category: category
        guaranteePeriodDays: 3
      type: object
    OfferMappingInfoDTO:
      description: Информация о карточке товара.
      properties:
        mapping:
          $ref: '#/components/schemas/OfferMappingDTO'
        awaitingModerationMapping:
          $ref: '#/components/schemas/OfferMappingDTO'
        rejectedMapping:
          $ref: '#/components/schemas/OfferMappingDTO'
      type: object
    MappingsOfferInfoDTO:
      description: Базовая информация о товарах в каталоге.
      properties:
        name:
          description: |
            Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

            Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

            Оптимальная длина — 50–60 символов.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
          example: "Ударная дрель Makita HP1630, 710 Вт"
          maxLength: 256
          type: string
        shopSku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        category:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `marketCategoryId`." %}

             

            {% endnote %}

            Категория товара в вашем магазине.
          type: string
        vendor:
          description: "Название бренда или производителя. Должно быть записано та\
            к, как его пишет сам бренд."
          example: LEVENHUK
          type: string
        vendorCode:
          description: Артикул товара от производителя.
          example: VNDR-0005A
          type: string
        description:
          description: |
            Подробное описание товара: например, его преимущества и особенности.

            Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

            Можно использовать теги:

            * \<h>, \<h1>, \<h2> и так далее — для заголовков;
            * \<br> и \<p> — для переноса строки;
            * \<ol> — для нумерованного списка;
            * \<ul> — для маркированного списка;
            * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
            * \<div> — поддерживается, но не влияет на отображение текста.

            Оптимальная длина — 400–600 символов.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
          maxLength: 6000
          type: string
        id:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        feedId:
          description: Идентификатор фида.
          format: int64
          type: integer
        barcodes:
          description: |+
            Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

            Для книг указывайте ISBN.

            Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

            [Что такое GTIN](*gtin)

          items:
            example: "46012300000000"
            type: string
          minItems: 1
          nullable: true
          type: array
        urls:
          description: |
            URL фотографии товара или страницы с описанием на вашем сайте.

            Переданные данные не будут отображаться на витрине, но они помогут специалистам Маркета найти карточку для вашего товара.

            Должен содержать один вложенный параметр url.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
        pictures:
          description: |
            Ссылки (URL) изображений товара в хорошем качестве.

            Можно указать до 30 ссылок. При этом изображение по первой ссылке будет основным. Оно используется в качестве изображения товара в поиске Маркета и на карточке товара. Другие изображения товара доступны в режиме просмотра увеличенных изображений.

            Должен содержать хотя бы один вложенный параметр `picture`.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
        manufacturer:
          description: |
            Изготовитель товара: компания, которая произвела товар, ее адрес и регистрационный номер (если есть).

            Необязательный параметр.
          type: string
        manufacturerCountries:
          description: |
            Список стран, в которых произведен товар.

            Обязательный параметр.

            Должен содержать хотя бы одну, но не больше 5 стран.
          items:
            type: string
          maxItems: 5
          minItems: 1
          nullable: true
          type: array
        minShipment:
          description: |
            Минимальное количество единиц товара, которое вы поставляете на склад.

            Например, если вы поставляете детское питание партиями минимум по 10 коробок, а в каждой коробке по 6 баночек, укажите значение 60.
          format: int32
          type: integer
        transportUnitSize:
          description: |
            Количество единиц товара в одной упаковке, которую вы поставляете на склад.

            Например, если вы поставляете детское питание коробками по 6 баночек, укажите значение 6.
          format: int32
          type: integer
        quantumOfSupply:
          description: |
            Добавочная партия: по сколько единиц товара можно добавлять к минимальному количеству minShipment.

            Например, если вы поставляете детское питание партиями минимум по 10 коробок и хотите добавлять к минимальной партии по 2 коробки, а в каждой коробке по 6 баночек, укажите значение 12.
          format: int32
          type: integer
        deliveryDurationDays:
          description: "Срок, за который продавец поставляет товары на склад, в дн\
            ях."
          format: int32
          type: integer
        boxCount:
          description: |
            Сколько мест (если больше одного) занимает товар.

            Параметр указывается, только если товар занимает больше одного места (например, кондиционер занимает два места: внешний и внутренний блоки в двух коробках). Если товар занимает одно место, не указывайте этот параметр.
          format: int32
          type: integer
        customsCommodityCodes:
          description: |
            Список кодов товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД).

            Обязательный параметр, если товар подлежит особому учету (например, в системе «Меркурий» как продукция животного происхождения или в системе «Честный ЗНАК»).

            Может содержать только один вложенный код ТН ВЭД.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
        weightDimensions:
          $ref: '#/components/schemas/OfferWeightDimensionsDTO'
        supplyScheduleDays:
          description: "Дни недели, в которые продавец поставляет товары на склад."
          items:
            $ref: '#/components/schemas/DayOfWeekType'
          minItems: 1
          nullable: true
          type: array
        shelfLifeDays:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `shelfLife`. Совместное использование обоих параметров приведет к ошибке." %}

             

            {% endnote %}

            Срок годности: через сколько дней товар станет непригоден для использования.
          format: int32
          type: integer
        lifeTimeDays:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `lifeTime`. Совместное использование обоих параметров приведет к ошибке." %}

             

            {% endnote %}

            Срок службы: сколько дней товар будет исправно выполнять свою функцию, а изготовитель — нести ответственность за его существенные недостатки.
          format: int32
          type: integer
        guaranteePeriodDays:
          description: |
            Гарантийный срок товара: сколько дней возможно обслуживание и ремонт товара или возврат денег, а изготовитель или продавец будет нести ответственность за недостатки товара.
          format: int32
          type: integer
        processingState:
          $ref: '#/components/schemas/OfferProcessingStateDTO'
        availability:
          $ref: '#/components/schemas/OfferAvailabilityStatusType'
        shelfLife:
          $ref: '#/components/schemas/TimePeriodDTO'
        lifeTime:
          $ref: '#/components/schemas/TimePeriodDTO'
        guaranteePeriod:
          $ref: '#/components/schemas/TimePeriodDTO'
        certificate:
          description: |
            Номер документа на товар.

            Перед указанием номера документ нужно загрузить в кабинете продавца на Маркете. [Инструкция](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html)
          type: string
      type: object
    EnrichedMappingsOfferDTO:
      allOf:
      - $ref: '#/components/schemas/MappingsOfferDTO'
      - properties:
          marketCategoryId:
            description: |
              Идентификатор категории для рекомендованной карточки товара на Маркете.

              Возвращается только вместе с параметром `marketSku`.
            format: int64
            type: integer
          marketCategoryName:
            description: |
              Название категории для рекомендованной карточки товара на Маркете.

              Может отсутствовать в ответе.
            type: string
          marketModelId:
            deprecated: true
            description: |
              Идентификатор модели для рекомендованной карточки товара на Маркете.

              Может отсутствовать в ответе.
            format: int64
            type: integer
          marketModelName:
            deprecated: true
            description: |
              Название модели для рекомендованной карточки товара на Маркете.

              Возвращается только вместе с параметром ##marketSku##.
            type: string
          marketSku:
            $ref: '#/components/schemas/MarketSku'
          marketSkuName:
            description: |
              Название товара с рекомендованной карточки на Маркете.

              Может отсутствовать в ответе.
            type: string
        type: object
      description: Информация о рекомендованных карточках товаров.
      example:
        manufacturerCountries:
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        - manufacturerCountries
        marketCategoryId: 4
        certificate: certificate
        description: description
        availability: ACTIVE
        marketModelId: 7
        pictures:
        - pictures
        - pictures
        vendorCode: VNDR-0005A
        manufacturer: manufacturer
        marketSkuName: marketSkuName
        urls:
        - urls
        - urls
        deliveryDurationDays: 5
        feedId: 0
        vendor: LEVENHUK
        price: 2.027123023002322
        marketSku: null
        transportUnitSize: 1
        id: id
        lifeTime:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        shelfLife:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        supplyScheduleDays:
        - MONDAY
        - MONDAY
        marketModelName: marketModelName
        lifeTimeDays: 9
        quantumOfSupply: 5
        barcodes:
        - "46012300000000"
        - "46012300000000"
        customsCommodityCodes:
        - customsCommodityCodes
        - customsCommodityCodes
        processingState:
          notes:
          - payload: payload
            type: ASSORTMENT
          - payload: payload
            type: ASSORTMENT
          status: UNKNOWN
        marketCategoryName: marketCategoryName
        shopSku: shopSku
        boxCount: 2
        minShipment: 6
        name: "Ударная дрель Makita HP1630, 710 Вт"
        shelfLifeDays: 7
        guaranteePeriod:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        weightDimensions:
          length: 65.55
          width: 50.7
          weight: 1.001
          height: 20
        category: category
        guaranteePeriodDays: 3
      type: object
    UpdateBusinessPricesDTO:
      allOf:
      - $ref: '#/components/schemas/PriceWithDiscountDTO'
      - type: object
      description: Цены.
      example:
        discountBase: 0.6027456183070403
        currencyId: RUR
        value: 0.08008281904610115
      type: object
    PriceDTO:
      description: "Цена с указанием скидки, валюты и времени последнего обновлени\
        я."
      example:
        vat: 1
        discountBase: 6.027456183070403
        currencyId: RUR
        value: 0.8008281904610115
      properties:
        value:
          description: Цена на товар.
          type: number
        discountBase:
          description: |
            Цена на товар без скидки.

            Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.

            Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.
          type: number
        currencyId:
          $ref: '#/components/schemas/CurrencyType'
        vat:
          description: |
            Идентификатор НДС, применяемый для товара:

            * `2` — НДС 10%. Например, используется при реализации отдельных продовольственных и медицинских товаров.
            * `5` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.
            * `6` — НДС не облагается, используется только для отдельных видов услуг.
            * `7` — НДС 20%. Основной НДС с 2019 года.
            * `10` — НДС 5%. НДС для упрощенной системы налогообложения (УСН).
            * `11` — НДС 7%. НДС для упрощенной системы налогообложения (УСН).

            Если параметр не указан, используется НДС, установленный в кабинете.

            **Для продавцов Market Yandex Go** недоступна передача и получение НДС.
          format: int32
          type: integer
      type: object
    OfferPriceResponseDTO:
      description: Информация об установленной цене на товар.
      example:
        price:
          vat: 1
          discountBase: 6.027456183070403
          currencyId: RUR
          value: 0.8008281904610115
        marketSku: 1
        id: id
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          description: Идентификатор предложения из прайс-листа.
          type: string
        price:
          $ref: '#/components/schemas/PriceDTO'
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
        updatedAt:
          description: Дата и время последнего обновления цены на товар.
          format: date-time
          type: string
      type: object
    OfferPriceByOfferIdsResponseDTO:
      description: Информация об установленной цене.
      example:
        price:
          vat: 1
          discountBase: 6.027456183070403
          currencyId: RUR
          value: 0.8008281904610115
        offerId: offerId
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        price:
          $ref: '#/components/schemas/PriceDTO'
        updatedAt:
          description: Дата и время последнего обновления цены.
          format: date-time
          type: string
      type: object
    MarketSku:
      description: SKU на Маркете.
      format: int64
      minimum: 1
      type: integer
    PriceSuggestOfferDTO:
      description: Товар с ценами для продвижения.
      example:
        marketSku: 1
        offerId: offerId
        priceSuggestion:
        - price: 6.027456183070403
          type: BUYBOX
        - price: 6.027456183070403
          type: BUYBOX
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        priceSuggestion:
          description: |
            Цены для продвижения.
          items:
            $ref: '#/components/schemas/PriceSuggestDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    QuarantineOfferDTO:
      description: Товар в карантине.
      example:
        verdicts:
        - type: PRICE_CHANGE
          params:
          - name: CURRENT_PRICE
            value: value
          - name: CURRENT_PRICE
            value: value
        - type: PRICE_CHANGE
          params:
          - name: CURRENT_PRICE
            value: value
          - name: CURRENT_PRICE
            value: value
        offerId: offerId
        currentPrice:
          currencyId: null
          value: 0.9301444243932576
        lastValidPrice:
          currencyId: null
          value: 0.9301444243932576
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        currentPrice:
          $ref: '#/components/schemas/BasePriceDTO'
        lastValidPrice:
          $ref: '#/components/schemas/BasePriceDTO'
        verdicts:
          description: Причины попадания товара в карантин.
          items:
            $ref: '#/components/schemas/PriceQuarantineVerdictDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    UpdateStockItemDTO:
      description: |
        Информация об остатках товара.
      example:
        count: 160165638
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        count:
          description: |
            Количество доступного товара.
          format: int64
          maximum: 2000000000
          minimum: 0
          type: integer
        updatedAt:
          description: |
            Дата и время последнего обновления информации об остатках.
            <br><br>
            Если вы не передали параметр `updatedAt`, используется текущее время.
            <br><br>
            Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2017-11-21T00:42:42+03:00`.
          format: date-time
          type: string
      required:
      - count
      type: object
    WarehouseOffersDTO:
      description: Информация об остатках товаров на складе.
      example:
        offers:
        - offerId: offerId
          turnoverSummary:
            turnoverDays: 6.027456183070403
            turnover: LOW
          stocks:
          - count: 1
            type: FIT
          - count: 1
            type: FIT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - offerId: offerId
          turnoverSummary:
            turnoverDays: 6.027456183070403
            turnover: LOW
          stocks:
          - count: 1
            type: FIT
          - count: 1
            type: FIT
          updatedAt: 2000-01-23T04:56:07.000+00:00
        warehouseId: 0
      properties:
        warehouseId:
          description: Идентификатор склада.
          format: int64
          type: integer
        offers:
          description: Информация об остатках.
          items:
            $ref: '#/components/schemas/WarehouseOfferDTO'
          type: array
      required:
      - offers
      - warehouseId
      type: object
    DeliveryServiceInfoDTO:
      description: Информация о службе доставки.
      example:
        name: name
        id: 0
      properties:
        id:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
        name:
          description: Наименование службы доставки.
          type: string
      required:
      - id
      - name
      type: object
    OrdersStatsOrderDTO:
      description: Информация о заказе.
      example:
        partnerOrderId: partnerOrderId
        statusUpdateDate: 2000-01-23T04:56:07.000+00:00
        payments:
        - date: 2000-01-23
          total: 7.386281948385884
          paymentOrder:
            date: 2000-01-23
            id: id
          id: id
          source: BUYER
          type: PAYMENT
        - date: 2000-01-23
          total: 7.386281948385884
          paymentOrder:
            date: 2000-01-23
            id: id
          id: id
          source: BUYER
          type: PAYMENT
        creationDate: 2000-01-23
        paymentType: POSTPAID
        commissions:
        - actual: 1.2315135367772556
          type: FEE
        - actual: 1.2315135367772556
          type: FEE
        subsidies:
        - amount: 1.0246457001441578
          operationType: ACCRUAL
          type: YANDEX_CASHBACK
        - amount: 1.0246457001441578
          operationType: ACCRUAL
          type: YANDEX_CASHBACK
        fake: true
        deliveryRegion:
          name: name
          id: 6
        currency: RUR
        id: 0
        items:
        - cofinanceValue: 4.145608029883936
          initialCount: 3
          offerName: offerName
          shopSku: shopSku
          cisList:
          - cisList
          - cisList
          marketSku: 1
          count: 5
          bidFee: 570
          cofinanceThreshold: 2.027123023002322
          details:
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          prices:
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          warehouse:
            name: name
            id: 7
        - cofinanceValue: 4.145608029883936
          initialCount: 3
          offerName: offerName
          shopSku: shopSku
          cisList:
          - cisList
          - cisList
          marketSku: 1
          count: 5
          bidFee: 570
          cofinanceThreshold: 2.027123023002322
          details:
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          prices:
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          warehouse:
            name: name
            id: 7
        initialItems:
        - cofinanceValue: 4.145608029883936
          initialCount: 3
          offerName: offerName
          shopSku: shopSku
          cisList:
          - cisList
          - cisList
          marketSku: 1
          count: 5
          bidFee: 570
          cofinanceThreshold: 2.027123023002322
          details:
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          prices:
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          warehouse:
            name: name
            id: 7
        - cofinanceValue: 4.145608029883936
          initialCount: 3
          offerName: offerName
          shopSku: shopSku
          cisList:
          - cisList
          - cisList
          marketSku: 1
          count: 5
          bidFee: 570
          cofinanceThreshold: 2.027123023002322
          details:
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          - updateDate: 2000-01-23
            stockType: FIT
            itemStatus: REJECTED
            itemCount: 9
          prices:
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          - total: 2.3021358869347655
            costPerItem: 5.637376656633329
            type: BUYER
          warehouse:
            name: name
            id: 7
        status: CANCELLED_BEFORE_PROCESSING
      properties:
        id:
          description: Идентификатор заказа.
          format: int64
          type: integer
        creationDate:
          description: |
            Дата создания заказа.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
        statusUpdateDate:
          description: |
            Дата и время, когда статус заказа был изменен в последний раз.

            Формат даты и времени: ISO 8601. Например, `2017-11-21T00:00:00`. Часовой пояс — UTC+03:00 (Москва).
          format: date-time
          type: string
        status:
          $ref: '#/components/schemas/OrderStatsStatusType'
        partnerOrderId:
          description: Идентификатор заказа в информационной системе магазина.
          type: string
        paymentType:
          $ref: '#/components/schemas/OrdersStatsOrderPaymentType'
        fake:
          description: |
            Тип заказа:

            * `false` — настоящий заказ покупателя.

            * `true` — [тестовый](../../concepts/sandbox.md) заказ Маркета.
          type: boolean
        deliveryRegion:
          $ref: '#/components/schemas/OrdersStatsDeliveryRegionDTO'
        items:
          description: |
            Список товаров в заказе после возможных изменений.

            Информация о доставке заказа добавляется отдельным элементом в массиве `items`— параметр `offerName` со значением `Доставка`.
          items:
            $ref: '#/components/schemas/OrdersStatsItemDTO'
          type: array
        initialItems:
          description: Список товаров в заказе до изменений.
          items:
            $ref: '#/components/schemas/OrdersStatsItemDTO'
          minItems: 1
          nullable: true
          type: array
        payments:
          description: |
            Информация о денежных переводах по заказу.

            Может вернуться пустым, если нет данных о переводах. Например, заказ отменен или выбрана оплата при получении (для модели DBS).
          items:
            $ref: '#/components/schemas/OrdersStatsPaymentDTO'
          type: array
        commissions:
          description: Информация о стоимости услуг.
          items:
            $ref: '#/components/schemas/OrdersStatsCommissionDTO'
          type: array
        subsidies:
          description: "Начисление баллов, которые используются для уменьшения сто\
            имости размещения, и их списание в случае невыкупа или возврата."
          items:
            $ref: '#/components/schemas/OrdersStatsSubsidyDTO'
          minItems: 1
          nullable: true
          type: array
        currency:
          $ref: '#/components/schemas/CurrencyType'
      required:
      - commissions
      - currency
      - items
      - payments
      type: object
    GoodsStatsGoodsDTO:
      description: Информация о товаре.
      example:
        shopSku: shopSku
        marketSku: 1
        price: 6.027456183070403
        name: name
        warehouses:
        - name: name
          id: 9
          stocks:
          - count: 1
            type: FIT
          - count: 1
            type: FIT
        - name: name
          id: 9
          stocks:
          - count: 1
            type: FIT
          - count: 1
            type: FIT
        weightDimensions:
          length: 5.962133916683182
          width: 5.637376656633329
          weight: 7.061401241503109
          height: 2.3021358869347655
        categoryName: categoryName
        categoryId: 1
        pictures:
        - pictures
        - pictures
        tariffs:
        - amount: 2.027123023002322
          currency: RUR
          type: AGENCY_COMMISSION
          percent: 3.616076749251911
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - amount: 2.027123023002322
          currency: RUR
          type: AGENCY_COMMISSION
          percent: 3.616076749251911
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        shopSku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
        name:
          description: Название товара.
          type: string
        price:
          description: "Цена на товар в валюте, которая установлена [в кабинете пр\
            одавца на Маркете](https://partner.market.yandex.ru/)."
          type: number
        categoryId:
          description: Идентификатор категории товара на Маркете.
          format: int64
          type: integer
        categoryName:
          description: Название категории товара на Маркете.
          type: string
        weightDimensions:
          $ref: '#/components/schemas/GoodsStatsWeightDimensionsDTO'
        warehouses:
          description: |
            Информация о складах, на которых хранится товар.

            Параметр не приходит, если товара нет ни на одном складе.
          items:
            $ref: '#/components/schemas/GoodsStatsWarehouseDTO'
          minItems: 1
          nullable: true
          type: array
        tariffs:
          description: |
            Информация о тарифах, по которым нужно заплатить за услуги Маркета.

            По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки
            и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).
          items:
            $ref: '#/components/schemas/TariffDTO'
          minItems: 1
          nullable: true
          type: array
        pictures:
          description: Ссылки (URL) изображений товара в хорошем качестве.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
      type: object
    ReportStatusType:
      description: |
        Статус генерации отчета:

        * `PENDING` — отчет ожидает генерации.
        * `PROCESSING` — отчет генерируется.
        * `FAILED` — во время генерации произошла ошибка.
        * `DONE` — отчет готов.
      enum:
      - PENDING
      - PROCESSING
      - FAILED
      - DONE
      type: string
    ReportSubStatusType:
      description: |
        Подстатус генерации отчета:
        * `NO_DATA` — для такого отчета нет данных.
        * `TOO_LARGE` — отчет превысил допустимый размер — укажите меньший период времени или уточните условия запроса.
        * `RESOURCE_NOT_FOUND` — для такого отчета не удалось найти часть сущностей.
      enum:
      - NO_DATA
      - TOO_LARGE
      - RESOURCE_NOT_FOUND
      type: string
    OutletStatusType:
      description: |
        Статус точки продаж.

        Возможные значения:

        * `AT_MODERATION` — проверяется.
        * `FAILED` — не прошла проверку и отклонена модератором.
        * `MODERATED` — проверена и одобрена.
        * `NONMODERATED` — новая точка, нуждается в проверке.
        * `UNKNOWN` — статус не указан. При определении статуса произошла ошибка.
      enum:
      - AT_MODERATION
      - FAILED
      - MODERATED
      - NONMODERATED
      - UNKNOWN
      type: string
    OutletType:
      description: |
        Тип точки продаж.

        Возможные значения:

        * `DEPOT` — пункт выдачи заказов.
        * `MIXED` — смешанный тип точки продаж (торговый зал и пункт выдачи заказов).
        * `RETAIL` — розничная точка продаж (торговый зал).
        * `NOT_DEFINED` — неизвестный тип точки продажи. При определении типа произошла ошибка.
      enum:
      - DEPOT
      - MIXED
      - RETAIL
      - NOT_DEFINED
      type: string
    OutletVisibilityType:
      description: |
        Состояние точки продаж.

        Возможные значения:

        * `HIDDEN` — точка продаж выключена.
        * `VISIBLE` — точка продаж включена.
        * `UNKNOWN` — неизвестное состояние точки продажи. При определении состояния произошла ошибка.
      enum:
      - HIDDEN
      - VISIBLE
      - UNKNOWN
      type: string
    OutletAddressDTO:
      description: |
        Адрес точки продаж.
      example:
        number: number
        km: 6
        regionId: 0
        city: city
        street: street
        additional: additional
        estate: estate
        block: block
        building: building
      properties:
        regionId:
          description: |
            Идентификатор региона.

            Идентификатор можно получить c помощью запроса [GET regions](../../reference/regions/searchRegionsByName.md).

            {% note alert "Типы регионов при создании и редактировании точек продаж" %}

            Указывайте только регионы типов `TOWN` (город), `CITY` (крупный город) и `REPUBLIC_AREA` (район субъекта федерации). Тип региона указан в выходных параметрах `type` запросов [GET regions](../../reference/regions/searchRegionsByName.md) и [GET regions/{regionId}](../../reference/regions/searchRegionsById.md).

            {% endnote %}
          format: int64
          type: integer
        street:
          description: Улица.
          maxLength: 512
          type: string
        number:
          description: Номер дома.
          maxLength: 256
          type: string
        building:
          description: Номер строения.
          maxLength: 16
          type: string
        estate:
          description: Номер владения.
          maxLength: 16
          type: string
        block:
          description: Номер корпуса.
          maxLength: 16
          type: string
        additional:
          description: Дополнительная информация.
          type: string
        km:
          description: "Порядковый номер километра дороги, на котором располагаетс\
            я точка продаж, если отсутствует улица."
          format: int32
          type: integer
        city:
          deprecated: true
          description: |
            {% note warning "В ответах города и населенные пункты возвращаются в параметре `regionId`." %}

             

            {% endnote %}
          maxLength: 200
          type: string
      required:
      - regionId
      type: object
    OutletWorkingScheduleDTO:
      description: |
        Список режимов работы точки продаж.
      example:
        scheduleItems:
        - startDay: MONDAY
          endDay: null
          startTime: 09:59
          endTime: 23:59
        - startDay: MONDAY
          endDay: null
          startTime: 09:59
          endTime: 23:59
        workInHoliday: true
      properties:
        workInHoliday:
          description: |
            Признак, работает ли точка продаж в дни государственных праздников.

            Возможные значения:

            * `false` — точка продаж не работает в дни государственных праздников.
            * `true` — точка продаж работает в дни государственных праздников.
          type: boolean
        scheduleItems:
          description: |
            Список расписаний работы точки продаж.
          items:
            $ref: '#/components/schemas/OutletWorkingScheduleItemDTO'
          minItems: 1
          type: array
      required:
      - scheduleItems
      type: object
    OutletDeliveryRuleDTO:
      description: Информация об условиях доставки для данной точки продаж.
      example:
        priceFreePickup: 7.061401241503109
        deliveryServiceId: 5
        maxDeliveryDays: 35
        minDeliveryDays: 8
        orderBefore: 5
        unspecifiedDeliveryInterval: true
      properties:
        minDeliveryDays:
          description: |
            Минимальный срок доставки товаров в точку продаж. Указан в рабочих днях.

            Минимальное значение: `0` — доставка в день заказа.

            Максимальное значение: `60`.

            Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.

            Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.

            Для доставки в другие регионы:

            * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.
            * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.

            Обязательный параметр, если `type="DEPOT"` или `type="MIXED"`.

            Взаимоисключающий с параметром `unspecifiedDeliveryInterval`.
          format: int32
          maximum: 60
          minimum: 0
          type: integer
        maxDeliveryDays:
          description: |
            Максимальный срок доставки товаров в точку продаж. Указан в рабочих днях.

            Минимальное значение: `0` — доставка в день заказа.

            Максимальное значение: `60`.

            Допустимые сроки доставки (разница между `minDeliveryDays` и `maxDeliveryDays`) зависят от региона.

            Для доставки по своему региону разница не должна превышать двух дней. Например, если `minDeliveryDays` равно 1, то для `maxDeliveryDays` допускаются значения от 1 до 3.

            Для доставки в другие регионы:

            * Если `minDeliveryDays` до 18 дней, разница не должна превышать четырех дней. Например, если `minDeliveryDays` равно 10, то для `maxDeliveryDays` допускаются значения от 10 до 14.
            * Если `minDeliveryDays` больше 18 дней, разница должна быть не больше чем в два раза. Например, если `minDeliveryDays` равно 21, то для `maxDeliveryDays` допускаются значения от 21 до 42.

            Обязательный параметр, если `type="DEPOT"` или `type="MIXED"`.

            Взаимоисключающий с параметром `unspecifiedDeliveryInterval`.
          format: int32
          maximum: 60
          minimum: 0
          type: integer
        deliveryServiceId:
          description: |
            Идентификатор службы доставки товаров в точку продаж.

            Информацию о службе доставки можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md).
          format: int64
          type: integer
        orderBefore:
          description: |
            Час, до которого покупателю нужно сделать заказ, чтобы он был доставлен в точку продаж в сроки от `minDeliveryDays` до `maxDeliveryDays`.

            Если покупатель оформит заказ после указанного часа, он будет доставлен в сроки от `minDeliveryDays` + 1 рабочий день до `maxDeliveryDays` + 1 рабочий день.

            Значение по умолчанию: `24`.
          format: int32
          maximum: 24
          minimum: 0
          type: integer
        priceFreePickup:
          description: "Цена на товар, начиная с которой действует бесплатный само\
            вывоз товара из точки продаж."
          type: number
        unspecifiedDeliveryInterval:
          description: |
            Признак доставки товаров в точку продаж на заказ.

            Признак выставлен, если:

            * точный срок доставки в точку продаж заранее неизвестен (например, если магазин собирает несколько заказов для отправки в точку или населенный пункт);
            * все товары изготавливаются или поставляются на заказ.

            Возможные значения:
            * `true` — товары доставляются в точку продаж на заказ.

            Параметр указывается только со значением `true`.

            Взаимоисключающий с параметрами `minDeliveryDays` и `maxDeliveryDays`.
          type: boolean
      type: object
    FullOutletLicenseDTO:
      allOf:
      - $ref: '#/components/schemas/OutletLicenseDTO'
      - properties:
          checkStatus:
            $ref: '#/components/schemas/LicenseCheckStatusType'
          checkComment:
            description: |
              Причина, по которой лицензия не прошла проверку.

              Параметр возвращается, только если параметр `checkStatus` имеет значение `FAIL`.
            type: string
        type: object
      description: Информация о лицензии.
      example:
        licenseType: ALCOHOL
        number: number
        dateOfExpiry: 2022-11-20T00:00:00+03:00
        checkStatus: NEW
        outletId: 1
        id: 0
        dateOfIssue: 2017-11-13T00:00:00+03:00
        checkComment: checkComment
      type: object
    LicenseType:
      description: |
        Тип лицензии:

        * `ALCOHOL` — лицензия на розничную продажу алкогольной продукции.
        * `UNKNOWN` — неизвестный тип лицензии.
      enum:
      - ALCOHOL
      - UNKNOWN
      type: string
    GoodsFeedbackDTO:
      description: Отзыв о товаре.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        needReaction: true
        identifiers:
          orderId: 6
          modelId: 1
        author: author
        feedbackId: 0
        description:
          advantages: advantages
          disadvantages: disadvantages
          comment: comment
        media:
          videos:
          - videos
          - videos
          photos:
          - photos
          - photos
        statistics:
          commentsCount: 5
          rating: 3
          paidAmount: 2
          recommended: true
      properties:
        feedbackId:
          description: |
            Идентификатор отзыва.
          format: int64
          type: integer
        createdAt:
          description: Дата и время создания отзыва.
          format: date-time
          type: string
        needReaction:
          description: |
            Прочитан ли отзыв.

            Принимает значение `false`, если магазин:

            * Прочитал отзыв в кабинете продавца на Маркете.
            * Отметил отзыв прочитанным — метод [POST businesses/{businessId}/goods-feedback/skip-reaction](../../reference/goods-feedback/skipGoodsFeedbacksReaction.md).
            * Оставил комментарий к отзыву — метод [POST businesses/{businessId}/goods-feedback/comments/update](../../reference/goods-feedback/updateGoodsFeedbackComment.md).
          type: boolean
        identifiers:
          $ref: '#/components/schemas/GoodsFeedbackIdentifiersDTO'
        author:
          description: Имя автора отзыва.
          type: string
        description:
          $ref: '#/components/schemas/GoodsFeedbackDescriptionDTO'
        media:
          $ref: '#/components/schemas/GoodsFeedbackMediaDTO'
        statistics:
          $ref: '#/components/schemas/GoodsFeedbackStatisticsDTO'
      required:
      - createdAt
      - feedbackId
      - identifiers
      - needReaction
      - statistics
      type: object
    GoodsFeedbackCommentText:
      description: Текст комментария.
      maxLength: 4096
      minLength: 1
      type: string
    GoodsFeedbackCommentAuthorDTO:
      description: Информация об авторе комментария.
      example:
        name: name
        type: USER
      properties:
        type:
          $ref: '#/components/schemas/GoodsFeedbackCommentAuthorType'
        name:
          description: Имя автора или название кабинета.
          type: string
      type: object
    GoodsFeedbackCommentStatusType:
      description: |
        Статус комментария:

        * `PUBLISHED` — опубликован.
        * `UNMODERATED` — не проверен.
        * `BANNED` — заблокирован.
        * `DELETED` — удален.
      enum:
      - PUBLISHED
      - UNMODERATED
      - BANNED
      - DELETED
      type: string
    GetCampaignOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseCampaignOfferDTO'
      - properties:
          basicPrice:
            $ref: '#/components/schemas/GetPriceWithDiscountDTO'
          campaignPrice:
            $ref: '#/components/schemas/GetPriceWithVatDTO'
          status:
            $ref: '#/components/schemas/OfferCampaignStatusType'
          errors:
            description: |
              Ошибки, препятствующие размещению товара на витрине.
            items:
              $ref: '#/components/schemas/OfferErrorDTO'
            minItems: 1
            nullable: true
            type: array
          warnings:
            description: |
              Предупреждения, не препятствующие размещению товара на витрине.
            items:
              $ref: '#/components/schemas/OfferErrorDTO'
            minItems: 1
            nullable: true
            type: array
        type: object
      description: Параметры размещения товара в магазине.
      example:
        campaignPrice:
          vat: 5
          discountBase: 5.962133916683182
          currencyId: RUR
          value: 1.4658129805029452
          updatedAt: 2000-01-23T04:56:07.000+00:00
        basicPrice:
          discountBase: 0.23021358869347652
          currencyId: RUR
          value: 0.5637376656633328
          updatedAt: 2000-01-23T04:56:07.000+00:00
        warnings:
        - comment: comment
          message: message
        - comment: comment
          message: message
        available: true
        offerId: offerId
        quantum:
          minQuantity: 1
          stepQuantity: 60
        errors:
        - comment: comment
          message: message
        - comment: comment
          message: message
        status: PUBLISHED
      type: object
    BaseCampaignOfferDTO:
      description: Информация о новой цене на товар.
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        quantum:
          $ref: '#/components/schemas/QuantumDTO'
        available:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте методы скрытия товаров с витрины" %}

            * [GET campaigns/{campaignId}/hidden-offers](../../reference/assortment/getHiddenOffers.md) — просмотр скрытых товаров;
            * [POST campaigns/{campaignId}/hidden-offers](../../reference/assortment/addHiddenOffers.md) — скрытие товаров;
            * [POST campaigns/{campaignId}/hidden-offers/delete](../../reference/assortment/deleteHiddenOffers.md) — возобновление показа.

            {% endnote %}

            Есть ли товар в продаже.
          type: boolean
      required:
      - offerId
      type: object
    VatType:
      description: |
        Идентификатор НДС, применяемый для товара:

        * `2` — НДС 10%. Например, используется при реализации отдельных продовольственных и медицинских товаров.
        * `5` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.
        * `6` — НДС не облагается, используется только для отдельных видов услуг.
        * `7` — НДС 20%. Основной НДС с 2019 года.
        * `10` — НДС 5%. НДС для упрощенной системы налогообложения (УСН).
        * `11` — НДС 7%. НДС для упрощенной системы налогообложения (УСН).

        Если параметр не указан, используется НДС, установленный в кабинете.

        **Для продавцов Market Yandex Go** недоступна передача и получение НДС.
      format: int32
      type: integer
    OfferRecommendationDTO:
      description: |
        Информация о состоянии цен и рекомендации.
      example:
        offer:
          shows: 0
          price:
            currencyId: null
            value: 0.9301444243932576
          offerId: offerId
          competitiveness: OPTIMAL
          cofinancePrice:
            currencyId: null
            value: 0.7061401241503109
            updatedAt: 2000-01-23T04:56:07.000+00:00
        recommendation:
          offerId: offerId
          competitivenessThresholds:
            optimalPrice:
              currencyId: null
              value: 0.9301444243932576
            averagePrice:
              currencyId: null
              value: 0.9301444243932576
      properties:
        offer:
          $ref: '#/components/schemas/OfferForRecommendationDTO'
        recommendation:
          $ref: '#/components/schemas/OfferRecommendationInfoDTO'
      type: object
    ModelDTO:
      description: Модель товара.
      example:
        name: name
        id: 0
        prices:
          avg: 6.027456183070403
          min: 5.962133916683182
          max: 1.4658129805029452
      properties:
        id:
          description: Идентификатор модели товара.
          format: int64
          type: integer
        name:
          description: Название модели товара.
          type: string
        prices:
          $ref: '#/components/schemas/ModelPriceDTO'
      type: object
    EnrichedModelDTO:
      allOf:
      - $ref: '#/components/schemas/ModelDTO'
      - properties:
          offers:
            description: |
              Список первых десяти предложений, расположенных на карточке модели.

              В ответе на запрос возвращаются предложения различных магазинов. Если есть несколько предложений от одного магазина, в ответе отображается только одно, наиболее релевантное из них.
            items:
              $ref: '#/components/schemas/ModelOfferDTO'
            minItems: 1
            nullable: true
            type: array
          offlineOffers:
            description: Суммарное количество предложений в розничных магазинах в
              регионе. Учитываются все предложения от каждого магазина.
            format: int32
            type: integer
          onlineOffers:
            description: Суммарное количество предложений в интернет-магазинах в регионе.
              Учитываются все предложения от каждого магазина.
            format: int32
            type: integer
        type: object
      description: Модель товара.
      example:
        offers:
        - shopRating: 9
          preDiscountPrice: 5.962133916683182
          shippingCost: 7.061401241503109
          pos: 1
          regionId: 2
          price: 5.637376656633329
          name: name
          discount: 6
          shopName: shopName
          inStock: 3
        - shopRating: 9
          preDiscountPrice: 5.962133916683182
          shippingCost: 7.061401241503109
          pos: 1
          regionId: 2
          price: 5.637376656633329
          name: name
          discount: 6
          shopName: shopName
          inStock: 3
        onlineOffers: 4
        name: name
        id: 0
        prices:
          avg: 6.027456183070403
          min: 5.962133916683182
          max: 1.4658129805029452
        offlineOffers: 2
      type: object
    Bid:
      description: Значение ставки.
      example: 570
      format: int32
      maximum: 9999
      minimum: 0
      type: integer
    SkuBidRecommendationItemDTO:
      description: Список товаров с рекомендованными ставками.
      example:
        bidRecommendations:
        - benefits:
          - BESTS
          - BESTS
          showPercent: 8
          bid: 570
        - benefits:
          - BESTS
          - BESTS
          showPercent: 8
          bid: 570
        priceRecommendations:
        - campaignId: 6
          price: 1.1465812980502945
        - campaignId: 6
          price: 1.1465812980502945
        sku: sku
        bid: 570
      properties:
        sku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        bid:
          description: Значение ставки.
          example: 570
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        bidRecommendations:
          description: |
            Список рекомендованных ставок с соответствующими долями показов и доступными дополнительными инструментами продвижения.

            Чем больше ставка, тем большую долю показов она помогает получить и тем больше дополнительных инструментов продвижения доступно.
          items:
            $ref: '#/components/schemas/BidRecommendationItemDTO'
          minItems: 1
          nullable: true
          type: array
        priceRecommendations:
          deprecated: true
          description: Рекомендованные цены.
          items:
            $ref: '#/components/schemas/PriceRecommendationItemDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - bid
      - sku
      type: object
    WarehouseDTO:
      description: Информация о складе.
      example:
        address:
          number: number
          city: city
          street: street
          block: block
          gps:
            latitude: 9.965781217890562
            longitude: 9.369310271410669
          building: building
        campaignId: 6
        name: name
        express: true
        id: 0
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        express:
          description: Возможна ли доставка по модели Экспресс.
          type: boolean
        address:
          $ref: '#/components/schemas/WarehouseAddressDTO'
      required:
      - campaignId
      - express
      - id
      - name
      type: object
    WarehouseGroupDTO:
      description: Информация о группе складов.
      example:
        name: name
        warehouses:
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          campaignId: 6
          name: name
          express: true
          id: 0
        - address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          campaignId: 6
          name: name
          express: true
          id: 0
        mainWarehouse:
          address:
            number: number
            city: city
            street: street
            block: block
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
            building: building
          campaignId: 6
          name: name
          express: true
          id: 0
      properties:
        name:
          description: Название группы складов.
          type: string
        mainWarehouse:
          $ref: '#/components/schemas/WarehouseDTO'
        warehouses:
          description: "Список складов, входящих в группу."
          items:
            $ref: '#/components/schemas/WarehouseDTO'
          type: array
      required:
      - mainWarehouse
      - name
      - warehouses
      type: object
    WarehouseDetailsDTO:
      description: Информация о складе.
      example:
        address:
          number: number
          city: city
          street: street
          block: block
          gps:
            latitude: 9.965781217890562
            longitude: 9.369310271410669
          building: building
        campaignId: 6
        name: name
        express: true
        id: 0
        groupInfo:
          name: name
          id: 1
        status:
          status: DISABLED_MANUALLY
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
        campaignId:
          description: |
            Идентификатор кампании того магазина, который связан со складом.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        express:
          description: Возможна ли доставка для модели Экспресс.
          type: boolean
        groupInfo:
          $ref: '#/components/schemas/WarehouseGroupInfoDTO'
        address:
          $ref: '#/components/schemas/WarehouseAddressDTO'
        status:
          $ref: '#/components/schemas/WarehouseStatusDTO'
      required:
      - campaignId
      - express
      - id
      - name
      type: object
    FulfillmentWarehouseDTO:
      description: Склад Маркета (FBY).
      example:
        address:
          number: number
          city: city
          street: street
          block: block
          gps:
            latitude: 9.965781217890562
            longitude: 9.369310271410669
          building: building
        name: name
        id: 0
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
        address:
          $ref: '#/components/schemas/WarehouseAddressDTO'
      required:
      - id
      - name
      type: object
    WarehouseStatusType:
      description: |
        Статус склада:

        * `DISABLED_MANUALLY` – отключен вами.
        * `OTHER` – другой статус. Например, склад включен или отключен Маркетом.
      enum:
      - DISABLED_MANUALLY
      - OTHER
      type: string
    CategoryParameterDTO:
      description: Характеристика товара.
      example:
        values:
        - description: description
          id: 5
          value: value
        - description: description
          id: 5
          value: value
        recommendationTypes:
        - HAS_VIDEO
        - HAS_VIDEO
        description: description
        type: TEXT
        constraints:
          minValue: 2.3021358869347655
          maxValue: 7.061401241503109
          maxLength: 9
        required: true
        multivalue: true
        unit:
          defaultUnitId: 1
          units:
          - name: кг
            fullName: килограмм
            id: 5
          - name: кг
            fullName: килограмм
            id: 5
        valueRestrictions:
        - limitedValues:
          - limitingOptionValueId: 2
            optionValueIds:
            - 1
            - 1
          - limitingOptionValueId: 2
            optionValueIds:
            - 1
            - 1
          limitingParameterId: 1
        - limitedValues:
          - limitingOptionValueId: 2
            optionValueIds:
            - 1
            - 1
          - limitingOptionValueId: 2
            optionValueIds:
            - 1
            - 1
          limitingParameterId: 1
        distinctive: true
        name: name
        id: 1
        filtering: true
        allowCustomValues: true
      properties:
        id:
          description: Идентификатор характеристики.
          format: int64
          minimum: 1
          type: integer
        name:
          description: Название характеристики.
          type: string
        type:
          $ref: '#/components/schemas/ParameterType'
        unit:
          $ref: '#/components/schemas/CategoryParameterUnitDTO'
        description:
          description: Описание характеристики.
          type: string
        recommendationTypes:
          description: "Перечень возможных рекомендаций по заполнению карточки, к\
            \ которым относится данная характеристика."
          items:
            $ref: '#/components/schemas/OfferCardRecommendationType'
          minItems: 1
          nullable: true
          type: array
        required:
          description: Обязательность характеристики.
          type: boolean
        filtering:
          description: Используется ли характеристика в фильтре.
          type: boolean
        distinctive:
          description: Является ли характеристика особенностью варианта.
          type: boolean
        multivalue:
          description: Можно ли передать сразу несколько значений.
          type: boolean
        allowCustomValues:
          description: "Можно ли передавать собственное значение, которого нет в с\
            писке вариантов Маркета. Только для характеристик типа `ENUM`."
          type: boolean
        values:
          description: Список допустимых значений параметра. Только для характеристик
            типа `ENUM`.
          items:
            $ref: '#/components/schemas/ParameterValueOptionDTO'
          minItems: 1
          nullable: true
          type: array
        constraints:
          $ref: '#/components/schemas/ParameterValueConstraintsDTO'
        valueRestrictions:
          description: "Ограничения на значения, накладываемые другими характерист\
            иками. Только для характеристик типа `ENUM`."
          items:
            $ref: '#/components/schemas/ValueRestrictionDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - allowCustomValues
      - distinctive
      - filtering
      - id
      - multivalue
      - required
      - type
      type: object
    OfferCardDTO:
      description: |
        Информация о состоянии карточки товара.

        Если поле `mapping` отсутствует в ответе, Маркет еще не успел обработать информацию о товаре. Чтобы определить категорию такого товара, повторите запрос через несколько минут.
      example:
        mapping:
          marketSkuName: marketSkuName
          marketCategoryName: marketCategoryName
          marketCategoryId: 4
          marketSku: 1
          marketModelId: 2
          marketModelName: marketModelName
        warnings:
        - comment: comment
          message: message
        - comment: comment
          message: message
        offerId: offerId
        contentRating: 0
        contentRatingStatus: UPDATING
        recommendations:
        - remainingRatingPoints: 60
          type: HAS_VIDEO
          percent: 14
        - remainingRatingPoints: 60
          type: HAS_VIDEO
          percent: 14
        cardStatus: HAS_CARD_CAN_NOT_UPDATE
        averageContentRating: 6
        errors:
        - comment: comment
          message: message
        - comment: comment
          message: message
        parameterValues:
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
        - valueId: 5
          parameterId: 1
          unitId: 5
          value: value
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        mapping:
          $ref: '#/components/schemas/GetMappingDTO'
        parameterValues:
          description: |
            Список характеристик с их значениями.
          items:
            $ref: '#/components/schemas/ParameterValueDTO'
          minItems: 1
          nullable: true
          type: array
        cardStatus:
          $ref: '#/components/schemas/OfferCardStatusType'
        contentRating:
          description: Рейтинг карточки.
          format: int32
          type: integer
        averageContentRating:
          description: "Средний рейтинг карточки у товаров той категории, которая\
            \ указана в `marketCategoryId`."
          format: int32
          type: integer
        contentRatingStatus:
          $ref: '#/components/schemas/OfferCardContentStatusType'
        recommendations:
          description: |
            Список рекомендаций к заполнению карточки.

            Рекомендации Маркета помогают заполнять карточку так, чтобы покупателям было проще найти ваш товар и решиться на покупку.
          items:
            $ref: '#/components/schemas/OfferCardRecommendationDTO'
          minItems: 1
          nullable: true
          type: array
        errors:
          description: "Ошибки в контенте, препятствующие размещению товара на вит\
            рине."
          items:
            $ref: '#/components/schemas/OfferErrorDTO'
          minItems: 1
          nullable: true
          type: array
        warnings:
          description: "Связанные с контентом предупреждения, не препятствующие ра\
            змещению товара на витрине."
          items:
            $ref: '#/components/schemas/OfferErrorDTO'
          minItems: 1
          nullable: true
          type: array
      required:
      - offerId
      type: object
    ParameterValueDTO:
      description: |
        Значение характеристики.

        Вы можете указывать несколько значений одной характеристики при условии, что:

        * Тип характеристики — `ENUM`.
        * В ответе на запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md) у данной характеристики поле `multivalue` имеет значение `true`.

        Для этого в `parameterValues` передавайте каждое значение отдельно — несколько объектов с параметрами `parameterId`, `valueId` и `value`. Параметр `parameterId` должен быть одинаковым.
      example:
        valueId: 5
        parameterId: 1
        unitId: 5
        value: value
      properties:
        parameterId:
          description: Идентификатор характеристики.
          format: int64
          minimum: 1
          type: integer
        unitId:
          description: "Идентификатор единицы измерения. Если вы не передали парам\
            етр `unitId`, используется единица измерения по умолчанию."
          format: int64
          type: integer
        valueId:
          description: |
            Идентификатор значения.

            Обязательно указывайте идентификатор, если передаете значение из перечня допустимых значений, полученного от Маркета.

            Только для характеристик типа `ENUM`.
          format: int64
          type: integer
        value:
          description: Значение.
          type: string
      required:
      - parameterId
      type: object
    OfferContentErrorDTO:
      description: Текст ошибки или предупреждения.
      example:
        parameterId: 0
        type: OFFER_NOT_FOUND
        message: message
      properties:
        type:
          $ref: '#/components/schemas/OfferContentErrorType'
        parameterId:
          description: "Идентификатор характеристики, с которой связана ошибка или\
            \ предупреждение."
          format: int64
          type: integer
        message:
          description: Текст ошибки или предупреждения.
          type: string
      required:
      - message
      - type
      type: object
    ChatMessageSenderType:
      description: |
        Кто отправил сообщение:

        * `PARTNER` — магазин.
        * `CUSTOMER` — покупатель.
        * `MARKET` — Маркет.
        * `SUPPORT` — сотрудник службы поддержки Маркета.
      enum:
      - PARTNER
      - CUSTOMER
      - MARKET
      - SUPPORT
      type: string
    ChatMessagePayloadDTO:
      description: Информация о приложенных к сообщению файлах.
      example:
        size: 6
        name: name
        url: url
      properties:
        name:
          description: Название файла.
          minLength: 1
          type: string
        url:
          description: Ссылка для скачивания файла.
          type: string
        size:
          description: Размер файла в байтах.
          format: int32
          type: integer
      required:
      - name
      - size
      - url
      type: object
    SellingProgramType:
      description: |
        Модель размещения:

        * `FBY` — FBY.
        * `FBS` — FBS.
        * `DBS` — DBS.
        * `EXPRESS` — Экспресс.
      enum:
      - FBY
      - FBS
      - DBS
      - EXPRESS
      type: string
    PaymentFrequencyType:
      description: |
        Частота выплат:

        * `DAILY` — ежедневно.
        * `WEEKLY` — раз в неделю.
        * `BIWEEKLY` — раз в две недели.
        * `MONTHLY` — раз в месяц.

        Подробнее о графике выплат читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/acquiring.html).
      enum:
      - DAILY
      - WEEKLY
      - BIWEEKLY
      - MONTHLY
      type: string
    CalculateTariffsOfferInfoDTO:
      description: Стоимость услуг.
      example:
        offer:
          quantity: 1
          price: 0.6027456183070403
          length: 0.14658129805029452
          width: 0.5962133916683182
          weight: 0.23021358869347652
          categoryId: 0
          height: 0.5637376656633328
        tariffs:
        - amount: 9.301444243932576
          type: AGENCY_COMMISSION
          parameters:
          - name: name
            value: value
          - name: name
            value: value
        - amount: 9.301444243932576
          type: AGENCY_COMMISSION
          parameters:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        offer:
          $ref: '#/components/schemas/CalculateTariffsOfferDTO'
        tariffs:
          description: |
            Список услуг и их стоимость.

            По некоторым услугам могут возвращаться несколько разных стоимостей. Например, в модели FBS стоимость услуги `SORTING` (обработка заказа) зависит от способа отгрузки и количества заказов в отгрузке. Подробнее о тарифах на услуги читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/introduction/rates/models/).
          items:
            $ref: '#/components/schemas/CalculatedTariffDTO'
          type: array
      required:
      - offer
      - tariffs
      type: object
    MaxSaleQuantumDTO:
      description: |
        Лимит на установку кванта и минимального количества товаров по категориям.
      example:
        maxSaleQuantum: 6
        name: name
        id: 0
      properties:
        id:
          description: Идентификатор категории.
          format: int64
          type: integer
        name:
          description: Название категории.
          type: string
        maxSaleQuantum:
          description: Лимит на установку кванта и минимального количества товаров.
          type: integer
      required:
      - id
      type: object
    CategoryErrorDTO:
      description: Текст ошибки.
      example:
        type: UNKNOWN_CATEGORY
        categoryId: 1
      properties:
        categoryId:
          description: Идентификатор категории.
          format: int64
          type: integer
        type:
          $ref: '#/components/schemas/CategoryErrorType'
      type: object
    CampaignQualityRatingDTO:
      description: Информация об индексе качества магазина.
      example:
        campaignId: 0
        ratings:
        - components:
          - componentType: DBS_CANCELLATION_RATE
            value: 14.658129805029452
          - componentType: DBS_CANCELLATION_RATE
            value: 14.658129805029452
          rating: 60
          calculationDate: 2000-01-23
        - components:
          - componentType: DBS_CANCELLATION_RATE
            value: 14.658129805029452
          - componentType: DBS_CANCELLATION_RATE
            value: 14.658129805029452
          rating: 60
          calculationDate: 2000-01-23
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        ratings:
          description: Список значений индекса качества.
          items:
            $ref: '#/components/schemas/QualityRatingDTO'
          type: array
      required:
      - campaignId
      - ratings
      type: object
    QualityRatingAffectedOrderDTO:
      description: "Информация о заказе, который повлиял на индекс качества."
      example:
        componentType: DBS_CANCELLATION_RATE
        orderId: 0
        description: description
      properties:
        orderId:
          description: Идентификатор заказа.
          format: int64
          minimum: 0
          type: integer
        description:
          description: Описание проблемы.
          type: string
        componentType:
          $ref: '#/components/schemas/AffectedOrderQualityRatingComponentType'
      required:
      - componentType
      - description
      - orderId
      type: object
    GetPromoDTO:
      description: Информация об акции.
      example:
        period:
          dateTimeFrom: 2000-01-23T04:56:07.000+00:00
          dateTimeTo: 2000-01-23T04:56:07.000+00:00
        channels:
        - "{}"
        - "{}"
        mechanicsInfo:
          promocodeInfo:
            promocode: promocode
            discount: 1
          type: DIRECT_DISCOUNT
        bestsellerInfo:
          renewalEnabled: true
          bestseller: true
          entryDeadline: 2000-01-23T04:56:07.000+00:00
        name: name
        participating: true
        id: id
        constraints:
          warehouseIds:
          - 5
          - 5
        assortmentInfo:
          activeOffers: 0
          processing: true
          potentialOffers: 6
      properties:
        id:
          description: Идентификатор акции.
          type: string
        name:
          description: Название акции.
          type: string
        period:
          $ref: '#/components/schemas/PromoPeriodDTO'
        participating:
          description: |
            Участвует или участвовал ли продавец в этой акции.

            Для текущих и будущих акций возвращается со значением `true`, если в акции есть товары, которые были добавлены вручную. Если товары не участвуют в акции или добавлены в нее автоматически, параметр возвращается со значением `false`.

            Для прошедших акций всегда возвращается со значением `true`.

            Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
          type: boolean
        assortmentInfo:
          $ref: '#/components/schemas/GetPromoAssortmentInfoDTO'
        mechanicsInfo:
          $ref: '#/components/schemas/GetPromoMechanicsInfoDTO'
        bestsellerInfo:
          $ref: '#/components/schemas/GetPromoBestsellerInfoDTO'
        channels:
          description: Список каналов продвижения товаров.
          items:
            $ref: '#/components/schemas/ChannelType'
          minItems: 1
          nullable: true
          type: array
        constraints:
          $ref: '#/components/schemas/GetPromoConstraintsDTO'
      required:
      - assortmentInfo
      - bestsellerInfo
      - id
      - mechanicsInfo
      - name
      - participating
      - period
      type: object
    GetPromoOfferDTO:
      description: "Товар, который участвует или может участвовать в акции."
      example:
        offerId: offerId
        params:
          discountParams:
            promoPrice: 6
            maxPromoPrice: 1
            price: 0
          promocodeParams:
            maxPrice: 5
        status: AUTO
        autoParticipatingDetails:
          campaignIds:
          - 5
          - 5
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        status:
          $ref: '#/components/schemas/PromoOfferParticipationStatusType'
        params:
          $ref: '#/components/schemas/PromoOfferParamsDTO'
        autoParticipatingDetails:
          $ref: '#/components/schemas/PromoOfferAutoParticipatingDetailsDTO'
      required:
      - offerId
      - params
      - status
      type: object
    UpdatePromoOfferParamsDTO:
      description: "Параметры товара, который участвует в акции."
      example:
        discountParams:
          promoPrice: 1
          price: 1
      properties:
        discountParams:
          $ref: '#/components/schemas/UpdatePromoOfferDiscountParamsDTO'
      type: object
    RejectedPromoOfferUpdateDTO:
      description: Описание отклоненного изменения.
      example:
        reason: OFFER_DOES_NOT_EXIST
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        reason:
          $ref: '#/components/schemas/RejectedPromoOfferUpdateReasonType'
      required:
      - offerId
      - reason
      type: object
    WarningPromoOfferUpdateDTO:
      description: "Описание предупреждения, которое появилось при добавлении това\
        ра."
      example:
        warnings:
        - code: DEEP_DISCOUNT_OFFER
          campaignIds:
          - 0
          - 0
        - code: DEEP_DISCOUNT_OFFER
          campaignIds:
          - 0
          - 0
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        warnings:
          description: "Предупреждения, которые появились при добавлении товара в\
            \ акцию или изменении его цен."
          items:
            $ref: '#/components/schemas/PromoOfferUpdateWarningDTO'
          type: array
      required:
      - offerId
      - warnings
      type: object
    RejectedPromoOfferDeleteDTO:
      description: "Информация о товаре и ошибки, которые появились при его удален\
        ии."
      example:
        reason: OFFER_DOES_NOT_EXIST
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        reason:
          $ref: '#/components/schemas/RejectedPromoOfferDeleteReasonType'
      required:
      - offerId
      - reason
      type: object
    SupplyRequestSortAttributeType:
      description: |
        По какому параметру сортировать заявки:

        * `ID` — идентификатор заявки.
        * `REQUESTED_DATE` — дата поставки на склад хранения.

            Если товары проходили через транзитный склад, сортирует по датам поставки на оба склада.
        * `UPDATED_AT` — время обновления заявки.
        * `STATUS` — статус заявки.
      enum:
      - ID
      - REQUESTED_DATE
      - UPDATED_AT
      - STATUS
      type: string
    SupplyRequestDTO:
      description: "Информация о заявке на поставку, вывоз или утилизацию."
      example:
        childrenLinks:
        - id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: VIRTUAL_DISTRIBUTION
        - id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: VIRTUAL_DISTRIBUTION
        parentLink:
          id:
            marketplaceRequestId: marketplaceRequestId
            warehouseRequestId: warehouseRequestId
            id: 1
          type: VIRTUAL_DISTRIBUTION
        counters:
          undefinedCount: 0
          acceptableCount: 0
          actualPalletsCount: 0
          planCount: 0
          surplusCount: 0
          shortageCount: 0
          actualBoxCount: 0
          factCount: 0
          defectCount: 0
          unacceptableCount: 0
        subtype: DEFAULT
        transitLocation:
          address:
            fullAddress: fullAddress
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
          name: name
          requestedDate: 2000-01-23T04:56:07.000+00:00
          serviceId: 7
          type: FULFILLMENT
        id:
          marketplaceRequestId: marketplaceRequestId
          warehouseRequestId: warehouseRequestId
          id: 1
        type: SUPPLY
        targetLocation:
          address:
            fullAddress: fullAddress
            gps:
              latitude: 9.965781217890562
              longitude: 9.369310271410669
          name: name
          requestedDate: 2000-01-23T04:56:07.000+00:00
          serviceId: 7
          type: FULFILLMENT
        status: CREATED
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          $ref: '#/components/schemas/SupplyRequestIdDTO'
        type:
          $ref: '#/components/schemas/SupplyRequestType'
        subtype:
          $ref: '#/components/schemas/SupplyRequestSubType'
        status:
          $ref: '#/components/schemas/SupplyRequestStatusType'
        updatedAt:
          description: Дата и время последнего обновления заявки.
          format: date-time
          type: string
        counters:
          $ref: '#/components/schemas/SupplyRequestCountersDTO'
        parentLink:
          $ref: '#/components/schemas/SupplyRequestReferenceDTO'
        childrenLinks:
          description: Ссылки на дочерние заявки.
          items:
            $ref: '#/components/schemas/SupplyRequestReferenceDTO'
          minItems: 1
          nullable: true
          type: array
        targetLocation:
          $ref: '#/components/schemas/SupplyRequestLocationDTO'
        transitLocation:
          $ref: '#/components/schemas/SupplyRequestLocationDTO'
      required:
      - counters
      - id
      - status
      - subtype
      - targetLocation
      - type
      - updatedAt
      type: object
    SupplyRequestItemDTO:
      description: Информация о товаре в заявке.
      example:
        counters:
          planCount: 0
          surplusCount: 0
          shortageCount: 0
          factCount: 0
          defectCount: 0
        price:
          currencyId: RUR
          value: 2.3021358869347655
        name: name
        offerId: offerId
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        name:
          description: Название товара.
          type: string
        price:
          $ref: '#/components/schemas/CurrencyValueDTO'
        counters:
          $ref: '#/components/schemas/SupplyRequestItemCountersDTO'
      required:
      - counters
      - name
      - offerId
      type: object
    SupplyRequestDocumentDTO:
      description: Документ по заявке.
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        type: SUPPLY
        url: url
      properties:
        type:
          $ref: '#/components/schemas/SupplyRequestDocumentType'
        url:
          description: Ссылка на документ.
          type: string
        createdAt:
          description: Дата и время создания документа.
          format: date-time
          type: string
      required:
      - createdAt
      - type
      - url
      type: object
    ApiKeyDTO:
      description: Информация о Api-Key-токене.
      example:
        authScopes:
        - ALL_METHODS
        - ALL_METHODS
        name: name
      properties:
        name:
          description: Название токена.
          maxLength: 100
          minLength: 1
          type: string
        authScopes:
          description: Доступы к методам по Api-Key-токену.
          items:
            $ref: '#/components/schemas/ApiKeyScopeType'
          nullable: false
          type: array
          uniqueItems: true
      required:
      - authScopes
      - name
      type: object
    CampaignSettingsScheduleSourceType:
      description: |
        Источник информации о расписании работы службы доставки.
        Возможные значения:
        * `WEB` — информация получена из настроек кабинета продавца на Маркете.
        * `YML` — информация получена из прайс-листа магазина.
      enum:
      - WEB
      - YML
      type: string
    CampaignSettingsDeliveryDTO:
      description: Информация о доставке в своем регионе магазина.
      example:
        schedule:
          customWorkingDays:
          - 23-09-2022
          - 23-09-2022
          period:
            fromDate: 23-09-2022
            toDate: 23-09-2022
          customHolidays:
          - 23-09-2022
          - 23-09-2022
          weeklyHolidays:
          - 1
          - 1
          availableOnHolidays: true
          totalHolidays:
          - 23-09-2022
          - 23-09-2022
      properties:
        schedule:
          $ref: '#/components/schemas/CampaignSettingsScheduleDTO'
      type: object
    OrderVatType:
      description: |
        Налог на добавленную стоимость (НДС) на товар:

        * `NO_VAT` — НДС не облагается, используется только для отдельных видов услуг.

        * `VAT_0` — НДС 0%. Например, используется при продаже товаров, вывезенных в таможенной процедуре экспорта, или при оказании услуг по международной перевозке товаров.

        * `VAT_10` — НДС 10%. Например, используется при реализации отдельных продовольственных и медицинских товаров.

        * `VAT_10_110` — НДС 10/110. НДС 10%, применяется только при предоплате.

        * `VAT_20` — НДС 20%. Основной НДС с 2019 года.

        * `VAT_20_120` — НДС 20/120. НДС 20%, применяется только при предоплате.

        * `VAT_18` — НДС 18%. Основной НДС до 2019 года.

        * `VAT_18_118` — НДС 18/118. НДС использовался до 1 января 2019 года при предоплате.

        * `VAT_12` — НДС 12%. Используется только в Узбекистане.

        * `VAT_05` — НДС 5%. НДС для упрощенной системы налогообложения (УСН).

        * `VAT_07` — НДС 7%. НДС для упрощенной системы налогообложения (УСН).

        * `UNKNOWN_VALUE` — неизвестный тип.

        Используется только совместно с параметром `payment-method=YANDEX`.
      enum:
      - NO_VAT
      - VAT_0
      - VAT_10
      - VAT_10_110
      - VAT_20
      - VAT_20_120
      - VAT_18
      - VAT_18_118
      - VAT_12
      - VAT_05
      - VAT_07
      - UNKNOWN_VALUE
      type: string
    OrderItemPromoDTO:
      description: "Информация о вознаграждениях партнеру за скидки на товар по пр\
        омокодам, купонам и акциям."
      example:
        subsidy: 6.84685269835264
        shopPromoId: shopPromoId
        discount: 1.4894159098541704
        marketPromoId: marketPromoId
        type: DIRECT_DISCOUNT
      properties:
        type:
          $ref: '#/components/schemas/OrderPromoType'
        discount:
          description: |
            Размер пользовательской скидки в валюте покупателя.
          format: decimal
          type: number
        subsidy:
          description: |
            Вознаграждение партнеру от Маркета за товар, проданный в рамках акции.
          format: decimal
          type: number
        shopPromoId:
          description: |
            Идентификатор акции поставщика.
          type: string
        marketPromoId:
          description: |
            Идентификатор акции в рамках соглашения на оказание услуг по продвижению сервиса между Маркетом и партнером.
          type: string
      required:
      - subsidy
      - type
      type: object
    OrderItemInstanceDTO:
      description: |
        Переданные вами для данной позиции коды маркировки или УИНы. Коды «Честного знака» возвращаются в двух вариантах — с криптохвостом и без.
      example:
        rnpt: rnpt
        gtd: gtd
        countryCode: RU
        cisFull: cisFull
        uin: uin
        cis: cis
      properties:
        cis:
          description: "Код идентификации единицы товара в системе [«Честный ЗНАК»\
            ](https://честныйзнак.рф/) без криптохвоста или [«ASL BELGISI»](https://aslbelgisi.uz)\
            \ (для продавцов Market Yandex Go)."
          type: string
        cisFull:
          description: "Код идентификации единицы товара в системе [«Честный ЗНАК»\
            ](https://честныйзнак.рф/) с криптохвостом."
          type: string
        uin:
          description: |
            УИН ювелирного изделия (16-значный код)
            Производитель получает УИН, когда регистрирует изделие в системе контроля за оборотом драгоценных металлов и камней — ГИИС ДМДК.
          type: string
        rnpt:
          description: |
            Регистрационный номер партии товара.

            Представляет собой строку из четырех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ/ХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на партию товара. Далее — дата, номер декларации и номер маркированного товара в декларации.
          type: string
        gtd:
          description: |
            Грузовая таможенная декларация.

            Представляет собой строку из трех чисел, разделенных косой чертой: ХХХХХХХХ/ХХХХХХ/ХХХХХХХ.

            Первая часть — код таможни, которая зарегистрировала декларацию на ввезенные товары. Далее — дата и номер декларации.
          type: string
        countryCode:
          description: |
            Страна производства в формате ISO 3166-1 alpha-2. [Как получить](../../reference/regions/getRegionsCodes.md)
          example: RU
          maxLength: 2
          minLength: 2
          pattern: "^[A-Z]{2}$"
          type: string
      type: object
    OrderItemDetailDTO:
      description: Детали по товару в заказе.
      example:
        updateDate: 23-09-2022
        itemStatus: REJECTED
        itemCount: 7
      properties:
        itemCount:
          description: Количество единиц товара.
          format: int64
          type: integer
        itemStatus:
          $ref: '#/components/schemas/OrderItemStatusType'
        updateDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
      required:
      - itemCount
      - itemStatus
      - updateDate
      type: object
    OrderItemSubsidyDTO:
      description: |
        Общее вознаграждение партнеру за все скидки на товар:

        * по промокодам, купонам и акциям;
        * по баллам Плюса.
      example:
        amount: 1.1730742509559433
        type: YANDEX_CASHBACK
      properties:
        type:
          $ref: '#/components/schemas/OrderItemSubsidyType'
        amount:
          description: Сумма субсидии.
          format: decimal
          type: number
      required:
      - amount
      - type
      type: object
    OrderItemInstanceType:
      description: |
        Вид маркировки товара:

        * `CIS` — КИЗ, идентификатор единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go). Обязателен для заполнения.

        * `CIS_OPTIONAL` — КИЗ, идентификатор единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/). Необязателен для заполнения, но в ближайшее время потребуется его передача.

        * `UIN` — УИН, уникальный идентификационный номер.

        * `RNPT` — РНПТ, регистрационный номер партии товара.

        * `GTD` — номер ГТД, грузовой таможенной декларации.
      enum:
      - CIS
      - CIS_OPTIONAL
      - UIN
      - RNPT
      - GTD
      type: string
    OrderItemTagType:
      description: |
        Признак товара:

        * `ULTIMA` — премиум-товар.
        * `SAFE_TAG` — товар с [защитной меткой](*safe-tag).
        * `TURBO` — товар, который быстро раскупают.
      enum:
      - ULTIMA
      - SAFE_TAG
      - TURBO
      type: string
    OrderSubsidyType:
      description: |
        Тип субсидии:

        * `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.

        * `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.)

        * `DELIVERY` — скидка за доставку (DBS).
      enum:
      - YANDEX_CASHBACK
      - SUBSIDY
      - DELIVERY
      type: string
    OrderDeliveryType:
      description: |
        Способ доставки заказа:

        * `DELIVERY` — курьерская доставка.

        * `PICKUP` — самовывоз.

        * `POST` — почта.

        * `DIGITAL` — для цифровых товаров.

        * `UNKNOWN` — неизвестный тип.
      enum:
      - DELIVERY
      - PICKUP
      - POST
      - DIGITAL
      - UNKNOWN
      type: string
    OrderDeliveryPartnerType:
      description: |
        Тип сотрудничества со службой доставки в рамках конкретного заказа:

        * `SHOP` — магазин работает со службой доставки напрямую или доставляет заказы самостоятельно.

        * `YANDEX_MARKET` — магазин работает со службой доставки через Маркет.

        * `UNKNOWN` — неизвестный тип.
      enum:
      - SHOP
      - YANDEX_MARKET
      - UNKNOWN
      type: string
    OrderCourierDTO:
      description: Информация о курьере.
      example:
        vehicleDescription: vehicleDescription
        phone: phone
        phoneExtension: phoneExtension
        fullName: fullName
        vehicleNumber: vehicleNumber
      properties:
        fullName:
          description: Полное имя курьера.
          type: string
        phone:
          description: Номер телефона курьера.
          type: string
        phoneExtension:
          description: Добавочный номер телефона.
          type: string
        vehicleNumber:
          description: Номер транспортного средства.
          type: string
        vehicleDescription:
          description: "Описание машины. Например, модель и цвет."
          type: string
      type: object
    OrderDeliveryDatesDTO:
      description: Диапазон дат доставки.
      example:
        fromDate: 23-09-2022
        toDate: 23-09-2022
        fromTime: fromTime
        toTime: toTime
        realDeliveryDate: 23-09-2022
      properties:
        fromDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        toDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        fromTime:
          description: |
            Начало интервала времени доставки.

            Передается только совместно с параметром `type=DELIVERY`.

            Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).

            Минимальное значение: `00:00`.
          format: time
          type: string
        toTime:
          description: |
            Конец интервала времени доставки.

            Передается только совместно с параметром `type=DELIVERY`.

            Формат времени: 24-часовой, `ЧЧ:ММ`. В качестве минут всегда должно быть указано `00` (исключение — `23:59`).

            Максимальное значение: `23:59`.
          format: time
          type: string
        realDeliveryDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
      required:
      - fromDate
      type: object
    OrderDeliveryAddressDTO:
      description: |
        Адрес доставки.

        Указывается, если параметр `type` принимает значение `DELIVERY`, `POST` или `PICKUP` (только для модели DBS). Если `type=PICKUP`, возвращается адрес пункта выдачи.
      example:
        country: country
        city: city
        postcode: postcode
        gps:
          latitude: 9.965781217890562
          longitude: 9.369310271410669
        house: house
        subway: subway
        phone: phone
        street: street
        district: district
        recipient: recipient
        entryphone: entryphone
        block: block
        entrance: entrance
        floor: floor
        apartment: apartment
      properties:
        country:
          description: |
            Страна.
          type: string
        postcode:
          description: |
            Почтовый индекс.

            Указывается, если выбрана доставка почтой (`delivery type=POST`).
          type: string
        city:
          description: |
            Город или населенный пункт.
          type: string
        district:
          description: Район.
          type: string
        subway:
          description: Станция метро.
          type: string
        street:
          description: |
            Улица.
          type: string
        house:
          description: |
            Дом или владение.
          type: string
        block:
          description: Корпус или строение.
          type: string
        entrance:
          description: Подъезд.
          type: string
        entryphone:
          description: Код домофона.
          type: string
        floor:
          description: Этаж.
          type: string
        apartment:
          description: Квартира или офис.
          type: string
        phone:
          description: |
            Телефон получателя заказа.
          type: string
        recipient:
          description: |
            Фамилия, имя и отчество получателя заказа.
          type: string
        gps:
          $ref: '#/components/schemas/GpsDTO'
      type: object
    OrderLiftType:
      description: |
        Тип подъема заказа на этаж:

        * `NOT_NEEDED` — не требуется.

        * `MANUAL` — ручной.

        * `ELEVATOR` — лифт.

        * `CARGO_ELEVATOR` — грузовой лифт.

        * `FREE` — любой из перечисленных выше, если включена опция бесплатного подъема.

        * `UNKNOWN` — неизвестный тип.
      enum:
      - NOT_NEEDED
      - MANUAL
      - ELEVATOR
      - CARGO_ELEVATOR
      - FREE
      - UNKNOWN
      type: string
    DateDdMmYyyy:
      description: |
        Формат даты: `ДД-ММ-ГГГГ`.
      example: 23-09-2022
      format: date-dd-MM-yyyy
      type: string
    OrderTrackDTO:
      description: Информация о трек-номере посылки (DBS).
      example:
        trackCode: trackCode
        deliveryServiceId: 9
      properties:
        trackCode:
          description: Трек‑номер посылки.
          type: string
        deliveryServiceId:
          description: "Идентификатор службы доставки. Информацию о службе доставк\
            и можно получить с помощью запроса [GET delivery/services](../../reference/orders/getDeliveryServices.md)."
          format: int64
          type: integer
      required:
      - deliveryServiceId
      type: object
    OrderShipmentDTO:
      description: |
        Список посылок.

        В параметре может указываться несколько посылок.
      example:
        boxes:
        - fulfilmentId: fulfilmentId
          id: 3
        - fulfilmentId: fulfilmentId
          id: 3
        id: 6
        shipmentDate: 23-09-2022
        shipmentTime: shipmentTime
        tracks:
        - trackCode: trackCode
          deliveryServiceId: 9
        - trackCode: trackCode
          deliveryServiceId: 9
      properties:
        id:
          description: "Идентификатор посылки, присвоенный Маркетом."
          format: int64
          type: integer
        shipmentDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        shipmentTime:
          description: |
            **Только для модели Экспресс**

            Время, к которому магазин должен упаковать заказ и перевести его в статус `READY_TO_SHIP`. После смены статуса за заказом приедет курьер.

            Поле может появиться не сразу. Запрашивайте информацию о заказе в течении 5–10 минут, пока оно не вернется.

            Формат времени: 24-часовой, `ЧЧ:ММ`.

            Если заказ сделан организацией, параметр не возвращается до согласования даты доставки.
          type: string
        tracks:
          description: |
            **Только для модели DBS**

            Информация для отслеживания перемещений посылки.
          items:
            $ref: '#/components/schemas/OrderTrackDTO'
          minItems: 1
          nullable: true
          type: array
        boxes:
          description: Список грузовых мест.
          items:
            $ref: '#/components/schemas/OrderParcelBoxDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    OrderDeliveryEacType:
      description: |
        Тип кода подтверждения ЭАПП:

        * `MERCHANT_TO_COURIER` (временно не возвращается) — продавец передает код курьеру для получения невыкупа.

        * `COURIER_TO_MERCHANT` — курьер передает код продавцу для получения заказа.

        * `CHECKING_BY_MERCHANT` — продавец проверяет код на своей стороне.
      enum:
      - MERCHANT_TO_COURIER
      - COURIER_TO_MERCHANT
      - CHECKING_BY_MERCHANT
      type: string
    Cis:
      description: |
        Код идентификации единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).

        {% note warning "Не экранируйте косую черту в коде символа-разделителя `\u001d`" %}

        ✅ `01030410947874432155Qbag!\u001d93Zjqw`

        ❌ `01030410947874432155Qbag!\\u001d93Zjqw`

        Косые черты и кавычки в других местах экранируйте по правилам JSON: `\\` и `\"`

        {% endnote %}
      type: string
    OrderStatusChangeDeliveryDatesDTO:
      description: Диапазон дат доставки.
      example:
        realDeliveryDate: 2000-01-23
      properties:
        realDeliveryDate:
          description: |
            **Только для модели DBS**

            Фактическая дата доставки.
            <br><br>
            Когда передавать параметр `realDeliveryDate`:

            * Не передавайте параметр, если:
              * переводите заказ в любой статус, кроме `PICKUP` или `DELIVERED`;
              * меняете статус заказа на `PICKUP` или `DELIVERED` в день доставки — будет указана дата выполнения запроса.
            * Передавайте дату доставки, если переводите заказ в статус `PICKUP` или `DELIVERED` не в день доставки. Нельзя указывать дату доставки в будущем.

              {% note warning "Передача статуса после установленного срока снижает индекс качества" %}

              О сроках читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/quality/tech#dbs).

              {% endnote %}

               
          format: date
          type: string
      type: object
    OrderUpdateStatusType:
      description: |
        Изменился ли статус заказа:

        * `OK` — статус изменен.

        * `ERROR` — статус не изменен. В этом случае появится сообщение об ошибке в параметре `errorDetails`.
      enum:
      - OK
      - ERROR
      type: string
    OrderBoxLayoutPartialCountDTO:
      description: Информация о части товара в коробке.
      example:
        current: 1
        total: 2
      properties:
        current:
          description: "Номер части, начиная с 1."
          format: int32
          minimum: 1
          type: integer
        total:
          description: На сколько всего частей разделен товар.
          format: int32
          minimum: 2
          type: integer
      required:
      - current
      - total
      type: object
    UinDTO:
      description: Статус проверки УИНа.
      example:
        value: value
        status: OK
      properties:
        value:
          description: УИН товара.
          type: string
        status:
          $ref: '#/components/schemas/UinStatusType'
      required:
      - status
      - value
      type: object
    OrderDocumentStatusType:
      description: |
        Статус документа:

        * `READY` — готов.
        * `NOT_READY` — не готов.
      enum:
      - READY
      - NOT_READY
      type: string
    PickupAddressDTO:
      description: Адрес доставки.
      example:
        country: Россия
        city: Москва
        street: Стрелецкая улица
        postcode: "123518"
        house: 9к2
      properties:
        country:
          description: Страна.
          example: Россия
          type: string
        city:
          description: Город.
          example: Москва
          type: string
        street:
          description: Улица.
          example: Стрелецкая улица
          type: string
        house:
          description: Номер дома.
          example: 9к2
          type: string
        postcode:
          description: Почтовый индекс.
          example: "123518"
          type: string
      type: object
    LogisticPointType:
      description: |
        Тип логистической точки:

          * `WAREHOUSE` — склад.
          * `PICKUP_POINT` — обычная точка выдачи заказов (ПВЗ).
          * `PICKUP_TERMINAL` — постамат.
          * `PICKUP_POST_OFFICE` — отделение почтовой связи (ОПС).
          * `PICKUP_MIXED` — торговый зал и пункт выдачи заказов.
          * `PICKUP_RETAIL` — торговый зал.
      enum:
      - WAREHOUSE
      - PICKUP_POINT
      - PICKUP_TERMINAL
      - PICKUP_POST_OFFICE
      - PICKUP_MIXED
      - PICKUP_RETAIL
      type: string
    ReturnDecisionDTO:
      description: Решения по возвратам.
      example:
        amount:
          currencyId: RUR
          value: 2.3021358869347655
        images:
        - images
        - images
        returnItemId: 3
        subreasonType: USER_DID_NOT_LIKE
        count: 2
        partnerCompensationAmount:
          currencyId: RUR
          value: 2.3021358869347655
        comment: comment
        decisionType: REFUND_MONEY
        reasonType: BAD_QUALITY
        partnerCompensation: 7
        refundAmount: 4
      properties:
        returnItemId:
          description: Идентификатор товара в возврате.
          format: int64
          type: integer
        count:
          description: Количество единиц товара.
          format: int32
          type: integer
        comment:
          description: Комментарий.
          type: string
        reasonType:
          $ref: '#/components/schemas/ReturnDecisionReasonType'
        subreasonType:
          $ref: '#/components/schemas/ReturnDecisionSubreasonType'
        decisionType:
          $ref: '#/components/schemas/ReturnDecisionType'
        refundAmount:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `amount`." %}

             

            {% endnote %}

            Сумма возврата в копейках.
          format: int64
          type: integer
        amount:
          $ref: '#/components/schemas/CurrencyValueDTO'
        partnerCompensation:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `partnerCompensationAmount`." %}

             

            {% endnote %}

            Компенсация за обратную доставку в копейках.
          format: int64
          type: integer
        partnerCompensationAmount:
          $ref: '#/components/schemas/CurrencyValueDTO'
        images:
          description: Список хеш-кодов фотографий товара от покупателя.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
      type: object
    ReturnInstanceDTO:
      description: Логистическая информация по возврату.
      example:
        stockType: FIT
        imei: imei
        cis: cis
        status: CREATED
      properties:
        stockType:
          $ref: '#/components/schemas/ReturnInstanceStockType'
        status:
          $ref: '#/components/schemas/ReturnInstanceStatusType'
        cis:
          description: "Код идентификации единицы товара в системе [«Честный ЗНАК»\
            ](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz)\
            \ (для продавцов Market Yandex Go)."
          type: string
        imei:
          description: Международный идентификатор мобильного оборудования.
          type: string
      type: object
    TrackDTO:
      description: Информация о трек-номерах.
      example:
        trackCode: trackCode
      properties:
        trackCode:
          description: Трек-код почтового отправления.
          type: string
      type: object
    ShipmentType:
      description: |
        Способ отгрузки заказов:

        * `IMPORT` — вы самостоятельно привозите заказы в выбранный сортировочный центр или пункт приема заказов.
        * `WITHDRAW` — вы отгружаете заказы со своего склада курьерам Яндекс Маркета.
      enum:
      - IMPORT
      - WITHDRAW
      type: string
    PartnerShipmentWarehouseDTO:
      description: Данные о складе отправления.
      example:
        address: address
        name: name
        id: 1
      properties:
        id:
          description: Идентификатор склада отправления.
          format: int64
          minimum: 1
          type: integer
        name:
          description: Наименование склада отправления.
          type: string
        address:
          description: Адрес склада отправления.
          type: string
      required:
      - id
      type: object
    DeliveryServiceDTO:
      description: Служба доставки.
      example:
        name: name
        id: 1
      properties:
        id:
          description: Идентификатор службы доставки.
          format: int64
          type: integer
        name:
          description: Наименование службы доставки.
          type: string
      type: object
    PalletsCountDTO:
      description: Количество палет в отгрузке.
      example:
        fact: 0
        planned: 0
      properties:
        planned:
          description: "Количество палет, которое заявил продавец."
          format: int32
          minimum: 0
          type: integer
        fact:
          description: "Количество палет, которое приняли в сортировочном центре."
          format: int32
          minimum: 0
          type: integer
      type: object
    SignatureDTO:
      description: Информация о подписи акта приема-передачи.
      example:
        signed: true
      properties:
        signed:
          description: Подписан ли акт приема-передачи.
          type: boolean
      required:
      - signed
      type: object
    ShipmentStatusChangeDTO:
      description: Статус отгрузки.
      example:
        description: description
        updateTime: 2017-11-21T00:00:00+03:00
        status: OUTBOUND_CREATED
      properties:
        status:
          $ref: '#/components/schemas/ShipmentStatusType'
        description:
          description: Описание статуса отгрузки.
          type: string
        updateTime:
          description: |
            Время последнего изменения статуса отгрузки.

            Формат даты: ISO 8601 со смещением относительно UTC.
          example: 2017-11-21T00:00:00+03:00
          format: date-time
          type: string
      type: object
    ShipmentActionType:
      description: |
        Действия с отгрузкой:

        * `CONFIRM` — подтвердить отгрузку.
        * `DOWNLOAD_ACT` — скачать акт приема-передачи отгрузки.
        * `DOWNLOAD_INBOUND_ACT` — скачать список принятых заказов.
        * `DOWNLOAD_DISCREPANCY_ACT` — скачать акт расхождений.
        * `CHANGE_PALLETS_COUNT` — указать количество палет.
      enum:
      - CONFIRM
      - DOWNLOAD_ACT
      - DOWNLOAD_INBOUND_ACT
      - DOWNLOAD_DISCREPANCY_ACT
      - CHANGE_PALLETS_COUNT
      type: string
    GetOfferDTO:
      allOf:
      - $ref: '#/components/schemas/BaseOfferDTO'
      - properties:
          basicPrice:
            $ref: '#/components/schemas/GetPriceWithDiscountDTO'
          purchasePrice:
            $ref: '#/components/schemas/GetPriceDTO'
          additionalExpenses:
            $ref: '#/components/schemas/GetPriceDTO'
          cofinancePrice:
            $ref: '#/components/schemas/GetPriceDTO'
          cardStatus:
            $ref: '#/components/schemas/OfferCardStatusType'
          campaigns:
            description: |
              Список магазинов, в которых размещен товар.
            items:
              $ref: '#/components/schemas/OfferCampaignStatusDTO'
            minItems: 1
            nullable: true
            type: array
          sellingPrograms:
            description: |
              Информация о том, какие для товара доступны модели размещения.
            items:
              $ref: '#/components/schemas/OfferSellingProgramDTO'
            minItems: 1
            nullable: true
            type: array
          mediaFiles:
            $ref: '#/components/schemas/OfferMediaFilesDTO'
          archived:
            description: |
              Товар помещен в архив.
            type: boolean
        type: object
      description: Параметры товара.
      example:
        commodityCodes:
        - code: code
          type: CUSTOMS_COMMODITY_CODE
        - code: code
          type: CUSTOMS_COMMODITY_CODE
        downloadable: true
        sellingPrograms:
        - sellingProgram: FBY
          status: FINE
        - sellingProgram: FBY
          status: FINE
        marketCategoryId: 0
        manufacturerCountries:
        - Россия
        - Россия
        description: description
        mediaFiles:
          firstVideoAsCover: true
          videos:
          - uploadState: UPLOADING
            title: title
            url: url
          - uploadState: UPLOADING
            title: title
            url: url
          pictures:
          - uploadState: UPLOADING
            title: title
            url: url
          - uploadState: UPLOADING
            title: title
            url: url
          manuals:
          - uploadState: UPLOADING
            title: title
            url: url
          - uploadState: UPLOADING
            title: title
            url: url
        videos:
        - videos
        - videos
        - videos
        - videos
        - videos
        purchasePrice:
          currencyId: null
          value: 0.7061401241503109
          updatedAt: 2000-01-23T04:56:07.000+00:00
        type: DEFAULT
        pictures:
        - pictures
        - pictures
        - pictures
        - pictures
        - pictures
        vendorCode: VNDR-0005A
        archived: true
        campaigns:
        - campaignId: 9
          status: PUBLISHED
        - campaignId: 9
          status: PUBLISHED
        vendor: LEVENHUK
        basicPrice:
          discountBase: 0.23021358869347652
          currencyId: RUR
          value: 0.5637376656633328
          updatedAt: 2000-01-23T04:56:07.000+00:00
        lifeTime:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        shelfLife:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        cofinancePrice:
          currencyId: null
          value: 0.7061401241503109
          updatedAt: 2000-01-23T04:56:07.000+00:00
        cardStatus: HAS_CARD_CAN_NOT_UPDATE
        barcodes:
        - "46012300000000"
        - "46012300000000"
        params:
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        - name: Wi-Fi
          value: есть
        tags:
        - до 500 рублей
        - до 500 рублей
        - до 500 рублей
        - до 500 рублей
        - до 500 рублей
        condition:
          reason: reason
          type: PREOWNED
          quality: PERFECT
        certificates:
        - certificates
        - certificates
        - certificates
        - certificates
        - certificates
        boxCount: 2
        additionalExpenses:
          currencyId: null
          value: 0.7061401241503109
          updatedAt: 2000-01-23T04:56:07.000+00:00
        name: "Ударная дрель Makita HP1630, 710 Вт"
        offerId: offerId
        guaranteePeriod:
          timePeriod: 6
          comment: comment
          timeUnit: HOUR
        weightDimensions:
          length: 65.55
          width: 50.7
          weight: 1.001
          height: 20
        category: category
        customsCommodityCode: "8517610008"
        adult: true
        age:
          ageUnit: YEAR
          value: 0.5962133916683182
        manuals:
        - title: title
          url: url
        - title: title
          url: url
        - title: title
          url: url
        - title: title
          url: url
        - title: title
          url: url
      type: object
    GetMappingDTO:
      allOf:
      - $ref: '#/components/schemas/UpdateMappingDTO'
      - properties:
          marketSkuName:
            description: |
              Название карточки товара.

              Может отсутствовать в ответе, если товар еще не привязан к карточке.
            type: string
          marketModelId:
            deprecated: true
            description: |
              Идентификатор модели на Маркете.

              Может отсутствовать в ответе, если товар еще не привязан к карточке.
            format: int64
            type: integer
          marketModelName:
            deprecated: true
            description: |
              Название модели на Маркете.

              Может отсутствовать в ответе, если товар еще не привязан к карточке.
            type: string
          marketCategoryId:
            description: |
              Идентификатор категории на Маркете, в которую попал товар.

              Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
            format: int64
            type: integer
          marketCategoryName:
            description: |
              Название категории карточки на Маркете.

              Может отсутствовать в ответе, если Маркет еще не определил категорию товара.
            type: string
        type: object
      description: |
        Информация о товарах в каталоге.
      example:
        marketSkuName: marketSkuName
        marketCategoryName: marketCategoryName
        marketCategoryId: 4
        marketSku: 1
        marketModelId: 2
        marketModelName: marketModelName
      type: object
    BaseOfferDTO:
      description: Основные параметры товара.
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        name:
          description: |
            Составляйте название по схеме: тип + бренд или производитель + модель + особенности, если есть (например, цвет, размер или вес) и количество в упаковке.

            Не включайте в название условия продажи (например, «скидка», «бесплатная доставка» и т. д.), эмоциональные характеристики («хит», «супер» и т. д.). Не пишите слова большими буквами — кроме устоявшихся названий брендов и моделей.

            Оптимальная длина — 50–60 символов.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/title.html)
          example: "Ударная дрель Makita HP1630, 710 Вт"
          maxLength: 256
          type: string
        marketCategoryId:
          description: |
            Идентификатор категории на Маркете, к которой вы относите свой товар.

            При изменении категории убедитесь, что характеристики товара и их значения в параметре `parameterValues` вы передаете для новой категории.

            Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).
          format: int64
          type: integer
        category:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `marketCategoryId`." %}

             

            {% endnote %}

            Категория товара в вашем магазине.
          type: string
        pictures:
          description: |
            Ссылки на изображения товара. Изображение по первой ссылке считается основным, остальные дополнительными.

            **Требования к ссылкам**

            * Ссылок может быть до 30.
            * Указывайте ссылку целиком, включая протокол http или https.
            * Максимальная длина — 512 символов.
            * Русские буквы в URL можно.
            * Можно использовать прямые ссылки на изображения и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.

            ✅ `https://example-shop.ru/images/sku12345.jpg`

            ✅ `https://yadi.sk/i/NaBoRsimVOLov`

            ❌ `/images/sku12345.jpg`

            ❌ `https://www.dropbox.com/s/818f/tovar.jpg`

            Ссылки на изображение должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.

            Если нужно заменить изображение, выложите новое изображение по новой ссылке, а ссылку на старое удалите. Если просто заменить изображение по старой ссылке, оно не обновится.

            [Требования к изображениям](https://yandex.ru/support/marketplace/assortment/fields/images.html)
          items:
            type: string
          maxItems: 30
          minItems: 1
          nullable: true
          type: array
        videos:
          description: |
            Ссылки (URL) на видео товара.

            Максимальное количество ссылок — 6.

            **Требования к ссылке**

            * Указывайте ссылку целиком, включая протокол http или https.
            * Максимальная длина — 512 символов.
            * Русские буквы в URL можно.
            * Можно использовать прямые ссылки на видео и на Яндекс Диск. Ссылки на Яндекс Диске нужно копировать с помощью функции **Поделиться**. Относительные ссылки и ссылки на другие облачные хранилища — не работают.

            ✅ `https://example-shop.ru/video/sku12345.avi`

            ✅ `https://yadi.sk/i/NaBoRsimVOLov`

            ❌ `/video/sku12345.avi`

            ❌ `https://www.dropbox.com/s/818f/super-tovar.avi`

            Ссылки на видео должны быть постоянными. Нельзя использовать динамические ссылки, меняющиеся от выгрузки к выгрузке.

            Если нужно заменить видео, выложите новое видео по новой ссылке, а ссылку на старое удалите. Если просто заменить видео по старой ссылке, оно не обновится.

            [Требования к видео](https://yandex.ru/support/marketplace/assortment/fields/video.html)
          items:
            type: string
          maxItems: 6
          minItems: 1
          nullable: true
          type: array
        manuals:
          description: |
            Список инструкций по использованию товара.

            Максимальное количество инструкций — 6.
          items:
            $ref: '#/components/schemas/OfferManualDTO'
          maxItems: 6
          minItems: 1
          nullable: true
          type: array
        vendor:
          description: "Название бренда или производителя. Должно быть записано та\
            к, как его пишет сам бренд."
          example: LEVENHUK
          type: string
        barcodes:
          description: |+
            Указывайте в виде последовательности цифр. Подойдут коды EAN-13, EAN-8, UPC-A, UPC-E или Code 128.

            Для книг указывайте ISBN.

            Для товаров [определенных категорий и торговых марок](https://yastatic.net/s3/doc-binary/src/support/market/ru/yandex-market-list-for-gtin.xlsx) штрихкод должен быть действительным кодом GTIN. Обратите внимание: внутренние штрихкоды, начинающиеся на 2 или 02, и коды формата Code 128 не являются GTIN.

            [Что такое GTIN](*gtin)

          items:
            example: "46012300000000"
            type: string
          minItems: 1
          nullable: true
          type: array
        description:
          description: |
            Подробное описание товара: например, его преимущества и особенности.

            Не давайте в описании инструкций по установке и сборке. Не используйте слова «скидка», «распродажа», «дешевый», «подарок» (кроме подарочных категорий), «бесплатно», «акция», «специальная цена», «новинка», «new», «аналог», «заказ», «хит». Не указывайте никакой контактной информации и не давайте ссылок.

            Можно использовать теги:

            * \<h>, \<h1>, \<h2> и так далее — для заголовков;
            * \<br> и \<p> — для переноса строки;
            * \<ol> — для нумерованного списка;
            * \<ul> — для маркированного списка;
            * \<li> — для создания элементов списка (должен находиться внутри \<ol> или \<ul>);
            * \<div> — поддерживается, но не влияет на отображение текста.

            Оптимальная длина — 400–600 символов.

            [Рекомендации и правила](https://yandex.ru/support/marketplace/assortment/fields/description.html)
          maxLength: 6000
          type: string
        manufacturerCountries:
          description: |
            Страна, где был произведен товар.

            Записывайте названия стран так, как они записаны в [списке](https://yastatic.net/s3/doc-binary/src/support/market/ru/countries.xlsx).
          items:
            example: Россия
            type: string
          minItems: 1
          nullable: true
          type: array
        weightDimensions:
          $ref: '#/components/schemas/OfferWeightDimensionsDTO'
        vendorCode:
          description: Артикул товара от производителя.
          example: VNDR-0005A
          type: string
        tags:
          description: |
            Метки товара, которые использует магазин. Покупателям теги не видны. По тегам можно группировать и фильтровать разные товары в каталоге — например, товары одной серии, коллекции или линейки.

            Максимальная длина тега — 20 символов. У одного товара может быть максимум 10 тегов.
          items:
            example: до 500 рублей
            type: string
          maxItems: 50
          minItems: 1
          nullable: true
          type: array
        shelfLife:
          $ref: '#/components/schemas/TimePeriodDTO'
        lifeTime:
          $ref: '#/components/schemas/TimePeriodDTO'
        guaranteePeriod:
          $ref: '#/components/schemas/TimePeriodDTO'
        customsCommodityCode:
          deprecated: true
          description: |
            {% note warning "Вместо него используйте `commodityCodes` с типом `CUSTOMS_COMMODITY_CODE`." %}

             

            {% endnote %}

            Код товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД) — 10 или 14 цифр без пробелов.

            Обязательно укажите, если он есть.
          example: "8517610008"
          type: string
        commodityCodes:
          description: |
            Товарные коды.
          items:
            $ref: '#/components/schemas/CommodityCodeDTO'
          minItems: 1
          nullable: true
          type: array
        certificates:
          description: |
            Номера документов на товар: сертификата, декларации соответствия и т. п.

            Передавать можно только номера документов, сканы которого загружены в кабинете продавца по [инструкции](https://yandex.ru/support/marketplace/assortment/restrictions/certificates.html).
          items:
            type: string
          maxItems: 6
          minItems: 1
          nullable: true
          type: array
        boxCount:
          description: |
            Количество грузовых мест.

            Параметр используется, если товар представляет собой несколько коробок, упаковок и так далее. Например, кондиционер занимает два места — внешний и внутренний блоки в двух коробках.

            Для товаров, занимающих одно место, не передавайте этот параметр.
          format: int32
          minimum: 2
          type: integer
        condition:
          $ref: '#/components/schemas/OfferConditionDTO'
        type:
          $ref: '#/components/schemas/OfferType'
        downloadable:
          description: |
            Признак цифрового товара. Укажите `true`, если товар доставляется по электронной почте.

            [Как работать с цифровыми товарами](../../step-by-step/digital.md)
          type: boolean
        adult:
          description: |
            Параметр включает для товара пометку 18+. Устанавливайте ее только для товаров, которые относятся к удовлетворению сексуальных потребностей.
          type: boolean
        age:
          $ref: '#/components/schemas/AgeDTO'
        params:
          deprecated: true
          description: |
            {% note warning "При передаче характеристик используйте `parameterValues`." %}

             

            {% endnote %}

            Характеристики, которые есть только у товаров конкретной категории — например, диаметр колес велосипеда или материал подошвы обуви.
          items:
            $ref: '#/components/schemas/OfferParamDTO'
          maxItems: 600
          minItems: 1
          nullable: true
          type: array
      required:
      - offerId
      type: object
    PriceWithDiscountDTO:
      allOf:
      - $ref: '#/components/schemas/BasePriceDTO'
      - properties:
          discountBase:
            description: |
              Зачеркнутая цена.

              Число должно быть целым. Вы можете указать цену со скидкой от 5 до 99%.

              Передавайте этот параметр при каждом обновлении цены, если предоставляете скидку на товар.
            exclusiveMinimum: true
            minimum: 0
            type: number
        type: object
      description: Цена с указанием скидки.
      example:
        discountBase: 0.7061401241503109
        currencyId: RUR
        value: 0.23021358869347652
      type: object
    DeleteOfferParameterType:
      description: |
        Значения параметров, которые хотите удалить, и соответствующие параметры в `UpdateOfferDTO`, в которых вы передали эти значения ранее:

        * `ADDITIONAL_EXPENSES` — дополнительные расходы на товар (параметр `additionalExpenses`).
        * `ADULT` — пометка 18+ (параметр `adult`)
        * `AGE` — возрастное ограничение для детей (параметр `age`).
        * `BARCODES` — штрихкод (параметр `barcodes`).
        * `BOX_COUNT` — количество грузовых мест (параметр `boxCount`).
        * `CERTIFICATES` — номера документов на товар (параметр `certificates`).
        * `COFINANCE_PRICE` — цена для скидок с Маркетом (параметр `cofinancePrice`).
        * `COMMODITY_CODES` — товарные коды (параметр `commodityCodes`).
        * `CONDITION` — состояние уцененного товара (параметр `condition`).
        * `CUSTOMS_COMMODITY_CODE` — код товара в ТН ВЭД (параметр `customsCommodityCode`).
        * `DESCRIPTION` — описание товара (параметр `description`).
        * `DOWNLOADABLE` — признак цифрового товара (параметр `downloadable`).
        * `FIRST_VIDEO_AS_COVER` — использование первого видео в карточке как видеообложки (параметр `firstVideoAsCover`).
        * `GUARANTEE_PERIOD` — гарантийный срок (параметр `guaranteePeriod`).
        * `LIFE_TIME` — срок службы (параметр `lifeTime`).
        * `MANUALS` — список инструкций по использованию товара (параметр `manuals`).
        * `MANUFACTURER_COUNTRIES` — страна производства (параметр `manufacturerCountries`).
        * `PARAMETERS` — характеристики товара (параметры `params`, `parameterValues`).
        * `PICTURES` — ссылки на изображения товара (параметр `pictures`).
        * `PURCHASE_PRICE` — себестоимость (параметр `purchasePrice`).
        * `SHELF_LIFE` — срок годности (параметр `shelfLife`).
        * `TAGS` — метки товара, которые использует магазин (параметр `tags`).
        * `TYPE` — особый тип товара (параметр `type`).
        * `VENDOR_CODE` — название бренда или производителя (параметр `vendorCode`).
        * `VIDEOS` — ссылки на видео товара (параметр `videos`).
      enum:
      - ADDITIONAL_EXPENSES
      - ADULT
      - AGE
      - BARCODES
      - BOX_COUNT
      - CERTIFICATES
      - COFINANCE_PRICE
      - COMMODITY_CODES
      - CONDITION
      - CUSTOMS_COMMODITY_CODE
      - DESCRIPTION
      - DOWNLOADABLE
      - FIRST_VIDEO_AS_COVER
      - GUARANTEE_PERIOD
      - LIFE_TIME
      - MANUALS
      - MANUFACTURER_COUNTRIES
      - PARAMETERS
      - PICTURES
      - PURCHASE_PRICE
      - SHELF_LIFE
      - TAGS
      - TYPE
      - VENDOR_CODE
      - VIDEOS
      type: string
    OfferMappingErrorType:
      description: |
        Типы ошибок и предупреждений:

        * `UNKNOWN_CATEGORY` — указана неизвестная категория.
        * `INVALID_CATEGORY` — указана нелистовая категория. Укажите ту, которая не имеет дочерних категорий.
        * `EMPTY_MARKET_CATEGORY` — не указана категория Маркета при передаче характеристик категории.
        * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории.
        * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое.
        * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа.
        * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики.
        * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255.
        * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).
        * `INVALID_PICKER_URL` — передана ссылка на изображение для миниатюры, которой нет в переданных ссылках на изображение товара.
        * `LOCKED_DIMENSIONS` — переданы габариты упаковки, которые нельзя изменить.
        * `INVALID_COMMODITY_CODE` — передан некорректный товарный код.

        Проверить, какие категорийные характеристики доступны для заданной категории, и получить их настройки можно с помощью запроса [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters).
      enum:
      - UNKNOWN_CATEGORY
      - INVALID_CATEGORY
      - EMPTY_MARKET_CATEGORY
      - UNKNOWN_PARAMETER
      - UNEXPECTED_BOOLEAN_VALUE
      - NUMBER_FORMAT
      - INVALID_UNIT_ID
      - INVALID_GROUP_ID_LENGTH
      - INVALID_GROUP_ID_CHARACTERS
      - INVALID_PICKER_URL
      - LOCKED_DIMENSIONS
      - INVALID_COMMODITY_CODE
      type: string
    AddOffersToArchiveErrorType:
      description: |
        Причина, по которой товар не удалось поместить в архив:

        * `OFFER_HAS_STOCKS` — товар хранится на складе Маркета.

        * `UNKNOWN` — неизвестная причина ошибки. Скорее всего произошел сбой на стороне Маркета. Если ошибка повторяется долгое время, обратитесь в поддержку.
      enum:
      - OFFER_HAS_STOCKS
      - UNKNOWN
      type: string
    OfferMappingDTO:
      description: Информация о текущей карточке товара на Маркете.
      example:
        modelId: 7
        marketSku: 1
        categoryId: 1
      properties:
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
        modelId:
          description: |
            Идентификатор модели для текущей карточки товара на Маркете.

            Например, две лопатки разных цветов имеют разные SKU на Маркете (параметр `marketSku`), но одинаковый идентификатор модели товара.
          format: int64
          type: integer
        categoryId:
          description: Идентификатор категории для текущей карточки товара на Маркете.
          format: int64
          type: integer
      type: object
    OfferWeightDimensionsDTO:
      description: |
        Габариты упаковки и вес товара.

        Если товар занимает несколько коробок, перед измерением размеров сложите их компактно.

        ![Схема измерения многоместных грузов](../../_images/reference/boxes-measure.png)
      example:
        length: 65.55
        width: 50.7
        weight: 1.001
        height: 20
      properties:
        length:
          description: |
            Длина упаковки в см.
          example: 65.55
          exclusiveMinimum: true
          minimum: 0
          type: number
        width:
          description: |
            Ширина упаковки в см.
          example: 50.7
          exclusiveMinimum: true
          minimum: 0
          type: number
        height:
          description: |
            Высота упаковки в см.
          example: 20
          exclusiveMinimum: true
          minimum: 0
          type: number
        weight:
          description: |
            Вес товара в кг с учетом упаковки (брутто).
          example: 1.001
          exclusiveMinimum: true
          minimum: 0
          type: number
      required:
      - height
      - length
      - weight
      - width
      type: object
    DayOfWeekType:
      description: |
        День недели:

        * `MONDAY` — понедельник.
        * `TUESDAY` — вторник.
        * `WEDNESDAY` — среда.
        * `THURSDAY` — четверг.
        * `FRIDAY` — пятница.
        * `SATURDAY` — суббота.
        * `SUNDAY` — воскресенье.
      enum:
      - MONDAY
      - TUESDAY
      - WEDNESDAY
      - THURSDAY
      - FRIDAY
      - SATURDAY
      - SUNDAY
      type: string
    OfferProcessingStateDTO:
      description: Информация о статусе публикации товара на Маркете.
      example:
        notes:
        - payload: payload
          type: ASSORTMENT
        - payload: payload
          type: ASSORTMENT
        status: UNKNOWN
      properties:
        status:
          $ref: '#/components/schemas/OfferProcessingStatusType'
        notes:
          description: "Причины, по которым товар не прошел модерацию."
          items:
            $ref: '#/components/schemas/OfferProcessingNoteDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    TimePeriodDTO:
      description: "Временной отрезок с комментарием. Требования к содержанию комм\
        ентария зависят от контекста использования параметра и указаны в описании\
        \ поля, которое его содержит."
      example:
        timePeriod: 6
        comment: comment
        timeUnit: HOUR
      properties:
        timePeriod:
          description: Продолжительность в указанных единицах.
          type: integer
        timeUnit:
          $ref: '#/components/schemas/TimeUnitType'
        comment:
          description: Комментарий.
          maxLength: 500
          type: string
      required:
      - timePeriod
      - timeUnit
      type: object
    PriceSuggestDTO:
      description: Тип цены.
      example:
        price: 6.027456183070403
        type: BUYBOX
      properties:
        type:
          $ref: '#/components/schemas/PriceSuggestType'
        price:
          description: Цена в рублях.
          type: number
      type: object
    PriceQuarantineVerdictDTO:
      description: Причина попадания товара в карантин.
      example:
        type: PRICE_CHANGE
        params:
        - name: CURRENT_PRICE
          value: value
        - name: CURRENT_PRICE
          value: value
      properties:
        type:
          $ref: '#/components/schemas/PriceQuarantineVerdictType'
        params:
          description: "Цена, из-за которой товар попал в карантин, и значения для\
            \ сравнения. Конкретный набор параметров зависит от типа карантина."
          items:
            $ref: '#/components/schemas/PriceQuarantineVerdictParameterDTO'
          type: array
      required:
      - params
      type: object
    WarehouseOfferDTO:
      description: Информация об остатках товара.
      example:
        offerId: offerId
        turnoverSummary:
          turnoverDays: 6.027456183070403
          turnover: LOW
        stocks:
        - count: 1
          type: FIT
        - count: 1
          type: FIT
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        turnoverSummary:
          $ref: '#/components/schemas/TurnoverDTO'
        stocks:
          description: Информация об остатках.
          items:
            $ref: '#/components/schemas/WarehouseStockDTO'
          type: array
        updatedAt:
          description: |
            Дата и время последнего обновления информации об остатках.

            Формат даты и времени: ISO 8601 со смещением относительно UTC. Например, `2023-11-21T00:42:42+03:00`.
          format: date-time
          type: string
      required:
      - offerId
      - stocks
      type: object
    OrdersStatsOrderPaymentType:
      description: |
        Тип оплаты заказа:
        - `POSTPAID` — заказ оплачен после того, как был получен.
        - `PREPAID` — заказ оплачен до того, как был получен.
        - `UNKNOWN` — неизвестный тип оплаты. Скорее всего покупатель отменил или вернул заказ или не было его оплаты.
      enum:
      - POSTPAID
      - PREPAID
      - UNKNOWN
      type: string
    OrdersStatsDeliveryRegionDTO:
      description: Информация о регионе доставки.
      example:
        name: name
        id: 6
      properties:
        id:
          description: Идентификатор региона доставки.
          format: int64
          type: integer
        name:
          description: Название региона доставки.
          type: string
      type: object
    OrdersStatsItemDTO:
      description: |
        Список товаров в заказе после возможных изменений.

        В ходе обработки заказа Маркет может удалить из него единицы товаров — при проблемах на складе или по инициативе пользователя.

        * Если из заказа удалены все единицы товара, его не будет в списке `items` — только в списке `initialItems`.

        * Если в заказе осталась хотя бы одна единица товара, он будет и в списке `items` (с уменьшенным количеством единиц `count`), и в списке `initialItems` (с первоначальным количеством единиц `initialCount`).
      example:
        cofinanceValue: 4.145608029883936
        initialCount: 3
        offerName: offerName
        shopSku: shopSku
        cisList:
        - cisList
        - cisList
        marketSku: 1
        count: 5
        bidFee: 570
        cofinanceThreshold: 2.027123023002322
        details:
        - updateDate: 2000-01-23
          stockType: FIT
          itemStatus: REJECTED
          itemCount: 9
        - updateDate: 2000-01-23
          stockType: FIT
          itemStatus: REJECTED
          itemCount: 9
        prices:
        - total: 2.3021358869347655
          costPerItem: 5.637376656633329
          type: BUYER
        - total: 2.3021358869347655
          costPerItem: 5.637376656633329
          type: BUYER
        warehouse:
          name: name
          id: 7
      properties:
        offerName:
          description: Название товара.
          type: string
        marketSku:
          description: SKU на Маркете.
          format: int64
          minimum: 1
          type: integer
        shopSku:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        count:
          description: |
            Количество единиц товара с учетом удаленных единиц.

            Если из заказа удалены все единицы товара, он попадет только в список `initialItems`.
          format: int32
          type: integer
        prices:
          description: Цена или скидки на товар.
          items:
            $ref: '#/components/schemas/OrdersStatsPriceDTO'
          minItems: 1
          nullable: true
          type: array
        warehouse:
          $ref: '#/components/schemas/OrdersStatsWarehouseDTO'
        details:
          description: Информация об удалении товара из заказа.
          items:
            $ref: '#/components/schemas/OrdersStatsDetailsDTO'
          minItems: 1
          nullable: true
          type: array
        cisList:
          description: "Список кодов идентификации товара в системе [«Честный ЗНАК\
            »](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz)\
            \ (для продавцов Market Yandex Go)."
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
        initialCount:
          description: Первоначальное количество единиц товара.
          format: int32
          type: integer
        bidFee:
          description: |
            Списанная ставка ближайшего конкурента.

            Указывается в процентах от стоимости товара и умножается на 100. Например, ставка 5% обозначается как 500.
          example: 570
          format: int32
          maximum: 10000
          minimum: 0
          type: integer
        cofinanceThreshold:
          description: |
            Порог для скидок с Маркетом на момент оформления заказа. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

            Точность — два знака после запятой.
          type: number
        cofinanceValue:
          description: |
            Скидка с Маркетом. [Что это такое?](https://yandex.ru/support/marketplace/marketing/smart-pricing.html#sponsored-discounts)

            Точность — два знака после запятой.
          type: number
      type: object
    OrdersStatsPaymentDTO:
      description: Информация о денежных переводах по заказу.
      example:
        date: 2000-01-23
        total: 7.386281948385884
        paymentOrder:
          date: 2000-01-23
          id: id
        id: id
        source: BUYER
        type: PAYMENT
      properties:
        id:
          description: Идентификатор денежного перевода.
          type: string
        date:
          description: |
            Дата денежного перевода.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
        type:
          $ref: '#/components/schemas/OrdersStatsPaymentType'
        source:
          $ref: '#/components/schemas/OrdersStatsPaymentSourceType'
        total:
          description: |
            Сумма денежного перевода.

            Точность — два знака после запятой.
          type: number
        paymentOrder:
          $ref: '#/components/schemas/OrdersStatsPaymentOrderDTO'
      type: object
    OrdersStatsCommissionDTO:
      description: Информация о стоимости услуг.
      example:
        actual: 1.2315135367772556
        type: FEE
      properties:
        type:
          $ref: '#/components/schemas/OrdersStatsCommissionType'
        actual:
          description: |
            Сумма, которая была выставлена в момент создания заказа и которую нужно оплатить.
            Точность — два знака после запятой.
          type: number
      type: object
    OrdersStatsSubsidyDTO:
      description: "Информация о начислении баллов, которые используются для умень\
        шения стоимости размещения, и их списании в случае невыкупа или возврата."
      example:
        amount: 1.0246457001441578
        operationType: ACCRUAL
        type: YANDEX_CASHBACK
      properties:
        operationType:
          $ref: '#/components/schemas/OrdersStatsSubsidyOperationType'
        type:
          $ref: '#/components/schemas/OrdersStatsSubsidyType'
        amount:
          description: |
            Количество баллов, которые используются для уменьшения стоимости размещения, с точностью до двух знаков после запятой.
          type: number
      required:
      - amount
      - operationType
      - type
      type: object
    GoodsStatsWeightDimensionsDTO:
      description: |
        Информация о весе и габаритах товара.

        Если товар уже привязан к карточке (`marketSku`), в ответе вернутся габариты из карточки Маркета, а не размеры, которые вы передаете.
      example:
        length: 5.962133916683182
        width: 5.637376656633329
        weight: 7.061401241503109
        height: 2.3021358869347655
      properties:
        length:
          description: Длина товара в сантиметрах.
          type: number
        width:
          description: Ширина товара в сантиметрах.
          type: number
        height:
          description: Высота товара в сантиметрах.
          type: number
        weight:
          description: Вес товара в килограммах.
          type: number
      type: object
    GoodsStatsWarehouseDTO:
      description: Информация о складе.
      example:
        name: name
        id: 9
        stocks:
        - count: 1
          type: FIT
        - count: 1
          type: FIT
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
        stocks:
          description: Информация об остатках товаров на складе.
          items:
            $ref: '#/components/schemas/WarehouseStockDTO'
          type: array
      required:
      - stocks
      type: object
    TariffDTO:
      description: "Информация о тарифах, по которым нужно заплатить за услуги Мар\
        кета."
      example:
        amount: 2.027123023002322
        currency: RUR
        type: AGENCY_COMMISSION
        percent: 3.616076749251911
        parameters:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        type:
          $ref: '#/components/schemas/TariffType'
        percent:
          deprecated: true
          description: Значение тарифа в процентах.
          type: number
        amount:
          description: Значение тарифа.
          type: number
        currency:
          $ref: '#/components/schemas/CurrencyType'
        parameters:
          description: Параметры расчета тарифа.
          items:
            $ref: '#/components/schemas/TariffParameterDTO'
          type: array
      required:
      - amount
      - currency
      - parameters
      - type
      type: object
    OutletWorkingScheduleItemDTO:
      description: Расписание работы точки продаж.
      example:
        startDay: MONDAY
        endDay: null
        startTime: 09:59
        endTime: 23:59
      properties:
        startDay:
          $ref: '#/components/schemas/DayOfWeekType'
        endDay:
          $ref: '#/components/schemas/DayOfWeekType'
        startTime:
          description: |
            Точка продаж работает c указанного часа.

            Формат: `ЧЧ:ММ`.
          example: 09:59
          pattern: "^([0-1][0-9]|2[0-3]):[0-5][0-9]$"
          type: string
        endTime:
          description: |
            Точка продаж работает до указанного часа.

            Формат: `ЧЧ:ММ`.
          example: 23:59
          pattern: "^([0-1][0-9]|2[0-3]):[0-5][0-9]$"
          type: string
      required:
      - endDay
      - endTime
      - startDay
      - startTime
      type: object
    LicenseCheckStatusType:
      description: |
        Статус проверки лицензии:

        * `NEW` — лицензия проверяется.
        * `SUCCESS` — лицензия прошла проверку.
        * `FAIL` — лицензия не прошла проверку.
        * `REVOKE` — лицензия отозвана службой качества.
        * `DONT_WANT` — не проверяется.
        * `FAIL_MANUAL` — лицензия не прошла проверку службы качества.
      enum:
      - NEW
      - SUCCESS
      - FAIL
      - REVOKE
      - DONT_WANT
      - FAIL_MANUAL
      type: string
    GoodsFeedbackIdentifiersDTO:
      description: "Идентификаторы, которые связаны с отзывом."
      example:
        orderId: 6
        modelId: 1
      properties:
        orderId:
          description: Идентификатор заказа на Маркете.
          format: int64
          type: integer
        modelId:
          deprecated: true
          description: Идентификатор модели товара.
          format: int64
          type: integer
      type: object
    GoodsFeedbackDescriptionDTO:
      description: Текстовая часть отзыва.
      example:
        advantages: advantages
        disadvantages: disadvantages
        comment: comment
      properties:
        advantages:
          description: Описание плюсов товара в отзыве.
          type: string
        disadvantages:
          description: Описание минусов товара в отзыве.
          type: string
        comment:
          description: Комментарий в отзыве.
          type: string
      type: object
    GoodsFeedbackMediaDTO:
      description: Фото и видео.
      example:
        videos:
        - videos
        - videos
        photos:
        - photos
        - photos
      properties:
        photos:
          description: Ссылки на фото.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
        videos:
          description: Ссылки на видео.
          items:
            type: string
          minItems: 1
          nullable: true
          type: array
      type: object
    GoodsFeedbackStatisticsDTO:
      description: Статистическая информация по отзыву.
      example:
        commentsCount: 5
        rating: 3
        paidAmount: 2
        recommended: true
      properties:
        rating:
          description: Оценка товара.
          format: int32
          maximum: 5
          minimum: 1
          type: integer
        commentsCount:
          description: |
            Количество комментариев к отзыву.

            Учитываются только ответы на отзывы, а не дочерние комментарии.
          format: int64
          type: integer
        recommended:
          description: Рекомендуют ли этот товар.
          type: boolean
        paidAmount:
          description: "Количество баллов Плюса, которое автор получил за отзыв."
          format: int64
          type: integer
      required:
      - commentsCount
      - rating
      type: object
    GoodsFeedbackCommentAuthorType:
      description: |
        Тип автора:

        * `USER` — пользователь.
        * `BUSINESS` — кабинет.
      enum:
      - USER
      - BUSINESS
      type: string
    GetPriceWithDiscountDTO:
      allOf:
      - $ref: '#/components/schemas/PriceWithDiscountDTO'
      - $ref: '#/components/schemas/UpdateTimeDTO'
      description: Цена с указанием скидки и времени последнего обновления.
      example:
        discountBase: 0.23021358869347652
        currencyId: RUR
        value: 0.5637376656633328
        updatedAt: 2000-01-23T04:56:07.000+00:00
      type: object
    GetPriceWithVatDTO:
      allOf:
      - $ref: '#/components/schemas/PriceDTO'
      - $ref: '#/components/schemas/UpdateTimeDTO'
      description: Цена с указанием НДС и времени последнего обновления.
      example:
        vat: 5
        discountBase: 5.962133916683182
        currencyId: RUR
        value: 1.4658129805029452
        updatedAt: 2000-01-23T04:56:07.000+00:00
      type: object
    OfferErrorDTO:
      description: "Сообщение об ошибке, связанной с размещением товара."
      example:
        comment: comment
        message: message
      properties:
        message:
          description: Тип ошибки.
          type: string
        comment:
          description: Пояснение.
          type: string
      type: object
    QuantumDTO:
      description: |
        Настройка продажи квантами.

        Чтобы сбросить установленные ранее значения, передайте пустой параметр `quantum`.

        {% cut "Пример" %}

        ```json translate=no
        {
          "offers": [
            {
              "offerId": "08e35dc1-89a2-11e3-8055-0015e9b8c48d",
              "quantum": {}
            }
          ]
        }
        ```

        {% endcut %}
      example:
        minQuantity: 1
        stepQuantity: 60
      properties:
        minQuantity:
          description: |
            Минимальное количество единиц товара в заказе. Например, если указать 10, покупатель сможет добавить в корзину не меньше 10 единиц.

            ⚠️ Если количество товара на складе меньше заданного, ограничение не сработает и покупатель сможет его заказать.
          format: int32
          minimum: 1
          type: integer
        stepQuantity:
          description: |
            На сколько единиц покупатель сможет увеличить количество товара в корзине.

            Например, если задать 5, покупатель сможет добавить к заказу только 5, 10, 15, ... единиц товара.

            ⚠️ Если количество товара на складе не дотягивает до кванта, ограничение не сработает и покупатель сможет заказать количество, не кратное кванту.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      type: object
    OfferForRecommendationDTO:
      description: Информация о состоянии цены на товар.
      example:
        shows: 0
        price:
          currencyId: null
          value: 0.9301444243932576
        offerId: offerId
        competitiveness: OPTIMAL
        cofinancePrice:
          currencyId: null
          value: 0.7061401241503109
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        price:
          $ref: '#/components/schemas/BasePriceDTO'
        cofinancePrice:
          $ref: '#/components/schemas/GetPriceDTO'
        competitiveness:
          $ref: '#/components/schemas/PriceCompetitivenessType'
        shows:
          description: Количество показов карточки товара за последние 7 дней.
          format: int64
          type: integer
      type: object
    OfferRecommendationInfoDTO:
      description: "Рекомендации, касающиеся цены на товар."
      example:
        offerId: offerId
        competitivenessThresholds:
          optimalPrice:
            currencyId: null
            value: 0.9301444243932576
          averagePrice:
            currencyId: null
            value: 0.9301444243932576
      properties:
        offerId:
          description: |
            Ваш SKU — идентификатор товара в вашей системе.

            Правила использования SKU:

            * У каждого товара SKU должен быть свой.

            * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.

            SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).

            [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
          maxLength: 255
          minLength: 1
          pattern: "^(?=.*\\S.*)[^\\x00-\\x08\\x0A-\\x1f\\x7f]{1,255}$"
          type: string
        competitivenessThresholds:
          $ref: '#/components/schemas/PriceCompetitivenessThresholdsDTO'
      type: object
    ModelPriceDTO:
      description: Информация о ценах на модель товара.
      example:
        avg: 6.027456183070403
        min: 5.962133916683182
        max: 1.4658129805029452
      properties:
        avg:
          description: Средняя цена предложения для модели в регионе.
          type: number
        max:
          description: Максимальная цена предложения для модели в регионе.
          type: number
        min:
          description: Минимальная цена предложения для модели в регионе.
          type: number
      type: object
    ModelOfferDTO:
      description: Информация о предложении.
      example:
        shopRating: 9
        preDiscountPrice: 5.962133916683182
        shippingCost: 7.061401241503109
        pos: 1
        regionId: 2
        price: 5.637376656633329
        name: name
        discount: 6
        shopName: shopName
        inStock: 3
      properties:
        discount:
          description: Скидка на предложение в процентах.
          format: int32
          type: integer
        name:
          description: Наименование предложения.
          type: string
        pos:
          description: Позиция предложения в выдаче Маркета на карточке модели.
          format: int32
          type: integer
        preDiscountPrice:
          description: Цена предложения без скидки магазина.
          type: number
        price:
          description: "Цена предложения без скидки, которую получает покупатель п\
            ри оплате через Yandex Pay."
          type: number
        regionId:
          description: |
            Идентификатор региона предложения (регион, откуда доставляется товар).

            Сначала показываются предложения, доставляемые из региона, указанного в запросе в параметре `regionId`. Предложения, доставляемые из других регионов, показываются после них.
          format: int64
          type: integer
        shippingCost:
          description: |
            Стоимость доставки товара в регион:

            * `0` — платить за доставку не нужно.
            * `-1` — магазин не осуществляет доставку этого товара (самовывоз).

            Если стоимость доставки неизвестна, параметр не выводится.
          type: number
        shopName:
          description: "Название магазина (в том виде, в котором отображается на М\
            аркете)."
          type: string
        shopRating:
          description: |
            Рейтинг магазина.

            Возможные значения:
            * `-1` — у магазинов, недавно появившихся на Маркете, рейтинг появляется не сразу. До момента появления рейтинга для таких магазинов возвращается значение `-1`.
            * `1`.
            * `2`.
            * `3`.
            * `4`.
            * `5`.
          format: int32
          type: integer
        inStock:
          deprecated: true
          description: |
            {% note warning "Не используйте этот параметр." %}

             

            {% endnote %}
          format: int32
          type: integer
      type: object
    BidRecommendationItemDTO:
      description: "Рекомендованная ставка, возможная доля показов и доступные доп\
        олнительные инструменты продвижения."
      example:
        benefits:
        - BESTS
        - BESTS
        showPercent: 8
        bid: 570
      properties:
        bid:
          description: Значение ставки.
          example: 570
          format: int32
          maximum: 9999
          minimum: 0
          type: integer
        showPercent:
          description: |
            Доля показов.
          format: int64
          maximum: 100
          minimum: 0
          type: integer
        benefits:
          description: |
            Список доступных субсидий.

            Чтобы получить необходимый инструмент продвижения, установите ставку, которая будет рекомендована для этого инструмента или выше.
          items:
            $ref: '#/components/schemas/BenefitType'
          minItems: 1
          nullable: true
          type: array
          uniqueItems: true
      required:
      - bid
      - showPercent
      type: object
    PriceRecommendationItemDTO:
      description: Рекомендованная цена.
      example:
        campaignId: 6
        price: 1.1465812980502945
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        price:
          description: |
            Рекомендованная цена на товар. Чтобы продвижение хорошо работало, цена на товар должна быть не выше этого значения. [Подробно о рекомендованных ценах](https://yandex.ru/support/marketplace/marketing/campaigns.html#prices)
          format: decimal
          minimum: 1
          type: number
      required:
      - campaignId
      - price
      type: object
    WarehouseAddressDTO:
      description: Адрес склада.
      example:
        number: number
        city: city
        street: street
        block: block
        gps:
          latitude: 9.965781217890562
          longitude: 9.369310271410669
        building: building
      properties:
        city:
          description: Город.
          maxLength: 200
          type: string
        street:
          description: Улица.
          maxLength: 512
          type: string
        number:
          description: Номер дома.
          maxLength: 256
          type: string
        building:
          description: Номер строения.
          maxLength: 16
          type: string
        block:
          description: Номер корпуса.
          maxLength: 16
          type: string
        gps:
          $ref: '#/components/schemas/GpsDTO'
      required:
      - city
      - gps
      type: object
    WarehouseGroupInfoDTO:
      description: |
        Информация о группе, к которой принадлежит склад.

        Возвращается только для складов в группах.

        [Что такое группы складов и зачем они нужны](https://yandex.ru/support/marketplace/assortment/operations/stocks.html#unified-stocks)
      example:
        name: name
        id: 1
      properties:
        name:
          description: "Название группы, к которой принадлежит склад."
          type: string
        id:
          description: Идентификатор группы складов.
          format: int64
          type: integer
      required:
      - id
      - name
      type: object
    ParameterType:
      description: |
        Тип данных:

        * `TEXT` — текст.
        * `ENUM` — список возможных значений.
        * `BOOLEAN` — `true` или `false`.
        * `NUMERIC` — число.
      enum:
      - TEXT
      - ENUM
      - BOOLEAN
      - NUMERIC
      type: string
    CategoryParameterUnitDTO:
      description: Единицы измерения характеристики товара.
      example:
        defaultUnitId: 1
        units:
        - name: кг
          fullName: килограмм
          id: 5
        - name: кг
          fullName: килограмм
          id: 5
      properties:
        defaultUnitId:
          description: Единица измерения по умолчанию.
          format: int64
          type: integer
        units:
          description: Допустимые единицы измерения.
          items:
            $ref: '#/components/schemas/UnitDTO'
          type: array
      required:
      - defaultUnitId
      - units
      type: object
    OfferCardRecommendationType:
      description: |
        Рекомендация по дополнению или замене контента. Не возвращается для карточек, которые заполнены Маркетом или содержат бывшие в употреблении товары.

        Часть рекомендаций относятся к **основным параметрам**, которые есть у товаров любых категорий. Другие — к тем **характеристикам**, которые есть у товара потому, что он относится к определенной категории.

        **1. Рекомендации, относящиеся к основным параметрам**

        Каждая такая рекомендация относится к **единственному параметру**. Чтобы заполнить этот параметр, пользуйтесь запросом [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md).

        Рекомендации по заполнению параметров в `updateOfferMappings`:

        * `RECOGNIZED_VENDOR` — напишите название производителя так, как его пишет сам производитель (параметр `vendor`).
        * `PICTURE_COUNT` — добавьте изображения (параметр `pictures`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/images)

          Для рекомендации приходит процент ее выполнения.
        * `FIRST_PICTURE_SIZE`— замените первое изображение более крупным (параметр `pictures`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/images)
        * `TITLE_LENGTH` — измените название (параметр `name`). Составьте название по схеме: тип + бренд или производитель + модель + особенности, если есть (размер, вес, цвет). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/title)
        * `DESCRIPTION_LENGTH` — добавьте описание рекомендуемого размера (параметр `description`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/description)
        * `AVERAGE_PICTURE_SIZE` — замените все изображения на изображения высокого качества (параметр `pictures`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/images)
        * `FIRST_VIDEO_LENGTH` — добавьте первое видео рекомендуемой длины (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)
        * `FIRST_VIDEO_SIZE` — замените первое видео на видео высокого качества (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)
        * `AVERAGE_VIDEO_SIZE` — замените все видео на видео высокого качества (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)
        * `VIDEO_COUNT` — добавьте хотя бы одно видео (параметр `videos`). [Требования](https://yandex.ru/support2/marketplace/ru/assortment/fields/video)

          Для рекомендации приходит процент ее выполнения.

        **2. Рекомендации, относящиеся к характеристикам по категориям**

        Каждая такая рекомендация предполагает заполнение **одной или нескольких характеристик**. Чтобы узнать, какие именно характеристики нужно заполнить, воспользуйтесь запросом [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md). Например, если вы получили рекомендацию `MAIN`, нужно заполнить характеристики, имеющие `MAIN` в массиве `recommendationTypes`.

        Рекомендации:

        * `MAIN` — заполните ключевые характеристики товара, которые используются в поиске и фильтрах.

          Для рекомендации приходит процент ее выполнения.
        * `ADDITIONAL` — заполните дополнительные характеристики товара.

          Для рекомендации приходит процент ее выполнения.
        * `DISTINCTIVE` — заполните характеристики, которыми отличаются друг от друга варианты товара.

          Для рекомендации приходит процент ее выполнения.

        **3. Устаревшие рекомендации**

        * `HAS_VIDEO`.
        * `FILTERABLE`.
        * `HAS_DESCRIPTION`.
        * `HAS_BARCODE`.
      enum:
      - HAS_VIDEO
      - RECOGNIZED_VENDOR
      - MAIN
      - ADDITIONAL
      - DISTINCTIVE
      - FILTERABLE
      - PICTURE_COUNT
      - HAS_DESCRIPTION
      - HAS_BARCODE
      - FIRST_PICTURE_SIZE
      - TITLE_LENGTH
      - DESCRIPTION_LENGTH
      - AVERAGE_PICTURE_SIZE
      - FIRST_VIDEO_SIZE
      - FIRST_VIDEO_LENGTH
      - AVERAGE_VIDEO_SIZE
      - VIDEO_COUNT
      type: string
    ParameterValueOptionDTO:
      description: Значение характеристики.
      example:
        description: description
        id: 5
        value: value
      properties:
        id:
          description: Идентификатор значения.
          format: int64
          type: integer
        value:
          description: Значение.
          type: string
        description:
          description: Описание значения.
          type: string
      required:
      - id
      - value
      type: object
    ParameterValueConstraintsDTO:
      description: Ограничения на значения характеристик.
      example:
        minValue: 2.3021358869347655
        maxValue: 7.061401241503109
        maxLength: 9
      properties:
        minValue:
          description: Минимальное число.
          format: double
          type: number
        maxValue:
          description: Максимальное число.
          format: double
          type: number
        maxLength:
          description: Максимальная длина текста.
          format: int32
          type: integer
      type: object
    ValueRestrictionDTO:
      description: |
        Ограничение на возможные значения, накладываемое другой характеристикой.

        Если ограничивающая характеристика принимает определенное значение, список возможных значений ограничиваемой характеристики сокращается.

        **Пример**

        Характеристика **размер** сама по себе может принимать девять разных значений: `S`, `M`, `L`, `44`, `46`, `48`, `42/164`, `46/176`, `44S`.

        Если ограничивающая характеристика **размерная сетка** принимает значение `RU`, список возможных значений размера сокращается до `44`, `46`, `48`.
      example:
        limitedValues:
        - limitingOptionValueId: 2
          optionValueIds:
          - 1
          - 1
        - limitingOptionValueId: 2
          optionValueIds:
          - 1
          - 1
        limitingParameterId: 1
      properties:
        limitingParameterId:
          description: Идентификатор ограничивающей характеристики.
          format: int64
          minimum: 1
          type: integer
        limitedValues:
          description: Значения ограничивающей характеристики и соответствующие допустимые
            значения текущей характеристики.
          items:
            $ref: '#/components/schemas/OptionValuesLimitedDTO'
          type: array
      required:
      - limitedValues
      - limitingParameterId
      type: object
    OfferCardContentStatusType:
      description: |
        Статус вычисления рейтинга карточки товара и рекомендаций:

        * `UPDATING` — рейтинг обновляется.
        * `ACTUAL` — рейтинг актуальный.
      enum:
      - UPDATING
      - ACTUAL
      type: string
    OfferCardRecommendationDTO:
      description: Рекомендация по заполнению карточки товара.
      example:
        remainingRatingPoints: 60
        type: HAS_VIDEO
        percent: 14
      properties:
        type:
          $ref: '#/components/schemas/OfferCardRecommendationType'
        percent:
          description: |
            Процент выполнения рекомендации.

            Указывается для рекомендаций некоторых типов:

            * `PICTURE_COUNT`.
            * `VIDEO_COUNT`.
            * `MAIN`.
            * `ADDITIONAL`.
            * `DISTINCTIVE`.
          exclusiveMaximum: true
          format: int32
          maximum: 100
          minimum: 0
          type: integer
        remainingRatingPoints:
          description: |
            Максимальное количество баллов рейтинга карточки, которые можно получить за выполнение рекомендаций.
          format: int32
          maximum: 100
          minimum: 1
          type: integer
      required:
      - type
      type: object
    OfferContentErrorType:
      description: |
        Типы ошибок и предупреждений:

        * `OFFER_NOT_FOUND` — такого товара нет в каталоге.
        * `UNKNOWN_CATEGORY` — указана неизвестная категория.
        * `INVALID_CATEGORY` — указана нелистовая категория. Укажите ту, которая не имеет дочерних категорий.
        * `UNKNOWN_PARAMETER` — передана характеристика, которой нет среди характеристик категории.
        * `UNEXPECTED_BOOLEAN_VALUE` — вместо boolean-значения передано что-то другое.
        * `NUMBER_FORMAT` — передана строка, не обозначающая число, вместо числа.
        * `INVALID_UNIT_ID` — передана единица измерения, недопустимая для характеристики.
        * `INVALID_GROUP_ID_LENGTH` — в названии превышено допустимое значение символов — 255.
        * `INVALID_GROUP_ID_CHARACTERS` — переданы [недопустимые символы](*ascii-code).

        Проверить, какие категорийные характеристики доступны для заданной категории, и получить их настройки можно с помощью запроса [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters).
      enum:
      - OFFER_NOT_FOUND
      - UNKNOWN_CATEGORY
      - INVALID_CATEGORY
      - UNKNOWN_PARAMETER
      - UNEXPECTED_BOOLEAN_VALUE
      - NUMBER_FORMAT
      - INVALID_UNIT_ID
      - INVALID_GROUP_ID_LENGTH
      - INVALID_GROUP_ID_CHARACTERS
      type: string
    CalculatedTariffDTO:
      description: Информация об услугах Маркета.
      example:
        amount: 9.301444243932576
        type: AGENCY_COMMISSION
        parameters:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        type:
          $ref: '#/components/schemas/CalculatedTariffType'
        amount:
          description: Стоимость услуги в рублях.
          type: number
        parameters:
          description: Параметры расчета тарифа.
          items:
            $ref: '#/components/schemas/TariffParameterDTO'
          type: array
      required:
      - parameters
      - type
      type: object
    CategoryErrorType:
      description: |
        Типы ошибок:

        * `UNKNOWN_CATEGORY` — указана неизвестная категория.
        * `CATEGORY_IS_NOT_LEAF` — указана нелистовая категория. Укажите ту, которая не имеет дочерних категорий.
      enum:
      - UNKNOWN_CATEGORY
      - CATEGORY_IS_NOT_LEAF
      type: string
    QualityRatingDTO:
      description: Информация об индексе качества.
      example:
        components:
        - componentType: DBS_CANCELLATION_RATE
          value: 14.658129805029452
        - componentType: DBS_CANCELLATION_RATE
          value: 14.658129805029452
        rating: 60
        calculationDate: 2000-01-23
      properties:
        rating:
          description: Значение индекса качества.
          format: int64
          maximum: 100
          minimum: 0
          type: integer
        calculationDate:
          description: |
            Дата вычисления.

            Формат даты: `ГГГГ‑ММ‑ДД`.
          format: date
          type: string
        components:
          description: Составляющие индекса качества.
          items:
            $ref: '#/components/schemas/QualityRatingComponentDTO'
          type: array
      required:
      - calculationDate
      - components
      - rating
      type: object
    AffectedOrderQualityRatingComponentType:
      description: |
        Составляющие индекса качества.

        **Для модели DBS:**
        * `DBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `DBS_LATE_DELIVERY_RATE` — доля заказов, доставленных после плановой даты.

        **Для моделей FBS и Экспресс:**
        * `FBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `FBS_LATE_SHIP_RATE` — доля не вовремя отгруженных заказов.
      enum:
      - DBS_CANCELLATION_RATE
      - DBS_LATE_DELIVERY_RATE
      - FBS_CANCELLATION_RATE
      - FBS_LATE_SHIP_RATE
      type: string
    PromoPeriodDTO:
      description: Время проведения акции.
      example:
        dateTimeFrom: 2000-01-23T04:56:07.000+00:00
        dateTimeTo: 2000-01-23T04:56:07.000+00:00
      properties:
        dateTimeFrom:
          description: Дата и время начала акции.
          format: date-time
          type: string
        dateTimeTo:
          description: Дата и время окончания акции.
          format: date-time
          type: string
      required:
      - dateTimeFrom
      - dateTimeTo
      type: object
    GetPromoAssortmentInfoDTO:
      description: Информация о товарах в акции.
      example:
        activeOffers: 0
        processing: true
        potentialOffers: 6
      properties:
        activeOffers:
          description: |
            Количество товаров, которые участвуют или участвовали в акции.

            Учитываются только товары, которые были добавлены вручную.

            Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
          format: int32
          type: integer
        potentialOffers:
          description: |
            Количество доступных товаров в акции.

            Параметр возвращается только для текущих и будущих акций.
          format: int32
          type: integer
        processing:
          description: |
            Есть ли изменения в ассортименте, которые еще не применились. Сохранение изменений занимает некоторое время.

            Параметр возвращается только для текущих и будущих акций.
          type: boolean
      required:
      - activeOffers
      type: object
    GetPromoMechanicsInfoDTO:
      description: Информация о типе акции.
      example:
        promocodeInfo:
          promocode: promocode
          discount: 1
        type: DIRECT_DISCOUNT
      properties:
        type:
          $ref: '#/components/schemas/MechanicsType'
        promocodeInfo:
          $ref: '#/components/schemas/GetPromoPromocodeInfoDTO'
      required:
      - type
      type: object
    GetPromoBestsellerInfoDTO:
      description: Информация об акции «Бестселлеры Маркета».
      example:
        renewalEnabled: true
        bestseller: true
        entryDeadline: 2000-01-23T04:56:07.000+00:00
      properties:
        bestseller:
          description: "Является ли акция «Бестселлером Маркета». Подробнее об это\
            й акции читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/bestsellers)."
          type: boolean
        entryDeadline:
          description: |
            До какой даты можно добавить товар в акцию «Бестселлеры Маркета».

            Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета».
          format: date-time
          type: string
        renewalEnabled:
          description: |
            Включен ли автоматический перенос ассортимента между акциями «Бестселлеры Маркета».

            Параметр возвращается только для текущих и будущих акций «Бестселлеры Маркета».
          type: boolean
      required:
      - bestseller
      type: object
    ChannelType:
      description: |
        Каналы продвижения товаров:

        * `PUSH` — пуш-уведомление из приложения Яндекс Маркет.

        * `STRETCH_MAIN` — верхний баннер-растяжка на главной странице Яндекс Маркета.

        * `MAIN_PAGE_CAROUSEL` — карусель акций на главной странице Яндекс Маркета.

        * `PRODUCT_RETAIL_PAGE` — товар на странице ритейл-повода.

        * `MAIN_PAGE_CAROUSEL_WEB` — карусель акций на главной странице веб версии Яндекс Маркета.

        * `PRODUCT_SEPARATE_LANDING` — товар на лендинге акции.

        * `SUPER_SHELF_CATEGORY` — полка в категориях.

        * `CAROUSEL_RETAIL_PAGE` — карусель на лендинге ритейл-повода.

        * `POPUP_APPLICATION` — всплывающее окно в приложении Яндекс Маркет.

        * `POST_TELEGRAM` — пост в Телеграм-канале Яндекс Маркета.

        * `CPA` — реклама в партнерской сети Яндекс Маркета.

        * `WEB_PERFORMANCE_DIRECT` — реклама в Яндекс Директе.

        * `APP_PERFORMANCE` — реклама в AppStore и Google Play.

        * `BANNER_PICKUP_POINT` — баннер в ПВЗ Маркета.

        * `BLOGGER_PERFORMANCE` — рекламная интеграция у блогеров.

        * `DIGITAL_CHANNEL_BANNER` — баннер в digital-каналах и социальных сетях VK, Одноклассники.

        * `YANDEX_ECOSYSTEM_CHANNELS` — реклама в других сервисах Яндекса: GO, Delivery, Еда.

        * `PARTNERS_MAIN_BANNER` — баннер на главной странице mail.ru, auto.ru, ya.ru.

        * `OTHER` — прочее.
      enum:
      - PUSH
      - STRETCH_MAIN
      - MAIN_PAGE_CAROUSEL
      - PRODUCT_RETAIL_PAGE
      - MAIN_PAGE_CAROUSEL_WEB
      - PRODUCT_SEPARATE_LANDING
      - SUPER_SHELF_CATEGORY
      - CAROUSEL_RETAIL_PAGE
      - POPUP_APPLICATION
      - POST_TELEGRAM
      - CPA
      - WEB_PERFORMANCE_DIRECT
      - APP_PERFORMANCE
      - BANNER_PICKUP_POINT
      - BLOGGER_PERFORMANCE
      - DIGITAL_CHANNEL_BANNER
      - YANDEX_ECOSYSTEM_CHANNELS
      - PARTNERS_MAIN_BANNER
      - OTHER
      type: object
    GetPromoConstraintsDTO:
      description: Ограничения в акции.
      example:
        warehouseIds:
        - 5
        - 5
      properties:
        warehouseIds:
          description: |
            Идентификаторы складов, для которых действует акция. Товары, которые лежат на других складах, не будут продаваться по акции.

            Параметр возвращается, только если в условиях акции есть ограничение по складу.
          items:
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
      type: object
    PromoOfferParticipationStatusType:
      description: |
        Статус товара в акции:

        * `AUTO` — добавлен автоматически во всех магазинах кабинета, в которых товар доступен для покупки.

        * `PARTIALLY_AUTO` — добавлен автоматически у части магазинов.

        * `MANUAL` — добавлен вручную.

        * `NOT_PARTICIPATING` — не участвует в акции.

        * `RENEWED` — успешно перенесен из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `RENEW_FAILED` — не получилось перенести из предыдущей акции «Бестселлеры Маркета». Только для акций «Бестселлеры Маркета».

        * `MINIMUM_FOR_PROMOS` — участвует в акции с ценой `maxPromoPrice` (установлен минимум по цене для акций, который соответствует порогу `maxPromoPrice`). Только для акций «Бестселлеры Маркета».

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      enum:
      - AUTO
      - PARTIALLY_AUTO
      - MANUAL
      - NOT_PARTICIPATING
      - RENEWED
      - RENEW_FAILED
      - MINIMUM_FOR_PROMOS
      type: string
    PromoOfferParamsDTO:
      description: |
        Параметры товара в акции.

        Возвращается параметр, который соответствует типу акции.
      example:
        discountParams:
          promoPrice: 6
          maxPromoPrice: 1
          price: 0
        promocodeParams:
          maxPrice: 5
      properties:
        discountParams:
          $ref: '#/components/schemas/PromoOfferDiscountParamsDTO'
        promocodeParams:
          $ref: '#/components/schemas/PromoOfferPromocodeParamsDTO'
      type: object
    PromoOfferAutoParticipatingDetailsDTO:
      description: |
        Информация об автоматическом добавлении товара в акцию.

        Причины, по которым товар не был добавлен автоматически в других магазинах, можно узнать в кабинете продавца на Маркете на странице акции.

        Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index).
      example:
        campaignIds:
        - 5
        - 5
      properties:
        campaignIds:
          description: |
            Идентификаторы кампаний тех магазинов, в которых товар добавлен в акцию автоматически.

            Возвращается, если статус товара в акции — `PARTIALLY_AUTO`.
          items:
            description: Идентификатор кампании.
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
      type: object
    UpdatePromoOfferDiscountParamsDTO:
      description: |
        Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.

        Обязательный параметр для акций с этими типами.
      example:
        promoPrice: 1
        price: 1
      properties:
        price:
          description: |
            Зачеркнутая цена — та, по которой товар продавался до акции.

            Указывается в рублях.

            Число должно быть целым.
          format: int64
          minimum: 1
          type: integer
        promoPrice:
          description: |
            Цена по акции — та, по которой вы хотите продавать товар.

            Указывается в рублях.

            Число должно быть целым.
          format: int64
          minimum: 1
          type: integer
      type: object
    RejectedPromoOfferUpdateReasonType:
      description: |
        Причина отклонения изменения:

        * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.

        * `OFFER_DUPLICATION` — один и тот же товар передан несколько раз.

        * `OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар не подходит под условия акции.

        * `OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED` — товар не добавлен в акцию по техническим причинам.

        * `DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED` — истек срок добавления товаров в акцию.

        * `EMPTY_OLD_PRICE` — не указана зачеркнутая цена.

        * `EMPTY_PROMO_PRICE` — не указана цена по акции.

        * `MAX_PROMO_PRICE_EXCEEDED` — цена по акции превышает максимально возможную цену для участия в акции.

        * `PROMO_PRICE_BIGGER_THAN_MAX` — цена по акции больше 95% от зачеркнутой цены.

        * `PROMO_PRICE_SMALLER_THAN_MIN` — цена по акции меньше 1% от зачеркнутой цены.
      enum:
      - OFFER_DOES_NOT_EXIST
      - OFFER_DUPLICATION
      - OFFER_NOT_ELIGIBLE_FOR_PROMO
      - OFFER_PROMOS_MAX_BYTE_SIZE_EXCEEDED
      - DEADLINE_FOR_FOCUS_PROMOS_EXCEEDED
      - EMPTY_OLD_PRICE
      - EMPTY_PROMO_PRICE
      - MAX_PROMO_PRICE_EXCEEDED
      - PROMO_PRICE_BIGGER_THAN_MAX
      - PROMO_PRICE_SMALLER_THAN_MIN
      type: string
    PromoOfferUpdateWarningDTO:
      description: "Предупреждение, которое появилось при добавлении товара в акци\
        ю или изменении его цен."
      example:
        code: DEEP_DISCOUNT_OFFER
        campaignIds:
        - 0
        - 0
      properties:
        code:
          $ref: '#/components/schemas/PromoOfferUpdateWarningCodeType'
        campaignIds:
          description: |
            Идентификаторы кампаний тех магазинов, для которых получены предупреждения.

            Не возвращается, если предупреждения действуют для всех магазинов в кабинете.
          items:
            description: Идентификатор кампании.
            format: int64
            type: integer
          minItems: 1
          nullable: true
          type: array
      required:
      - code
      type: object
    RejectedPromoOfferDeleteReasonType:
      description: |
        Описание ошибки:

        * `OFFER_DOES_NOT_EXIST` — в кабинете нет товара с таким SKU.
      enum:
      - OFFER_DOES_NOT_EXIST
      type: string
    SupplyRequestIdDTO:
      description: Идентификатор и номера заявки.
      example:
        marketplaceRequestId: marketplaceRequestId
        warehouseRequestId: warehouseRequestId
        id: 1
      properties:
        id:
          description: |
            Идентификатор заявки.

            {% note warning "Используется только в API" %}

            По нему не получится найти заявки в кабинете продавца на Маркете. Для этого используйте `marketplaceRequestId` или `warehouseRequestId`.

            {% endnote %}
          format: int64
          minimum: 1
          type: integer
        marketplaceRequestId:
          description: |
            Номер заявки на маркетплейсе.

            Также указывается в кабинете продавца на Маркете.
          type: string
        warehouseRequestId:
          description: |
            Номер заявки на складе.

            Также указывается в кабинете продавца на Маркете.
          type: string
      required:
      - id
      type: object
    SupplyRequestCountersDTO:
      description: "Количество товаров, коробок и палет в заявке."
      example:
        undefinedCount: 0
        acceptableCount: 0
        actualPalletsCount: 0
        planCount: 0
        surplusCount: 0
        shortageCount: 0
        actualBoxCount: 0
        factCount: 0
        defectCount: 0
        unacceptableCount: 0
      properties:
        planCount:
          description: Количество товаров в заявке на поставку.
          format: int32
          minimum: 0
          type: integer
        factCount:
          description: "Количество товаров, которые приняты на складе."
          format: int32
          minimum: 0
          type: integer
        undefinedCount:
          description: Количество непринятых товаров.
          format: int32
          minimum: 0
          type: integer
        surplusCount:
          description: Количество лишних товаров.
          format: int32
          minimum: 0
          type: integer
        shortageCount:
          description: Количество товаров с недостатками.
          format: int32
          minimum: 0
          type: integer
        defectCount:
          description: Количество товаров с браком.
          format: int32
          minimum: 0
          type: integer
        acceptableCount:
          description: "Количество товаров, которые можно привезти дополнительно."
          format: int32
          minimum: 0
          type: integer
        unacceptableCount:
          description: "Количество товаров, которые нельзя привезти дополнительно."
          format: int32
          minimum: 0
          type: integer
        actualPalletsCount:
          description: "Количество палет, которые приняты на складе."
          format: int32
          minimum: 0
          type: integer
        actualBoxCount:
          description: "Количество коробок, которые приняты на складе."
          format: int32
          minimum: 0
          type: integer
      type: object
    SupplyRequestReferenceDTO:
      description: Информация о связанных заявках.
      example:
        id:
          marketplaceRequestId: marketplaceRequestId
          warehouseRequestId: warehouseRequestId
          id: 1
        type: VIRTUAL_DISTRIBUTION
      properties:
        id:
          $ref: '#/components/schemas/SupplyRequestIdDTO'
        type:
          $ref: '#/components/schemas/SupplyRequestReferenceType'
      required:
      - id
      - type
      type: object
    SupplyRequestLocationDTO:
      description: Информации о складе или ПВЗ в заявке.
      example:
        address:
          fullAddress: fullAddress
          gps:
            latitude: 9.965781217890562
            longitude: 9.369310271410669
        name: name
        requestedDate: 2000-01-23T04:56:07.000+00:00
        serviceId: 7
        type: FULFILLMENT
      properties:
        requestedDate:
          description: Дата и время поставки на склад или в ПВЗ.
          format: date-time
          type: string
        serviceId:
          description: Идентификатор склада или логистического партнера ПВЗ.
          format: int64
          type: integer
        name:
          description: Название склада или ПВЗ.
          type: string
        address:
          $ref: '#/components/schemas/SupplyRequestLocationAddressDTO'
        type:
          $ref: '#/components/schemas/SupplyRequestLocationType'
      required:
      - address
      - name
      - serviceId
      - type
      type: object
    SupplyRequestItemCountersDTO:
      description: Количество товаров в заявке.
      example:
        planCount: 0
        surplusCount: 0
        shortageCount: 0
        factCount: 0
        defectCount: 0
      properties:
        planCount:
          description: Количество товаров в заявке на поставку.
          format: int32
          minimum: 0
          type: integer
        factCount:
          description: "Количество товаров, которые приняты на складе."
          format: int32
          minimum: 0
          type: integer
        surplusCount:
          description: Количество лишних товаров.
          format: int32
          minimum: 0
          type: integer
        shortageCount:
          description: Количество товаров с недостатками.
          format: int32
          minimum: 0
          type: integer
        defectCount:
          description: Количество товаров с браком.
          format: int32
          minimum: 0
          type: integer
      type: object
    SupplyRequestDocumentType:
      description: |
        Тип документа:

        * **Документы, которые загружает магазин**
          * `SUPPLY` — список товаров.
          * `ADDITIONAL_SUPPLY` — список товаров в дополнительной поставке.
          * `VIRTUAL_DISTRIBUTION_CENTER_SUPPLY` — список товаров в [мультипоставке](*multisupply).
          * `TRANSFER` — список товаров для утилизации.
          * `WITHDRAW` — список товаров для вывоза.

        * **Поставка товаров**
          * `VALIDATION_ERRORS` — ошибки по товарам в поставке.
          * `CARGO_UNITS` — ярлыки для грузомест.

        * **Дополнительная поставка и непринятые товары**
          * `ADDITIONAL_SUPPLY_ACCEPTABLE_GOODS` — товары, которые подходят для дополнительной поставки.
          * `ADDITIONAL_SUPPLY_UNACCEPTABLE_GOODS` — вывоз непринятых товаров.

        * **Маркировка товаров**
          * `INBOUND_UTD` — входящий УПД.
          * `OUTBOUND_UTD` — исходящий УПД.
          * `IDENTIFIERS` — коды маркировки товаров.
          * `CIS_FACT` — принятые товары с кодами маркировки.
          * `ITEMS_WITH_CISES` — товары, для которых нужна маркировка.
          * `REPORT_OF_WITHDRAW_WITH_CISES` — маркированные товары для вывоза со склада.
          * `SECONDARY_ACCEPTANCE_CISES` — маркированные товары, которые приняты после вторичной приемки.
          * `RNPT_FACT` — принятые товары с регистрационным номером партии товара (РНПТ).

        * **Акты**
          * `ACT_OF_WITHDRAW` — акт возврата.
          * `ANOMALY_CONTAINERS_WITHDRAW_ACT` — акт изъятия непринятого товара.
          * `ACT_OF_WITHDRAW_FROM_STORAGE` — акт списания с ответственного хранения.
          * `ACT_OF_RECEPTION_TRANSFER` — акт приема-передачи.
          * `ACT_OF_DISCREPANCY` — акт о расхождениях.
          * `SECONDARY_RECEPTION_ACT` — акт вторичной приемки.
      enum:
      - SUPPLY
      - ADDITIONAL_SUPPLY
      - VIRTUAL_DISTRIBUTION_CENTER_SUPPLY
      - TRANSFER
      - INBOUND_UTD
      - OUTBOUND_UTD
      - ADDITIONAL_SUPPLY_ACCEPTABLE_GOODS
      - ADDITIONAL_SUPPLY_UNACCEPTABLE_GOODS
      - VALIDATION_ERRORS
      - WITHDRAW
      - ACT_OF_WITHDRAW
      - ANOMALY_CONTAINERS_WITHDRAW_ACT
      - ACT_OF_WITHDRAW_FROM_STORAGE
      - ACT_OF_RECEPTION_TRANSFER
      - ACT_OF_DISCREPANCY
      - SECONDARY_RECEPTION_ACT
      - CARGO_UNITS
      - IDENTIFIERS
      - CIS_FACT
      - ITEMS_WITH_CISES
      - REPORT_OF_WITHDRAW_WITH_CISES
      - SECONDARY_ACCEPTANCE_CISES
      - RNPT_FACT
      type: string
    ApiKeyScopeType:
      description: |
        Доступы к методам:

        * `ALL_METHODS` — полное управление кабинетом.
        * `ALL_METHODS_READ_ONLY` — просмотр всей информации в кабинете.
        * `INVENTORY_AND_ORDER_PROCESSING` — обработка заказов и учет товаров.
        * `INVENTORY_AND_ORDER_PROCESSING_READ_ONLY` — просмотр информации о заказах.
        * `PRICING` — управление ценами.
        * `PRICING_READ_ONLY` — просмотр цен.
        * `OFFERS_AND_CARDS_MANAGEMENT` — управление товарами и карточками.
        * `OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY` — просмотр товаров и карточек.
        * `PROMOTION` — продвижение товаров.
        * `PROMOTION_READ_ONLY` — просмотр информации о продвижении товаров.
        * `FINANCE_AND_ACCOUNTING` — просмотр финансовой информации и отчётности.
        * `COMMUNICATION` — общение с покупателями.
        * `SETTINGS_MANAGEMENT` — настройка магазинов.
        * `SUPPLIES_MANAGEMENT_READ_ONLY` — получение информации по FBY-заявкам.
      enum:
      - ALL_METHODS
      - ALL_METHODS_READ_ONLY
      - INVENTORY_AND_ORDER_PROCESSING
      - INVENTORY_AND_ORDER_PROCESSING_READ_ONLY
      - PRICING
      - PRICING_READ_ONLY
      - OFFERS_AND_CARDS_MANAGEMENT
      - OFFERS_AND_CARDS_MANAGEMENT_READ_ONLY
      - PROMOTION
      - PROMOTION_READ_ONLY
      - FINANCE_AND_ACCOUNTING
      - COMMUNICATION
      - SETTINGS_MANAGEMENT
      - SUPPLIES_MANAGEMENT_READ_ONLY
      type: string
    CampaignSettingsScheduleDTO:
      description: Расписание работы службы доставки в своем регионе.
      example:
        customWorkingDays:
        - 23-09-2022
        - 23-09-2022
        period:
          fromDate: 23-09-2022
          toDate: 23-09-2022
        customHolidays:
        - 23-09-2022
        - 23-09-2022
        weeklyHolidays:
        - 1
        - 1
        availableOnHolidays: true
        totalHolidays:
        - 23-09-2022
        - 23-09-2022
      properties:
        availableOnHolidays:
          description: |
            Признак работы службы доставки в государственные праздники.
            Возможные значения.
            * `false` — служба доставки не работает в праздничные дни.
            * `true` — служба доставки работает в праздничные дни.
          type: boolean
        customHolidays:
          description: "Список дней, в которые служба доставки не работает. Дни ма\
            газин указал в кабинете продавца на Маркете."
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
          type: array
        customWorkingDays:
          description: "Список выходных и праздничных дней, в которые служба доста\
            вки работает. Дни магазин указал в кабинете продавца на Маркете."
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
          type: array
        period:
          $ref: '#/components/schemas/CampaignSettingsTimePeriodDTO'
        totalHolidays:
          description: "Итоговый список нерабочих дней службы доставки. Список рас\
            считывается с учетом выходных, нерабочих дней и государственных праздн\
            иков. Информацию по ним магазин указывает в кабинете продавца на Марке\
            те."
          items:
            $ref: '#/components/schemas/DateDdMmYyyy'
          type: array
        weeklyHolidays:
          description: Список выходных дней недели и государственных праздников.
          items:
            description: |
              Номер дня недели.
              Возможные значения:
              * `1` — понедельник.
              * `2` — вторник.
              * `3` — среда.
              * `4` — четверг.
              * `5` — пятница.
              * `6` — суббота.
              * `7` — воскресенье.

              Для формата JSON выводится номер дня в виде числа.
            format: int32
            maximum: 7
            minimum: 1
            type: integer
          type: array
      required:
      - customHolidays
      - customWorkingDays
      - totalHolidays
      - weeklyHolidays
      type: object
    OrderPromoType:
      description: |
        Тип скидки:

        * `DIRECT_DISCOUNT` — прямая скидка, которую устанавливает продавец или Маркет.

        * `BLUE_SET` — комплекты.

        * `BLUE_FLASH` — флеш-акция.

        * `MARKET_COUPON` — скидка по промокоду Маркета.

        * `MARKET_PROMOCODE` — скидка по промокоду магазина.

        * `MARKET_BLUE` — скидка на Маркете.

        * `CHEAPEST_AS_GIFT` — самый дешевый товар в подарок.

        * `CASHBACK` — кешбэк.

        * `SPREAD_DISCOUNT_COUNT` — скидка за количество одинаковых товаров.

        * `SPREAD_DISCOUNT_RECEIPT` — скидка от суммы чека.

        * `DISCOUNT_BY_PAYMENT_TYPE` — прямая скидка при оплате картой Плюса.

        * `PERCENT_DISCOUNT` — прямая скидка в процентах.

        * `DCO_EXTRA_DISCOUNT` — дополнительная скидка, необходимая для расчета субсидии от Маркета.

        * `UNKNOWN` — неизвестный тип.

        Устаревшие типы:

        * `GENERIC_BUNDLE`.

        * `MARKET_COIN`.

        * `PRICE_DROP_AS_YOU_SHOP`.

        * `SECRET_SALE`.
      enum:
      - DIRECT_DISCOUNT
      - BLUE_SET
      - BLUE_FLASH
      - GENERIC_BUNDLE
      - MARKET_COUPON
      - MARKET_PROMOCODE
      - MARKET_BLUE
      - MARKET_COIN
      - PRICE_DROP_AS_YOU_SHOP
      - SECRET_SALE
      - CHEAPEST_AS_GIFT
      - CASHBACK
      - SPREAD_DISCOUNT_COUNT
      - SPREAD_DISCOUNT_RECEIPT
      - DISCOUNT_BY_PAYMENT_TYPE
      - PERCENT_DISCOUNT
      - DCO_EXTRA_DISCOUNT
      - UNKNOWN
      type: string
    OrderItemStatusType:
      description: |
        Невыкупленный или возвращенный товар:

        * `REJECTED` — невыкупленный.

        * `RETURNED` — возвращенный.
      enum:
      - REJECTED
      - RETURNED
      type: string
    OrderItemSubsidyType:
      description: |
        Тип субсидии:

        * `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.

        * `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.).
      enum:
      - YANDEX_CASHBACK
      - SUBSIDY
      type: string
    GpsDTO:
      description: |
        GPS-координаты широты и долготы.
      example:
        latitude: 9.965781217890562
        longitude: 9.369310271410669
      properties:
        latitude:
          description: Широта.
          format: decimal
          type: number
        longitude:
          description: Долгота.
          format: decimal
          type: number
      required:
      - latitude
      - longitude
      type: object
    OrderParcelBoxDTO:
      description: Информация о грузоместе.
      example:
        fulfilmentId: fulfilmentId
        id: 3
      properties:
        id:
          description: Идентификатор грузоместа.
          format: int64
          type: integer
        fulfilmentId:
          description: Идентификатор грузового места в информационной системе магазина.
          type: string
      required:
      - fulfilmentId
      - id
      type: object
    UinStatusType:
      description: |
        Статус проверки УИНа:

        * `FAILED` — не прошел проверку.

        * `IN_PROGRESS` — в процессе проверки.

        * `NOT_ON_VALIDATION` — УИН не отправлен на проверку или переданы не все УИНы в заказе.

        * `OK` — проверка успешно пройдена.
      enum:
      - OK
      - IN_PROGRESS
      - FAILED
      - NOT_ON_VALIDATION
      type: string
    ReturnDecisionReasonType:
      description: |
        Причины возврата:

        * `BAD_QUALITY` — бракованный товар (есть недостатки).

        * `DOES_NOT_FIT` — товар не подошел.

        * `WRONG_ITEM` — привезли не тот товар.

        * `DAMAGE_DELIVERY` — товар поврежден при доставке.

        * `LOYALTY_FAIL` — невозможно установить виновного в браке/пересорте.

        * `CONTENT_FAIL` — ошибочное описание товара по вине Маркета.

        * `DELIVERY_FAIL` — товар не привезли.

        * `UNKNOWN` — причина не известна.
      enum:
      - BAD_QUALITY
      - DOES_NOT_FIT
      - WRONG_ITEM
      - DAMAGE_DELIVERY
      - LOYALTY_FAIL
      - CONTENT_FAIL
      - DELIVERY_FAIL
      - UNKNOWN
      type: string
    ReturnDecisionSubreasonType:
      description: |
        Детали причин возврата:
          * `DOES_NOT_FIT`:
            * `USER_DID_NOT_LIKE` — товар не понравился.
            * `USER_CHANGED_MIND` — передумал покупать.
            * `DELIVERED_TOO_LONG` — передумал покупать из-за длительного срока доставки.

          * `BAD_QUALITY`:
            * `BAD_PACKAGE` — заводская упаковка повреждена.
            * `DAMAGED` — царапины, сколы.
            * `NOT_WORKING` — не включается, не работает.
            * `INCOMPLETENESS` — некомплект (не хватает детали в наборе, к товару).
            * `WRAPPING_DAMAGED` — транспортная упаковка повреждена.
            * `ITEM_WAS_USED` — следы использования на товаре.
            * `BROKEN` — товар разбит.
            * `BAD_FLOWERS` — некачественные цветы.

          * `WRONG_ITEM`:
            * `WRONG_ITEM` — не тот товар.
            * `WRONG_COLOR` — цвет не соответствует заявленному.
            * `DID_NOT_MATCH_DESCRIPTION` — описание или характеристики не соответствуют заявленным.
            * `WRONG_ORDER` — доставили чужой заказ.
            * `WRONG_AMOUNT_DELIVERED` — неверное количество товара.
            * `PARCEL_MISSING` — часть заказа отсутствует.
            * `INCOMPLETE` — заказ не привезли полностью.

          * `UNKNOWN` — детали причины не указаны.
      enum:
      - USER_DID_NOT_LIKE
      - USER_CHANGED_MIND
      - DELIVERED_TOO_LONG
      - BAD_PACKAGE
      - DAMAGED
      - NOT_WORKING
      - INCOMPLETENESS
      - WRONG_ITEM
      - WRONG_COLOR
      - DID_NOT_MATCH_DESCRIPTION
      - WRONG_ORDER
      - WRONG_AMOUNT_DELIVERED
      - WRAPPING_DAMAGED
      - ITEM_WAS_USED
      - BROKEN
      - BAD_FLOWERS
      - PARCEL_MISSING
      - INCOMPLETE
      - UNKNOWN
      type: string
    ReturnDecisionType:
      description: |
        Решение по возврату:

        * `REFUND_MONEY` — вернуть деньги покупателю.

        * `REFUND_MONEY_INCLUDING_SHIPMENT` — вернуть деньги за товар и пересылку.

        * `REPAIR` — отремонтировать товар.

        * `REPLACE` — заменить товар.

        * `SEND_TO_EXAMINATION` — взять товар на экспертизу.

        * `DECLINE_REFUND` — отказать в возврате.

        * `OTHER_DECISION` — другое решение.

        * `UNKNOWN` — не указано.
      enum:
      - REFUND_MONEY
      - REFUND_MONEY_INCLUDING_SHIPMENT
      - REPAIR
      - REPLACE
      - SEND_TO_EXAMINATION
      - DECLINE_REFUND
      - OTHER_DECISION
      - UNKNOWN
      type: string
    ReturnInstanceStockType:
      description: |
        Тип остатка на складе:

        * `FIT` — годный.

        * `DEFECT` — бракованный.

        * `ANOMALY` — аномалия.

        * `SURPLUS` — лишний.

        * `EXPIRED` — просроченный.

        * `MISGRADING` — пересортица.

        * `UNDEFINED` — с неизвестным статусом.

        * `INCORRECT_IMEI` — товар с некорректным [IMEI](https://ru.wikipedia.org/wiki/IMEI).

        * `INCORRECT_SERIAL_NUMBER` — товар с некорректным серийным номером.

        * `INCORRECT_CIS` — товар с некорректным кодом идентификации единицы товара в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go).

        * `PART_MISSING` — недостача.

        * `NON_COMPLIENT` — товар с множественными несоответствиями.

        * `NOT_ACCEPTABLE` — товар, который Маркет не принимает.

        * `SERVICE` — сервисный сток.

        * `MARKDOWN` — уценка.

        * `DEMO` — демо.

        * `REPAIR` — ремонт.

        * `FIRMWARE` — прошивка.

        * `UNKNOWN` — неизвестный тип товара.
      enum:
      - FIT
      - DEFECT
      - ANOMALY
      - SURPLUS
      - EXPIRED
      - MISGRADING
      - UNDEFINED
      - INCORRECT_IMEI
      - INCORRECT_SERIAL_NUMBER
      - INCORRECT_CIS
      - PART_MISSING
      - NON_COMPLIENT
      - NOT_ACCEPTABLE
      - SERVICE
      - MARKDOWN
      - DEMO
      - REPAIR
      - FIRMWARE
      - UNKNOWN
      type: string
    ReturnInstanceStatusType:
      description: |
        Логистический статус конкретного товара:

        * `CREATED` — возврат создан.

        * `RECEIVED` — возврат принят у отправителя.

        * `IN_TRANSIT` — возврат в пути.

        * `READY_FOR_PICKUP` — возврат готов к выдаче магазину.

        * `PICKED` — возврат выдан магазину.

        * `RECEIVED_ON_FULFILLMENT` — возврат принят на складе Маркета.

        * `CANCELLED` — возврат отменен.

        * `LOST` — возврат утерян.

        * `UTILIZED` — возврат утилизирован.

        * `PREPARED_FOR_UTILIZATION` — возврат готов к утилизации.

        * `EXPROPRIATED` — товары в возврате направлены на перепродажу.

        * `NOT_IN_DEMAND` — возврат не забрали с почты.
      enum:
      - CREATED
      - RECEIVED
      - IN_TRANSIT
      - READY_FOR_PICKUP
      - PICKED
      - RECEIVED_ON_FULFILLMENT
      - CANCELLED
      - LOST
      - UTILIZED
      - PREPARED_FOR_UTILIZATION
      - EXPROPRIATED
      - NOT_IN_DEMAND
      type: string
    GetPriceDTO:
      allOf:
      - $ref: '#/components/schemas/BasePriceDTO'
      - $ref: '#/components/schemas/UpdateTimeDTO'
      description: Цена с указанием времени последнего обновления.
      example:
        currencyId: null
        value: 0.7061401241503109
        updatedAt: 2000-01-23T04:56:07.000+00:00
      type: object
    OfferCampaignStatusDTO:
      description: Статус товара в магазине.
      example:
        campaignId: 9
        status: PUBLISHED
      properties:
        campaignId:
          description: |
            Идентификатор кампании.

            Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:

              * **Модули и API** → блок **Передача данных Маркету**.
              * **Лог запросов** → выпадающий список в блоке **Показывать логи**.

            ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
          format: int64
          type: integer
        status:
          $ref: '#/components/schemas/OfferCampaignStatusType'
      required:
      - campaignId
      - status
      type: object
    OfferSellingProgramDTO:
      description: "Информация о том, по каким моделям можно продавать товар, а по\
        \ каким нельзя."
      example:
        sellingProgram: FBY
        status: FINE
      properties:
        sellingProgram:
          $ref: '#/components/schemas/SellingProgramType'
        status:
          $ref: '#/components/schemas/OfferSellingProgramStatusType'
      required:
      - sellingProgram
      - status
      type: object
    OfferMediaFilesDTO:
      description: |
        Информация о медиафайлах товара.
      example:
        firstVideoAsCover: true
        videos:
        - uploadState: UPLOADING
          title: title
          url: url
        - uploadState: UPLOADING
          title: title
          url: url
        pictures:
        - uploadState: UPLOADING
          title: title
          url: url
        - uploadState: UPLOADING
          title: title
          url: url
        manuals:
        - uploadState: UPLOADING
          title: title
          url: url
        - uploadState: UPLOADING
          title: title
          url: url
      properties:
        firstVideoAsCover:
          description: |
            Использовать первое видео в карточке как видеообложку.

            Передайте `true`, чтобы первое видео использовалось как видеообложка, или `false`, чтобы видеообложка не отображалась в карточке товара.
          type: boolean
        videos:
          description: |
            Видеофайлы товара.
          items:
            $ref: '#/components/schemas/OfferMediaFileDTO'
          minItems: 1
          nullable: true
          type: array
        pictures:
          description: |
            Изображения товара.
          items:
            $ref: '#/components/schemas/OfferMediaFileDTO'
          minItems: 1
          nullable: true
          type: array
        manuals:
          description: |
            Руководства по использованию товара.
          items:
            $ref: '#/components/schemas/OfferMediaFileDTO'
          minItems: 1
          nullable: true
          type: array
      type: object
    PartnerMarketCategoryId:
      description: |
        Идентификатор категории на Маркете, к которой вы относите свой товар.

        При изменении категории убедитесь, что характеристики товара и их значения в параметре `parameterValues` вы передаете для новой категории.

        Список категорий Маркета можно получить с помощью запроса  [POST categories/tree](../../reference/categories/getCategoriesTree.md).
      format: int64
      type: integer
    OfferManualDTO:
      description: |
        Инструкция по использованию товара.
      example:
        title: title
        url: url
      properties:
        url:
          description: Ссылка на инструкцию.
          maxLength: 512
          type: string
        title:
          description: |
            Название инструкции, которое будет отображаться на карточке товара.
          maxLength: 200
          type: string
      required:
      - url
      type: object
    CommodityCodeDTO:
      description: Товарный код.
      example:
        code: code
        type: CUSTOMS_COMMODITY_CODE
      properties:
        code:
          description: Товарный код.
          type: string
        type:
          $ref: '#/components/schemas/CommodityCodeType'
      required:
      - code
      - type
      type: object
    OfferConditionDTO:
      description: |
        Состояние уцененного товара.
      example:
        reason: reason
        type: PREOWNED
        quality: PERFECT
      properties:
        type:
          $ref: '#/components/schemas/OfferConditionType'
        quality:
          $ref: '#/components/schemas/OfferConditionQualityType'
        reason:
          description: |
            Описание товара. Подробно опишите дефекты, насколько они заметны и где их искать.
          type: string
      type: object
    OfferType:
      description: |
        Особый тип товара:

        * `DEFAULT` — товары, для которых вы передавали особый тип ранее и хотите убрать его.
        * `MEDICINE` — лекарства.
        * `BOOK` — бумажные и электронные книги.
        * `AUDIOBOOK` — аудиокниги.
        * `ARTIST_TITLE` — музыкальная и видеопродукция.
        * `ON_DEMAND` — товары на заказ.
        * `ALCOHOL` — алкоголь.

        {% note info "Если ваш товар — книга" %}

        Укажите год издания в характеристиках товара. [Подробнее о параметре](../../reference/business-assortment/updateOfferMappings.md#offerparamdto)

        {% endnote %}
      enum:
      - DEFAULT
      - MEDICINE
      - BOOK
      - AUDIOBOOK
      - ARTIST_TITLE
      - ON_DEMAND
      - ALCOHOL
      type: string
    AgeDTO:
      description: Возраст в заданных единицах измерения.
      example:
        ageUnit: YEAR
        value: 0.5962133916683182
      properties:
        value:
          description: |
            Значение.
          minimum: 0
          type: number
        ageUnit:
          $ref: '#/components/schemas/AgeUnitType'
      required:
      - ageUnit
      - value
      type: object
    OfferParamDTO:
      description: |
        Параметры товара.

        Если у товара несколько значений одного параметра, передайте их с одним и тем же `name`, но разными `value`.

        {% cut "Пример" %}

        ```json translate=no
        "params": [
          {
            "name": "Цвет для фильтра",
            "value": "Зеленый"
          },
          {
            "name": "Цвет для фильтра",
            "value": "Желтый"
          }
        ]
        ```

        {% endcut %}
      example:
        name: Wi-Fi
        value: есть
      properties:
        name:
          description: |
            Название характеристики.

            Должно совпадать с названием характеристики на Маркете. Узнать его можно из Excel-шаблона категории или через запрос [POST category/{categoryId}/parameters](../../reference/content/getCategoryContentParameters.md).
          example: Wi-Fi
          maxLength: 200
          type: string
        value:
          description: |
            Значение.
          example: есть
          type: string
      required:
      - name
      - value
      type: object
    OfferProcessingNoteDTO:
      description: "Причины, по которым товар не прошел модерацию."
      example:
        payload: payload
        type: ASSORTMENT
      properties:
        type:
          $ref: '#/components/schemas/OfferProcessingNoteType'
        payload:
          description: |
            Дополнительная информация о причине отклонения товара.
          type: string
      type: object
    TimeUnitType:
      description: |
        Единица измерения времени:

        * `HOUR` — час.
        * `DAY` — сутки.
        * `WEEK` — неделя.
        * `MONTH` — месяц.
        * `YEAR` — год.
      enum:
      - HOUR
      - DAY
      - WEEK
      - MONTH
      - YEAR
      type: string
    PriceSuggestType:
      description: |
        Тип цены:

        * `BUYBOX` — самая низкая цена на товар, по которой он продается сейчас. Эта цена обновляется в режиме реального времени. Если вы установите цену ниже, начнет показываться ваше предложение. Если для этого значения в параметре `price` указана цена, которая совпадает с вашей, значит, ваш товар уже показывается на витрине. Если кроме вас этот товар продают другие продавцы по такой же цене, их предложения также будут отображаться вместе с вашими по очереди.
        * `DEFAULT_OFFER` — рекомендованная Маркетом цена, которая привлекает покупателей. Рассчитывается только для популярных на сервисе товаров и обновляется раз в четыре часа.
        * `MIN_PRICE_MARKET` — минимальная цена на Маркете. Самая низкая цена среди всех предложений товара на Маркете во всех регионах, включая те, которые не видны на витрине. Эта цена обновляется в режиме реального времени и обеспечивает большее количество показов на Маркете, чем самая низкая или рекомендованная цена.
      enum:
      - BUYBOX
      - DEFAULT_OFFER
      - MIN_PRICE_MARKET
      type: string
    PriceQuarantineVerdictType:
      description: |
        Типы карантина:

        * `PRICE_CHANGE` — новая цена слишком сильно отличается от прежней. В поле `params` будет  новая цена `CURRENT_PRICE` и последняя цена до попадания в карантин `LAST_VALID_PRICE`.
        * `LOW_PRICE` — установленная цена слишком сильно отличается от рыночной. В поле `params` будет установленная вами цена `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.
        * `LOW_PRICE_PROMO` — цена после применения акций слишком сильно отличается от рыночной. В поле `params` будет цена после применения акций `CURRENT_PRICE` и порог попадания в карантин `MIN_PRICE`.
      enum:
      - PRICE_CHANGE
      - LOW_PRICE
      - LOW_PRICE_PROMO
      type: string
    PriceQuarantineVerdictParameterDTO:
      description: Параметр карантина.
      example:
        name: CURRENT_PRICE
        value: value
      properties:
        name:
          $ref: '#/components/schemas/PriceQuarantineVerdictParamNameType'
        value:
          description: Значение параметра.
          type: string
      required:
      - name
      - value
      type: object
    TurnoverDTO:
      description: Информация об оборачиваемости товара.
      example:
        turnoverDays: 6.027456183070403
        turnover: LOW
      properties:
        turnover:
          $ref: '#/components/schemas/TurnoverType'
        turnoverDays:
          description: "Значение в днях. [Что это за число?](https://yandex.ru/support/marketplace/analytics/turnover.html)"
          format: double
          type: number
      required:
      - turnover
      type: object
    WarehouseStockDTO:
      description: Информация об остатках товара.
      example:
        count: 1
        type: FIT
      properties:
        type:
          $ref: '#/components/schemas/WarehouseStockType'
        count:
          description: Значение остатков.
          format: int64
          type: integer
      required:
      - count
      - type
      type: object
    OrdersStatsPriceDTO:
      description: Цена или скидки на товар.
      example:
        total: 2.3021358869347655
        costPerItem: 5.637376656633329
        type: BUYER
      properties:
        type:
          $ref: '#/components/schemas/OrdersStatsPriceType'
        costPerItem:
          description: |
            Цена или скидка на единицу товара в заказе.

            Точность — два знака после запятой.
          type: number
        total:
          description: |
            Суммарная цена или скидка на все единицы товара в заказе.

            Точность — два знака после запятой.
          type: number
      type: object
    OrdersStatsWarehouseDTO:
      description: "Информация о складе, на котором хранится товар."
      example:
        name: name
        id: 7
      properties:
        id:
          description: Идентификатор склада.
          format: int64
          type: integer
        name:
          description: Название склада.
          type: string
      type: object
    OrdersStatsDetailsDTO:
      description: Информация об удалении товара из заказа.
      example:
        updateDate: 2000-01-23
        stockType: FIT
        itemStatus: REJECTED
        itemCount: 9
      properties:
        itemStatus:
          $ref: '#/components/schemas/OrdersStatsItemStatusType'
        itemCount:
          description: "Количество товара со статусом, указанном в параметре `itemStatus`."
          format: int64
          type: integer
        updateDate:
          description: |
            Дата, когда товар получил статус, указанный в параметре `itemStatus`.

            Формат даты: `ГГГГ-ММ-ДД`.
          format: date
          type: string
        stockType:
          $ref: '#/components/schemas/OrdersStatsStockType'
      type: object
    OrdersStatsPaymentType:
      description: |
        Тип денежного перевода:
        - `PAYMENT` — оплата.
        - `REFUND` — возврат.
      enum:
      - PAYMENT
      - REFUND
      type: string
    OrdersStatsPaymentSourceType:
      description: |
        Способ денежного перевода:
        - `BUYER` — оплата или возврат деньгами.

        Устаревшие способы:
        - `CASHBACK`.
        - `MARKETPLACE`.
        - `SPLIT`.
      enum:
      - BUYER
      - CASHBACK
      - MARKETPLACE
      - SPLIT
      type: string
    OrdersStatsPaymentOrderDTO:
      description: Информация о платежном поручении.
      example:
        date: 2000-01-23
        id: id
      properties:
        id:
          description: Номер платежного поручения.
          type: string
        date:
          description: |
            Дата платежного поручения.

            Формат даты: `ГГГГ‑ММ‑ДД`.
          format: date
          type: string
      type: object
    OrdersStatsCommissionType:
      description: |
        Услуга:

        * `FEE` — размещение товара на Маркете.
        * `FULFILLMENT` — складская обработка. Не возвращается с 1 января 2024 года.
        * `LOYALTY_PARTICIPATION_FEE` — участие в программе лояльности и отзывы за баллы.
        * `AUCTION_PROMOTION` — буст продаж с оплатой за продажи.
        * `INSTALLMENT` — рассрочка. Не возвращается с 24 февраля 2022 года.
        * `DELIVERY_TO_CUSTOMER` — доставка покупателю (FBY, FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета.
        * `EXPRESS_DELIVERY_TO_CUSTOMER` — экспресс-доставка покупателю (Экспресс).
        * `AGENCY` — прием платежа покупателя.
        * `PAYMENT_TRANSFER` — перевод платежа покупателя.
        * `RETURNED_ORDERS_STORAGE` — хранение невыкупов и возвратов (FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета.
        * `SORTING` — обработка заказа (FBS).
        * `INTAKE_SORTING` — организация забора заказов со склада продавца (FBS).
        * `RETURN_PROCESSING` — обработка заказов на складе (FBS). Для DBS и Экспресс — если заказ возвращается через логистику Маркета.
        * `ILLIQUID_GOODS_SALE` — вознаграждение за продажу невывезенных товаров.
      enum:
      - FEE
      - FULFILLMENT
      - LOYALTY_PARTICIPATION_FEE
      - AUCTION_PROMOTION
      - INSTALLMENT
      - DELIVERY_TO_CUSTOMER
      - EXPRESS_DELIVERY_TO_CUSTOMER
      - AGENCY
      - PAYMENT_TRANSFER
      - RETURNED_ORDERS_STORAGE
      - SORTING
      - INTAKE_SORTING
      - RETURN_PROCESSING
      - ILLIQUID_GOODS_SALE
      type: string
    OrdersStatsSubsidyOperationType:
      description: |
        Тип операции с баллами, которые используются для уменьшения стоимости размещения:

        * `ACCRUAL` — начисление баллов.
        * `DEDUCTION` — списание баллов.
      enum:
      - ACCRUAL
      - DEDUCTION
      type: string
    OrdersStatsSubsidyType:
      description: |
        Источник баллов, которые используются для уменьшения стоимости размещения:

        * `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.

        * `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.)

        * `DELIVERY` — скидка за доставку (DBS).
      enum:
      - YANDEX_CASHBACK
      - SUBSIDY
      - DELIVERY
      type: string
    TariffType:
      description: |
        Услуга Маркета или дополнительный тариф к услуге размещения:

        * `AGENCY_COMMISSION` — прием платежа покупателя.

        * `PAYMENT_TRANSFER` — перевод платежа покупателя.

        * `STORAGE` — хранение товара на складе Маркета в течение суток.

        * `SURPLUS` — хранение излишков на складе Маркета.

        * `WITHDRAW` — вывоз товара со склада Маркета.

        * `FEE` — размещение товара на Маркете.

        * `DELIVERY_TO_CUSTOMER` — доставка покупателю.

        * `CROSSREGIONAL_DELIVERY` — доставка в федеральный округ, город или населенный пункт.

        * `CROSSREGIONAL_DELIVERY_RETURN` — доставка невыкупов и возвратов.

        * `DISPOSAL` — утилизация.

        * `SORTING_CENTER_STORAGE` — хранение невыкупов и возвратов.

        * `EXPRESS_DELIVERY` — экспресс-доставка покупателю.

        * `FF_XDOC_SUPPLY_BOX` — поставка товара через транзитный склад (за короб).

        * `FF_XDOC_SUPPLY_PALLET` — поставка товара через транзитный склад (за палету).

        * `SORTING` — обработка заказа.

        * `MIDDLE_MILE` — средняя миля.

        * `RETURN_PROCESSING` — обработка невыкупов и возвратов.

        * `EXPRESS_CANCELLED_BY_PARTNER` — отмена заказа с экспресс-доставкой.

        * `CROSSBORDER_DELIVERY` — доставка из-за рубежа.

        * `INTAKE_SORTING_BULKY_CARGO` — сортировка заказов с крупногабаритными товарами, которые Маркет забрал со склада продавца.

        * `INTAKE_SORTING_SMALL_GOODS` — сортировка заказов с малогабаритными товарами, которые Маркет забрал со склада продавца.

        * `INTAKE_SORTING_DAILY` — организация забора заказов со склада продавца.

        * `FF_STORAGE_BILLING` — хранения товаров на складе.

        * `CANCELLED_ORDER_FEE_QI` — отмена заказа по вине продавца.

        * `LATE_ORDER_EXECUTION_FEE_QI` — несвоевременная отгрузка или доставка.

        Подробнее об услугах Маркета читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html).
      enum:
      - AGENCY_COMMISSION
      - PAYMENT_TRANSFER
      - STORAGE
      - WITHDRAW
      - SURPLUS
      - FEE
      - DELIVERY_TO_CUSTOMER
      - CROSSREGIONAL_DELIVERY
      - CROSSREGIONAL_DELIVERY_RETURN
      - DISPOSAL
      - SORTING_CENTER_STORAGE
      - EXPRESS_DELIVERY
      - FF_XDOC_SUPPLY_BOX
      - FF_XDOC_SUPPLY_PALLET
      - SORTING
      - MIDDLE_MILE
      - RETURN_PROCESSING
      - EXPRESS_CANCELLED_BY_PARTNER
      - CROSSBORDER_DELIVERY
      - INTAKE_SORTING_BULKY_CARGO
      - INTAKE_SORTING_SMALL_GOODS
      - INTAKE_SORTING_DAILY
      - FF_STORAGE_BILLING
      - CANCELLED_ORDER_FEE_QI
      - LATE_ORDER_EXECUTION_FEE_QI
      type: string
    TariffParameterDTO:
      description: Детали расчета конкретной услуги Маркета.
      example:
        name: name
        value: value
      properties:
        name:
          description: Название параметра.
          type: string
        value:
          description: Значение параметра.
          type: string
      required:
      - name
      - value
      type: object
    UpdateTimeDTO:
      description: Время последнего обновления.
      properties:
        updatedAt:
          description: Время последнего обновления.
          format: date-time
          type: string
      required:
      - updatedAt
      type: object
    PriceCompetitivenessThresholdsDTO:
      description: "Максимальные значения цены, при которых она является привлекат\
        ельной или умеренной."
      example:
        optimalPrice:
          currencyId: null
          value: 0.9301444243932576
        averagePrice:
          currencyId: null
          value: 0.9301444243932576
      properties:
        optimalPrice:
          $ref: '#/components/schemas/BasePriceDTO'
        averagePrice:
          $ref: '#/components/schemas/BasePriceDTO'
      type: object
    BenefitType:
      description: |
        Типы дополнительных инструментов продвижения:

        * `BESTS` — участие в акции «Бестселлеры Маркета».
        * `SPLIT_0_0_4` — возможность оплаты со Сплитом сроком на 4 месяца.
        * `SPLIT_0_0_6` — возможность оплаты со Сплитом сроком на 6 месяцев.
        * `SPLIT_0_0_12` — возможность оплаты со Сплитом сроком на 12 месяцев.
        * `MARKET_SUBSIDY_1_4` — скидка от Маркета от 1 до 4%.
        * `MARKET_SUBSIDY_5_9` — скидка от Маркета от 5 до 9%.
        * `MARKET_SUBSIDY_10` — скидка от Маркета от 10%.
      enum:
      - BESTS
      - SPLIT_0_0_4
      - SPLIT_0_0_6
      - SPLIT_0_0_12
      - MARKET_SUBSIDY_1_4
      - MARKET_SUBSIDY_5_9
      - MARKET_SUBSIDY_10
      type: string
    UnitDTO:
      description: Единица измерения.
      example:
        name: кг
        fullName: килограмм
        id: 5
      properties:
        id:
          description: Идентификатор единицы измерения.
          format: int64
          type: integer
        name:
          description: Сокращенное название единицы измерения.
          example: кг
          type: string
        fullName:
          description: Полное название единицы измерения.
          example: килограмм
          type: string
      required:
      - fullName
      - id
      - name
      type: object
    OptionValuesLimitedDTO:
      description: Значение ограничивающей характеристики и список допустимых значений
        ограничиваемой характеристики.
      example:
        limitingOptionValueId: 2
        optionValueIds:
        - 1
        - 1
      properties:
        limitingOptionValueId:
          description: Идентификатор значения ограничивающей характеристики.
          format: int64
          type: integer
        optionValueIds:
          description: |
            Идентификаторы допустимых значений ограничиваемой характеристики.
          items:
            format: int64
            minimum: 1
            type: integer
          type: array
      required:
      - limitingOptionValueId
      - optionValueIds
      type: object
    CalculatedTariffType:
      description: |
        Услуга Маркета:

        * `AGENCY_COMMISSION` — прием платежа покупателя.

        * `PAYMENT_TRANSFER` — перевод платежа покупателя.

        * `FEE` — размещение товара на Маркете.

        * `DELIVERY_TO_CUSTOMER` — доставка покупателю.

        * `CROSSREGIONAL_DELIVERY` — доставка в федеральный округ, город или населенный пункт.

        * `EXPRESS_DELIVERY` — экспресс-доставка покупателю.

        * `SORTING` — обработка заказа.

        * `MIDDLE_MILE` — средняя миля.

        Подробнее об услугах Маркета читайте [в Справке Маркета для продавцов](https://yandex.ru/support/marketplace/introduction/rates/index.html).
      enum:
      - AGENCY_COMMISSION
      - PAYMENT_TRANSFER
      - FEE
      - DELIVERY_TO_CUSTOMER
      - CROSSREGIONAL_DELIVERY
      - EXPRESS_DELIVERY
      - SORTING
      - MIDDLE_MILE
      type: string
    QualityRatingComponentDTO:
      description: Составляющая индекса качества.
      example:
        componentType: DBS_CANCELLATION_RATE
        value: 14.658129805029452
      properties:
        value:
          description: Значение составляющей в процентах.
          format: double
          maximum: 100
          minimum: 0
          type: number
        componentType:
          $ref: '#/components/schemas/QualityRatingComponentType'
      required:
      - componentType
      - value
      type: object
    GetPromoPromocodeInfoDTO:
      description: |
        Информация для типа `MARKET_PROMOCODE`.

        Параметр заполняется только для этого типа акции.
      example:
        promocode: promocode
        discount: 1
      properties:
        promocode:
          description: Промокод.
          type: string
        discount:
          description: Процент скидки по промокоду.
          format: int32
          type: integer
      required:
      - discount
      - promocode
      type: object
    PromoOfferDiscountParamsDTO:
      description: Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.
      example:
        promoPrice: 6
        maxPromoPrice: 1
        price: 0
      properties:
        price:
          description: |
            Зачеркнутая цена — та, по которой товар продавался до акции.

            Указывается в рублях.

            Возвращается, только если товар участвует в акции.
          format: int64
          type: integer
        promoPrice:
          description: |
            Цена по акции — та, по которой вы хотите продавать товар.

            Указывается в рублях.

            Возвращается, только если товар участвует в акции.
          format: int64
          type: integer
        maxPromoPrice:
          description: |
            Максимально возможная цена для участия в акции.

            Указывается в рублях.

            Возвращается для всех товаров.
          format: int64
          type: integer
      required:
      - maxPromoPrice
      type: object
    PromoOfferPromocodeParamsDTO:
      description: Параметры товара в акции с типом `MARKET_PROMOCODE`.
      example:
        maxPrice: 5
      properties:
        maxPrice:
          description: |
            Максимально возможная цена для участия в акции до применения промокода.

            Указывается в рублях.

            Возвращается для всех товаров.
          format: int64
          type: integer
      required:
      - maxPrice
      type: object
    PromoOfferUpdateWarningCodeType:
      description: |
        Предупреждение, которое появилось при добавлении товара:

        * `DEEP_DISCOUNT_OFFER` — большая разница с ценой в каталоге. Проверьте, нет ли ошибки.

        * `CATALOG_PRICE_IS_LOWER_THAN_PROMO` — цена, которая действует во всех магазинах, ниже цены по акции. У товара не будет отображаться цена по акции.

        * `SHOP_PRICES_ARE_LOWER_THAN_PROMO` — цена в отдельном магазине ниже цены по акции. У товара в акции будет отображаться цена в магазине. Для остальных магазинов будет действовать цена по акции.

        * `PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE` — в отдельном магазине цена с учетом промокода выше максимально возможной цены. Товар не будет участвовать в акции.

        * `SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO` — товар в отдельном магазине не подходит под условия акции.
      enum:
      - DEEP_DISCOUNT_OFFER
      - CATALOG_PRICE_IS_LOWER_THAN_PROMO
      - SHOP_PRICES_ARE_LOWER_THAN_PROMO
      - PROMOCODE_PRICE_MORE_THAN_MAX_FAIR_PRICE
      - SHOP_OFFER_NOT_ELIGIBLE_FOR_PROMO
      type: string
    SupplyRequestReferenceType:
      description: |
        Тип связи между двумя заявками:

        * `VIRTUAL_DISTRIBUTION` — [мультипоставка](*multisupply).

        * `WITHDRAW` — вывоз непринятых товаров.

            Подтипы заявки: `DEFAULT`, `XDOC`, `VIRTUAL_DISTRIBUTION_CENTER_CHILD` и `ANOMALY_WITHDRAW`.

        * `UTILIZATION` — утилизация непринятых товаров.

            Подтипы заявки: `DEFAULT`, `XDOC`, `VIRTUAL_DISTRIBUTION_CENTER_CHILD` и `FORCE_PLAN_ANOMALY_PER_SUPPLY`.

        * `ADDITIONAL_SUPPLY` — дополнительная поставка.

            Подтипы заявки: `DEFAULT`, `XDOC`, `VIRTUAL_DISTRIBUTION_CENTER_CHILD` и `ADDITIONAL_SUPPLY`.
      enum:
      - VIRTUAL_DISTRIBUTION
      - WITHDRAW
      - UTILIZATION
      - ADDITIONAL_SUPPLY
      type: string
    SupplyRequestLocationAddressDTO:
      description: Адрес склада или ПВЗ.
      example:
        fullAddress: fullAddress
        gps:
          latitude: 9.965781217890562
          longitude: 9.369310271410669
      properties:
        fullAddress:
          description: Полный адрес склада или ПВЗ.
          type: string
        gps:
          $ref: '#/components/schemas/GpsDTO'
      required:
      - fullAddress
      - gps
      type: object
    SupplyRequestLocationType:
      description: |
        Тип склада или ПВЗ:

        * `FULFILLMENT` — склад хранения.
        * `XDOC` — транзитный склад.
        * `PICKUP_POINT` — ПВЗ.
      enum:
      - FULFILLMENT
      - XDOC
      - PICKUP_POINT
      type: string
    CampaignSettingsTimePeriodDTO:
      description: "Период, за который рассчитывается итоговый список нерабочих дн\
        ей службы доставки."
      example:
        fromDate: 23-09-2022
        toDate: 23-09-2022
      properties:
        fromDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
        toDate:
          description: |
            Формат даты: `ДД-ММ-ГГГГ`.
          example: 23-09-2022
          format: date-dd-MM-yyyy
          type: string
      type: object
    OfferSellingProgramStatusType:
      description: |
        Информация о доступности или недоступности.

        * `FINE` — доступно.
        * `REJECT` — недоступно.
      enum:
      - FINE
      - REJECT
      type: string
    OfferMediaFileDTO:
      description: |
        Информация о медиафайле товара.
      example:
        uploadState: UPLOADING
        title: title
        url: url
      properties:
        url:
          description: |
            Ссылка на медиафайл.
          type: string
        title:
          description: |
            Название медиафайла.
          type: string
        uploadState:
          $ref: '#/components/schemas/MediaFileUploadStateType'
      type: object
    CommodityCodeType:
      description: |
        Тип товарного кода:

        * `CUSTOMS_COMMODITY_CODE` — код товара в единой Товарной номенклатуре внешнеэкономической деятельности (ТН ВЭД) — 10 или 14 цифр без пробелов.
        * `IKPU_CODE` — идентификационный код продукции и услуг (ИКПУ) в Узбекистане – 17 цифр без пробелов.

        Не передавайте несколько кодов одного типа.
      enum:
      - CUSTOMS_COMMODITY_CODE
      - IKPU_CODE
      type: string
    OfferConditionType:
      description: |
        Тип уценки:

        * `PREOWNED` —  бывший в употреблении товар, раньше принадлежал другому человеку.
        * `SHOWCASESAMPLE` — витринный образец.
        * `REFURBISHED` — повторная продажа товара.
        * `REDUCTION` — товар с дефектами.
        * `RENOVATED` — восстановленный товар.
        * `NOT_SPECIFIED` — не выбран.

        `REFURBISHED` — специальное значение для одежды, обуви и аксессуаров. Используется только для уцененных товаров из этой категории. Другие значения для одежды, обуви и аксессуаров не используются.
      enum:
      - PREOWNED
      - SHOWCASESAMPLE
      - REFURBISHED
      - REDUCTION
      - RENOVATED
      - NOT_SPECIFIED
      type: string
    OfferConditionQualityType:
      description: |
        Внешний вид товара:

        * `PERFECT` — идеальный.
        * `EXCELLENT` — отличный.
        * `GOOD` — хороший.
        * `NOT_SPECIFIED` — не выбран.
      enum:
      - PERFECT
      - EXCELLENT
      - GOOD
      - NOT_SPECIFIED
      type: string
    AgeUnitType:
      description: |
        Единицы измерения возраста:

        * `YEAR` — год.
        * `MONTH` — месяц.
      enum:
      - YEAR
      - MONTH
      type: string
    OfferProcessingNoteType:
      description: |
        Тип причины, по которой товар не прошел модерацию:

        * `ASSORTMENT` — товар производится в разных вариантах. Каждый из них нужно описать как отдельный товар (параметр `offerMappings` в запросе [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md) или строка в каталоге, если вы загружаете товары через кабинет продавца на Маркете).
        * `CANCELLED` — товар отозван с модерации по вашей инициативе.
        * `CONFLICTING_INFORMATION` _(ранее ошибочно `CONFLICTING`)_ — вы предоставили противоречивую информацию о товаре. Параметры, которые нужно исправить, указаны в параметре `payload`.
        * `OTHER` — товар не прошел модерацию по другой причине. Обратитесь в службу поддержки или к вашему менеджеру.
        * `DEPARTMENT_FROZEN` — правила размещения товаров в данной категории перерабатываются, поэтому товар пока не может пройти модерацию.
        * `INCORRECT_INFORMATION` — информация о товаре, которую вы предоставили, противоречит описанию от производителя. Параметры, которые нужно исправить, указаны в параметре `payload`.
        * `LEGAL_CONFLICT` — товар не прошел модерацию по юридическим причинам. Например, он официально не продается в России или у вас нет разрешения на его продажу.
        * `NEED_CLASSIFICATION_INFORMATION` — информации о товаре, которую вы предоставили, не хватает, чтобы отнести его к категории. Проверьте, что правильно указали название, категорию, производителя и страны производства товара, а также URL изображений или страниц с описанием, по которым можно идентифицировать товар.
        * `NEED_INFORMATION` — товар раньше не продавался в России и пока не размещается на Маркете. Для него можно создать карточку. Подробнее см. в разделе [Работа с карточкой товара](https://yandex.ru/support/marketplace/assortment/content/index.html) Справки Маркета для продавцов.
        * `NEED_PICTURES` — для идентификации товара нужны его изображения. Отправьте URL изображений товара в запросе [POST businesses/{businessId}/offer-mappings/update](../../reference/business-assortment/updateOfferMappings.md) или загрузите обновленный каталог через кабинет продавца на Маркете.
        * `NEED_VENDOR` — неверно указан производитель товара.
        * `NO_CATEGORY`, `NO_KNOWLEDGE` — товары из указанной категории пока не размещаются на Маркете. Если категория появится, товар будет снова отправлен на модерацию.
        * `NO_PARAMETERS_IN_SHOP_TITLE` — товар производится в разных вариантах, и из указанного названия непонятно, о каком идет речь. Параметры, которые нужно добавить в название товара, указаны в параметре `payload`.
        * `NO_SIZE_MEASURE` — для этого товара нужна размерная сетка. Отправьте ее в службу поддержки или вашему менеджеру. Требования к размерной сетке указаны в параметре `payload`.
        * `SAMPLE_LINE` — товар не прошел модерацию из-за лишней строки.
      enum:
      - ASSORTMENT
      - CANCELLED
      - CONFLICTING_INFORMATION
      - OTHER
      - DEPARTMENT_FROZEN
      - INCORRECT_INFORMATION
      - LEGAL_CONFLICT
      - NEED_CLASSIFICATION_INFORMATION
      - NEED_INFORMATION
      - NEED_PICTURES
      - NEED_VENDOR
      - NO_CATEGORY
      - NO_KNOWLEDGE
      - NO_PARAMETERS_IN_SHOP_TITLE
      - NO_SIZE_MEASURE
      - SAMPLE_LINE
      type: string
    PriceQuarantineVerdictParamNameType:
      description: |
        Имя параметра причины скрытия товара по цене.

        * `CURRENT_PRICE` — цена, из-за которой товар попал в карантин.
        * `LAST_VALID_PRICE` — последняя цена до попадания в карантин (только для карантина типа `PRICE_CHANGE`).
        * `MIN_PRICE` — порог попадания в карантин (только для карантина типов `LOW_PRICE` и `LOW_PRICE_PROMO`).
        * `CURRENCY` — валюта.
      enum:
      - CURRENT_PRICE
      - LAST_VALID_PRICE
      - MIN_PRICE
      - CURRENCY
      type: string
    TurnoverType:
      description: |
        Оценка оборачиваемости.

        |enum|Диапазон оборачиваемости|Комментарий|
        |-|-|-|
        |`LOW`|`turnoverDays` ≥ 120||
        |`ALMOST_LOW`|100 ≤ `turnoverDays` < 120||
        |`HIGH`|45 ≤ `turnoverDays` < 100||
        |`VERY_HIGH`|0 ≤ `turnoverDays` < 45||
        |`NO_SALES`|—|Продаж нет.|
        |`FREE_STORE`|Любое значение.|Платить за хранение товаров этой категории не требуется.|
      enum:
      - LOW
      - ALMOST_LOW
      - HIGH
      - VERY_HIGH
      - NO_SALES
      - FREE_STORE
      type: string
    WarehouseStockType:
      description: |
        Тип остатков товаров на складе:

        * `AVAILABLE` (соответствует типу «Доступный к заказу» в отчете «Остатки на складе» в кабинете продавца на Маркете) — товар, доступный для продажи.

        * `DEFECT` (соответствует типу «Брак») — товар с браком.

        * `EXPIRED` (соответствует типу «Просрочен») — товар с истекшим сроком годности.

        * `FIT` (соответствует типу «Годный») — товар, который доступен для продажи или уже зарезервирован.

        * `FREEZE` — товар, который зарезервирован для заказов.

        * `QUARANTINE` (соответствует типу «Карантин») — товар, временно недоступный для продажи (например, товар перемещают из одного помещения склада в другое).

        * `UTILIZATION` — товар, который будет утилизирован.
      enum:
      - FIT
      - FREEZE
      - AVAILABLE
      - QUARANTINE
      - UTILIZATION
      - DEFECT
      - EXPIRED
      type: string
    OrdersStatsPriceType:
      description: |
        Тип скидки или цена на товар:
        - `BUYER` — цена на товар с учетом скидок, в том числе купонов.
        - `CASHBACK` — баллы Плюса.
        - `MARKETPLACE` — купоны.
      enum:
      - BUYER
      - CASHBACK
      - MARKETPLACE
      type: string
    OrdersStatsItemStatusType:
      description: |
        Статус товара:

        * `REJECTED` — товар был добавлен в созданный заказ, но не был оплачен.
        * `RETURNED` — товар вернули.
      enum:
      - REJECTED
      - RETURNED
      type: string
    OrdersStatsStockType:
      description: |
        Тип товара:

        * `FIT` — товар надлежащего качества.

        * `DEFECT` — товар бракованный.

        * `EXPIRED` — товар с истекшим сроком годности.
      enum:
      - FIT
      - DEFECT
      - EXPIRED
      type: string
    QualityRatingComponentType:
      description: |
        Составляющие индекса качества.

        **Для модели DBS:**
        * `DBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `DBS_LATE_DELIVERY_RATE` — доля заказов, доставленных после плановой даты.

        **Для моделей FBS и Экспресс:**
        * `FBS_CANCELLATION_RATE` — доля отмененных товаров.
        * `FBS_LATE_SHIP_RATE` — доля не вовремя отгруженных заказов.

        **Для модели FBY:**
        * `FBY_LATE_DELIVERY_RATE` — доля товаров, которые приехали на склад с опозданием.
        * `FBY_CANCELLATION_RATE` — доля отмененных или недоставленных товаров.
        * `FBY_DELIVERY_DIFF_RATE` — доля товаров, которые не прибыли вместе с поставкой или которые не приняли.
        * `FBY_LATE_EDITING_RATE` — доля товаров, которые поздно убрали из заявки.
      enum:
      - DBS_CANCELLATION_RATE
      - DBS_LATE_DELIVERY_RATE
      - FBS_CANCELLATION_RATE
      - FBS_LATE_SHIP_RATE
      - FBY_LATE_DELIVERY_RATE
      - FBY_CANCELLATION_RATE
      - FBY_DELIVERY_DIFF_RATE
      - FBY_LATE_EDITING_RATE
      type: string
    MediaFileUploadStateType:
      description: |
        Состояние загрузки медиафайла:

        * `UPLOADING` — загружается.
        * `UPLOADED` — успешно загружен.
        * `FAILED` — при загрузке произошла ошибка. Повторите попытку позже.
      enum:
      - UPLOADING
      - UPLOADED
      - FAILED
      type: string
  securitySchemes:
    ApiKey:
      in: header
      name: Api-Key
      type: apiKey
    OAuth:
      flows:
        implicit:
          authorizationUrl: https://oauth.yandex.ru/authorize
          scopes:
            market:partner-api: API Яндекс.Маркета / Поиска по товарам для партнеров
      type: oauth2
      x-inline: true
