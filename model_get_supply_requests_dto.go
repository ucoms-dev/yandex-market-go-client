/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSupplyRequestsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSupplyRequestsDTO{}

// GetSupplyRequestsDTO Список заявок и информация по ним.
type GetSupplyRequestsDTO struct {
	// Список заявок.
	Requests []SupplyRequestDTO `json:"requests"`
	Paging *ForwardScrollingPagerDTO `json:"paging,omitempty"`
}

type _GetSupplyRequestsDTO GetSupplyRequestsDTO

// NewGetSupplyRequestsDTO instantiates a new GetSupplyRequestsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSupplyRequestsDTO(requests []SupplyRequestDTO) *GetSupplyRequestsDTO {
	this := GetSupplyRequestsDTO{}
	this.Requests = requests
	return &this
}

// NewGetSupplyRequestsDTOWithDefaults instantiates a new GetSupplyRequestsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSupplyRequestsDTOWithDefaults() *GetSupplyRequestsDTO {
	this := GetSupplyRequestsDTO{}
	return &this
}

// GetRequests returns the Requests field value
func (o *GetSupplyRequestsDTO) GetRequests() []SupplyRequestDTO {
	if o == nil {
		var ret []SupplyRequestDTO
		return ret
	}

	return o.Requests
}

// GetRequestsOk returns a tuple with the Requests field value
// and a boolean to check if the value has been set.
func (o *GetSupplyRequestsDTO) GetRequestsOk() ([]SupplyRequestDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Requests, true
}

// SetRequests sets field value
func (o *GetSupplyRequestsDTO) SetRequests(v []SupplyRequestDTO) {
	o.Requests = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *GetSupplyRequestsDTO) GetPaging() ForwardScrollingPagerDTO {
	if o == nil || IsNil(o.Paging) {
		var ret ForwardScrollingPagerDTO
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSupplyRequestsDTO) GetPagingOk() (*ForwardScrollingPagerDTO, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *GetSupplyRequestsDTO) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ForwardScrollingPagerDTO and assigns it to the Paging field.
func (o *GetSupplyRequestsDTO) SetPaging(v ForwardScrollingPagerDTO) {
	o.Paging = &v
}

func (o GetSupplyRequestsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSupplyRequestsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requests"] = o.Requests
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

func (o *GetSupplyRequestsDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requests",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSupplyRequestsDTO := _GetSupplyRequestsDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSupplyRequestsDTO)

	if err != nil {
		return err
	}

	*o = GetSupplyRequestsDTO(varGetSupplyRequestsDTO)

	return err
}

type NullableGetSupplyRequestsDTO struct {
	value *GetSupplyRequestsDTO
	isSet bool
}

func (v NullableGetSupplyRequestsDTO) Get() *GetSupplyRequestsDTO {
	return v.value
}

func (v *NullableGetSupplyRequestsDTO) Set(val *GetSupplyRequestsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSupplyRequestsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSupplyRequestsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSupplyRequestsDTO(val *GetSupplyRequestsDTO) *NullableGetSupplyRequestsDTO {
	return &NullableGetSupplyRequestsDTO{value: val, isSet: true}
}

func (v NullableGetSupplyRequestsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSupplyRequestsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


