/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetCategoriesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCategoriesResponse{}

// GetCategoriesResponse struct for GetCategoriesResponse
type GetCategoriesResponse struct {
	Status *ApiResponseStatusType `json:"status,omitempty"`
	Result *CategoryDTO `json:"result,omitempty"`
}

// NewGetCategoriesResponse instantiates a new GetCategoriesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCategoriesResponse() *GetCategoriesResponse {
	this := GetCategoriesResponse{}
	return &this
}

// NewGetCategoriesResponseWithDefaults instantiates a new GetCategoriesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCategoriesResponseWithDefaults() *GetCategoriesResponse {
	this := GetCategoriesResponse{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetCategoriesResponse) GetStatus() ApiResponseStatusType {
	if o == nil || IsNil(o.Status) {
		var ret ApiResponseStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCategoriesResponse) GetStatusOk() (*ApiResponseStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetCategoriesResponse) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ApiResponseStatusType and assigns it to the Status field.
func (o *GetCategoriesResponse) SetStatus(v ApiResponseStatusType) {
	o.Status = &v
}

// GetResult returns the Result field value if set, zero value otherwise.
func (o *GetCategoriesResponse) GetResult() CategoryDTO {
	if o == nil || IsNil(o.Result) {
		var ret CategoryDTO
		return ret
	}
	return *o.Result
}

// GetResultOk returns a tuple with the Result field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCategoriesResponse) GetResultOk() (*CategoryDTO, bool) {
	if o == nil || IsNil(o.Result) {
		return nil, false
	}
	return o.Result, true
}

// HasResult returns a boolean if a field has been set.
func (o *GetCategoriesResponse) HasResult() bool {
	if o != nil && !IsNil(o.Result) {
		return true
	}

	return false
}

// SetResult gets a reference to the given CategoryDTO and assigns it to the Result field.
func (o *GetCategoriesResponse) SetResult(v CategoryDTO) {
	o.Result = &v
}

func (o GetCategoriesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCategoriesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Result) {
		toSerialize["result"] = o.Result
	}
	return toSerialize, nil
}

type NullableGetCategoriesResponse struct {
	value *GetCategoriesResponse
	isSet bool
}

func (v NullableGetCategoriesResponse) Get() *GetCategoriesResponse {
	return v.value
}

func (v *NullableGetCategoriesResponse) Set(val *GetCategoriesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCategoriesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCategoriesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCategoriesResponse(val *GetCategoriesResponse) *NullableGetCategoriesResponse {
	return &NullableGetCategoriesResponse{value: val, isSet: true}
}

func (v NullableGetCategoriesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCategoriesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


