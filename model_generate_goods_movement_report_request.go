/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GenerateGoodsMovementReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateGoodsMovementReportRequest{}

// GenerateGoodsMovementReportRequest Данные, необходимые для генерации отчета.
type GenerateGoodsMovementReportRequest struct {
	// Идентификатор кампании.  Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:    * **Модули и API** → блок **Передача данных Маркету**.   * **Лог запросов** → выпадающий список в блоке **Показывать логи**.  ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах. 
	CampaignId int64 `json:"campaignId"`
	// Начало периода, включительно. Формат даты: `ГГГГ-ММ-ДД`. 
	DateFrom string `json:"dateFrom"`
	// Конец периода, включительно. Формат даты: `ГГГГ-ММ-ДД`. 
	DateTo string `json:"dateTo"`
	// Ваш SKU — идентификатор товара в вашей системе.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
	ShopSku *string `json:"shopSku,omitempty" validate:"regexp=^(?=.*\\\\S.*)[^\\\\x00-\\\\x08\\\\x0A-\\\\x1f\\\\x7f]{1,255}$"`
}

type _GenerateGoodsMovementReportRequest GenerateGoodsMovementReportRequest

// NewGenerateGoodsMovementReportRequest instantiates a new GenerateGoodsMovementReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateGoodsMovementReportRequest(campaignId int64, dateFrom string, dateTo string) *GenerateGoodsMovementReportRequest {
	this := GenerateGoodsMovementReportRequest{}
	this.CampaignId = campaignId
	this.DateFrom = dateFrom
	this.DateTo = dateTo
	return &this
}

// NewGenerateGoodsMovementReportRequestWithDefaults instantiates a new GenerateGoodsMovementReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateGoodsMovementReportRequestWithDefaults() *GenerateGoodsMovementReportRequest {
	this := GenerateGoodsMovementReportRequest{}
	return &this
}

// GetCampaignId returns the CampaignId field value
func (o *GenerateGoodsMovementReportRequest) GetCampaignId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value
// and a boolean to check if the value has been set.
func (o *GenerateGoodsMovementReportRequest) GetCampaignIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignId, true
}

// SetCampaignId sets field value
func (o *GenerateGoodsMovementReportRequest) SetCampaignId(v int64) {
	o.CampaignId = v
}

// GetDateFrom returns the DateFrom field value
func (o *GenerateGoodsMovementReportRequest) GetDateFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateFrom
}

// GetDateFromOk returns a tuple with the DateFrom field value
// and a boolean to check if the value has been set.
func (o *GenerateGoodsMovementReportRequest) GetDateFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateFrom, true
}

// SetDateFrom sets field value
func (o *GenerateGoodsMovementReportRequest) SetDateFrom(v string) {
	o.DateFrom = v
}

// GetDateTo returns the DateTo field value
func (o *GenerateGoodsMovementReportRequest) GetDateTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateTo
}

// GetDateToOk returns a tuple with the DateTo field value
// and a boolean to check if the value has been set.
func (o *GenerateGoodsMovementReportRequest) GetDateToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateTo, true
}

// SetDateTo sets field value
func (o *GenerateGoodsMovementReportRequest) SetDateTo(v string) {
	o.DateTo = v
}

// GetShopSku returns the ShopSku field value if set, zero value otherwise.
func (o *GenerateGoodsMovementReportRequest) GetShopSku() string {
	if o == nil || IsNil(o.ShopSku) {
		var ret string
		return ret
	}
	return *o.ShopSku
}

// GetShopSkuOk returns a tuple with the ShopSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateGoodsMovementReportRequest) GetShopSkuOk() (*string, bool) {
	if o == nil || IsNil(o.ShopSku) {
		return nil, false
	}
	return o.ShopSku, true
}

// HasShopSku returns a boolean if a field has been set.
func (o *GenerateGoodsMovementReportRequest) HasShopSku() bool {
	if o != nil && !IsNil(o.ShopSku) {
		return true
	}

	return false
}

// SetShopSku gets a reference to the given string and assigns it to the ShopSku field.
func (o *GenerateGoodsMovementReportRequest) SetShopSku(v string) {
	o.ShopSku = &v
}

func (o GenerateGoodsMovementReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateGoodsMovementReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["campaignId"] = o.CampaignId
	toSerialize["dateFrom"] = o.DateFrom
	toSerialize["dateTo"] = o.DateTo
	if !IsNil(o.ShopSku) {
		toSerialize["shopSku"] = o.ShopSku
	}
	return toSerialize, nil
}

func (o *GenerateGoodsMovementReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"campaignId",
		"dateFrom",
		"dateTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateGoodsMovementReportRequest := _GenerateGoodsMovementReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenerateGoodsMovementReportRequest)

	if err != nil {
		return err
	}

	*o = GenerateGoodsMovementReportRequest(varGenerateGoodsMovementReportRequest)

	return err
}

type NullableGenerateGoodsMovementReportRequest struct {
	value *GenerateGoodsMovementReportRequest
	isSet bool
}

func (v NullableGenerateGoodsMovementReportRequest) Get() *GenerateGoodsMovementReportRequest {
	return v.value
}

func (v *NullableGenerateGoodsMovementReportRequest) Set(val *GenerateGoodsMovementReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateGoodsMovementReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateGoodsMovementReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateGoodsMovementReportRequest(val *GenerateGoodsMovementReportRequest) *NullableGenerateGoodsMovementReportRequest {
	return &NullableGenerateGoodsMovementReportRequest{value: val, isSet: true}
}

func (v NullableGenerateGoodsMovementReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateGoodsMovementReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


