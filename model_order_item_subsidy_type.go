/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrderItemSubsidyType Тип субсидии:  * `YANDEX_CASHBACK` — скидка по подписке Яндекс Плюс.  * `SUBSIDY` — скидка Маркета (по акциям, промокодам, купонам и т. д.). 
type OrderItemSubsidyType string

// List of OrderItemSubsidyType
const (
	YANDEX_CASHBACK OrderItemSubsidyType = "YANDEX_CASHBACK"
	SUBSIDY OrderItemSubsidyType = "SUBSIDY"
)

// All allowed values of OrderItemSubsidyType enum
var AllowedOrderItemSubsidyTypeEnumValues = []OrderItemSubsidyType{
	"YANDEX_CASHBACK",
	"SUBSIDY",
}

func (v *OrderItemSubsidyType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderItemSubsidyType(value)
	for _, existing := range AllowedOrderItemSubsidyTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderItemSubsidyType", value)
}

// NewOrderItemSubsidyTypeFromValue returns a pointer to a valid OrderItemSubsidyType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderItemSubsidyTypeFromValue(v string) (*OrderItemSubsidyType, error) {
	ev := OrderItemSubsidyType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderItemSubsidyType: valid values are %v", v, AllowedOrderItemSubsidyTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderItemSubsidyType) IsValid() bool {
	for _, existing := range AllowedOrderItemSubsidyTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderItemSubsidyType value
func (v OrderItemSubsidyType) Ptr() *OrderItemSubsidyType {
	return &v
}

type NullableOrderItemSubsidyType struct {
	value *OrderItemSubsidyType
	isSet bool
}

func (v NullableOrderItemSubsidyType) Get() *OrderItemSubsidyType {
	return v.value
}

func (v *NullableOrderItemSubsidyType) Set(val *OrderItemSubsidyType) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderItemSubsidyType) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderItemSubsidyType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderItemSubsidyType(val *OrderItemSubsidyType) *NullableOrderItemSubsidyType {
	return &NullableOrderItemSubsidyType{value: val, isSet: true}
}

func (v NullableOrderItemSubsidyType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderItemSubsidyType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

