/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GenerateUnitedReturnsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateUnitedReturnsRequest{}

// GenerateUnitedReturnsRequest Данные, необходимые для генерации отчета. 
type GenerateUnitedReturnsRequest struct {
	// Идентификатор кабинета.
	BusinessId int64 `json:"businessId"`
	// Начало периода, включительно.
	DateFrom string `json:"dateFrom"`
	// Конец периода, включительно.
	DateTo string `json:"dateTo"`
	// Список идентификаторов кампании тех магазинов, которые нужны в отчете.  Их можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:    * **Модули и API** → блок **Передача данных Маркету**.   * **Лог запросов** → выпадающий список в блоке **Показывать логи**.  ⚠️ Не используйте вместо них идентификаторы магазинов, которые указаны в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах. 
	CampaignIds []int64 `json:"campaignIds,omitempty"`
	ReturnType *ReturnType `json:"returnType,omitempty"`
	// Статусы передачи возвратов, которые нужны в отчете.  Если их не указать, вернется информация по всем возвратам. 
	ReturnStatusTypes []ReturnShipmentStatusType `json:"returnStatusTypes,omitempty"`
}

type _GenerateUnitedReturnsRequest GenerateUnitedReturnsRequest

// NewGenerateUnitedReturnsRequest instantiates a new GenerateUnitedReturnsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateUnitedReturnsRequest(businessId int64, dateFrom string, dateTo string) *GenerateUnitedReturnsRequest {
	this := GenerateUnitedReturnsRequest{}
	this.BusinessId = businessId
	this.DateFrom = dateFrom
	this.DateTo = dateTo
	return &this
}

// NewGenerateUnitedReturnsRequestWithDefaults instantiates a new GenerateUnitedReturnsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateUnitedReturnsRequestWithDefaults() *GenerateUnitedReturnsRequest {
	this := GenerateUnitedReturnsRequest{}
	return &this
}

// GetBusinessId returns the BusinessId field value
func (o *GenerateUnitedReturnsRequest) GetBusinessId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value
// and a boolean to check if the value has been set.
func (o *GenerateUnitedReturnsRequest) GetBusinessIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessId, true
}

// SetBusinessId sets field value
func (o *GenerateUnitedReturnsRequest) SetBusinessId(v int64) {
	o.BusinessId = v
}

// GetDateFrom returns the DateFrom field value
func (o *GenerateUnitedReturnsRequest) GetDateFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateFrom
}

// GetDateFromOk returns a tuple with the DateFrom field value
// and a boolean to check if the value has been set.
func (o *GenerateUnitedReturnsRequest) GetDateFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateFrom, true
}

// SetDateFrom sets field value
func (o *GenerateUnitedReturnsRequest) SetDateFrom(v string) {
	o.DateFrom = v
}

// GetDateTo returns the DateTo field value
func (o *GenerateUnitedReturnsRequest) GetDateTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateTo
}

// GetDateToOk returns a tuple with the DateTo field value
// and a boolean to check if the value has been set.
func (o *GenerateUnitedReturnsRequest) GetDateToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateTo, true
}

// SetDateTo sets field value
func (o *GenerateUnitedReturnsRequest) SetDateTo(v string) {
	o.DateTo = v
}

// GetCampaignIds returns the CampaignIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateUnitedReturnsRequest) GetCampaignIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.CampaignIds
}

// GetCampaignIdsOk returns a tuple with the CampaignIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateUnitedReturnsRequest) GetCampaignIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.CampaignIds) {
		return nil, false
	}
	return o.CampaignIds, true
}

// HasCampaignIds returns a boolean if a field has been set.
func (o *GenerateUnitedReturnsRequest) HasCampaignIds() bool {
	if o != nil && !IsNil(o.CampaignIds) {
		return true
	}

	return false
}

// SetCampaignIds gets a reference to the given []int64 and assigns it to the CampaignIds field.
func (o *GenerateUnitedReturnsRequest) SetCampaignIds(v []int64) {
	o.CampaignIds = v
}

// GetReturnType returns the ReturnType field value if set, zero value otherwise.
func (o *GenerateUnitedReturnsRequest) GetReturnType() ReturnType {
	if o == nil || IsNil(o.ReturnType) {
		var ret ReturnType
		return ret
	}
	return *o.ReturnType
}

// GetReturnTypeOk returns a tuple with the ReturnType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GenerateUnitedReturnsRequest) GetReturnTypeOk() (*ReturnType, bool) {
	if o == nil || IsNil(o.ReturnType) {
		return nil, false
	}
	return o.ReturnType, true
}

// HasReturnType returns a boolean if a field has been set.
func (o *GenerateUnitedReturnsRequest) HasReturnType() bool {
	if o != nil && !IsNil(o.ReturnType) {
		return true
	}

	return false
}

// SetReturnType gets a reference to the given ReturnType and assigns it to the ReturnType field.
func (o *GenerateUnitedReturnsRequest) SetReturnType(v ReturnType) {
	o.ReturnType = &v
}

// GetReturnStatusTypes returns the ReturnStatusTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GenerateUnitedReturnsRequest) GetReturnStatusTypes() []ReturnShipmentStatusType {
	if o == nil {
		var ret []ReturnShipmentStatusType
		return ret
	}
	return o.ReturnStatusTypes
}

// GetReturnStatusTypesOk returns a tuple with the ReturnStatusTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GenerateUnitedReturnsRequest) GetReturnStatusTypesOk() ([]ReturnShipmentStatusType, bool) {
	if o == nil || IsNil(o.ReturnStatusTypes) {
		return nil, false
	}
	return o.ReturnStatusTypes, true
}

// HasReturnStatusTypes returns a boolean if a field has been set.
func (o *GenerateUnitedReturnsRequest) HasReturnStatusTypes() bool {
	if o != nil && !IsNil(o.ReturnStatusTypes) {
		return true
	}

	return false
}

// SetReturnStatusTypes gets a reference to the given []ReturnShipmentStatusType and assigns it to the ReturnStatusTypes field.
func (o *GenerateUnitedReturnsRequest) SetReturnStatusTypes(v []ReturnShipmentStatusType) {
	o.ReturnStatusTypes = v
}

func (o GenerateUnitedReturnsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateUnitedReturnsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["businessId"] = o.BusinessId
	toSerialize["dateFrom"] = o.DateFrom
	toSerialize["dateTo"] = o.DateTo
	if o.CampaignIds != nil {
		toSerialize["campaignIds"] = o.CampaignIds
	}
	if !IsNil(o.ReturnType) {
		toSerialize["returnType"] = o.ReturnType
	}
	if o.ReturnStatusTypes != nil {
		toSerialize["returnStatusTypes"] = o.ReturnStatusTypes
	}
	return toSerialize, nil
}

func (o *GenerateUnitedReturnsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"businessId",
		"dateFrom",
		"dateTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateUnitedReturnsRequest := _GenerateUnitedReturnsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenerateUnitedReturnsRequest)

	if err != nil {
		return err
	}

	*o = GenerateUnitedReturnsRequest(varGenerateUnitedReturnsRequest)

	return err
}

type NullableGenerateUnitedReturnsRequest struct {
	value *GenerateUnitedReturnsRequest
	isSet bool
}

func (v NullableGenerateUnitedReturnsRequest) Get() *GenerateUnitedReturnsRequest {
	return v.value
}

func (v *NullableGenerateUnitedReturnsRequest) Set(val *GenerateUnitedReturnsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateUnitedReturnsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateUnitedReturnsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateUnitedReturnsRequest(val *GenerateUnitedReturnsRequest) *NullableGenerateUnitedReturnsRequest {
	return &NullableGenerateUnitedReturnsRequest{value: val, isSet: true}
}

func (v NullableGenerateUnitedReturnsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateUnitedReturnsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


