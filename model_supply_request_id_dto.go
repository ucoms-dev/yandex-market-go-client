/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the SupplyRequestIdDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SupplyRequestIdDTO{}

// SupplyRequestIdDTO Идентификатор и номера заявки.
type SupplyRequestIdDTO struct {
	// Идентификатор заявки.  {% note warning \"Используется только в API\" %}  По нему не получится найти заявки в кабинете продавца на Маркете. Для этого используйте `marketplaceRequestId` или `warehouseRequestId`.  {% endnote %}
	Id int64 `json:"id"`
	// Номер заявки на маркетплейсе.  Также указывается в кабинете продавца на Маркете.
	MarketplaceRequestId *string `json:"marketplaceRequestId,omitempty"`
	// Номер заявки на складе.  Также указывается в кабинете продавца на Маркете.
	WarehouseRequestId *string `json:"warehouseRequestId,omitempty"`
}

type _SupplyRequestIdDTO SupplyRequestIdDTO

// NewSupplyRequestIdDTO instantiates a new SupplyRequestIdDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSupplyRequestIdDTO(id int64) *SupplyRequestIdDTO {
	this := SupplyRequestIdDTO{}
	this.Id = id
	return &this
}

// NewSupplyRequestIdDTOWithDefaults instantiates a new SupplyRequestIdDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSupplyRequestIdDTOWithDefaults() *SupplyRequestIdDTO {
	this := SupplyRequestIdDTO{}
	return &this
}

// GetId returns the Id field value
func (o *SupplyRequestIdDTO) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *SupplyRequestIdDTO) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *SupplyRequestIdDTO) SetId(v int64) {
	o.Id = v
}

// GetMarketplaceRequestId returns the MarketplaceRequestId field value if set, zero value otherwise.
func (o *SupplyRequestIdDTO) GetMarketplaceRequestId() string {
	if o == nil || IsNil(o.MarketplaceRequestId) {
		var ret string
		return ret
	}
	return *o.MarketplaceRequestId
}

// GetMarketplaceRequestIdOk returns a tuple with the MarketplaceRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplyRequestIdDTO) GetMarketplaceRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.MarketplaceRequestId) {
		return nil, false
	}
	return o.MarketplaceRequestId, true
}

// HasMarketplaceRequestId returns a boolean if a field has been set.
func (o *SupplyRequestIdDTO) HasMarketplaceRequestId() bool {
	if o != nil && !IsNil(o.MarketplaceRequestId) {
		return true
	}

	return false
}

// SetMarketplaceRequestId gets a reference to the given string and assigns it to the MarketplaceRequestId field.
func (o *SupplyRequestIdDTO) SetMarketplaceRequestId(v string) {
	o.MarketplaceRequestId = &v
}

// GetWarehouseRequestId returns the WarehouseRequestId field value if set, zero value otherwise.
func (o *SupplyRequestIdDTO) GetWarehouseRequestId() string {
	if o == nil || IsNil(o.WarehouseRequestId) {
		var ret string
		return ret
	}
	return *o.WarehouseRequestId
}

// GetWarehouseRequestIdOk returns a tuple with the WarehouseRequestId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SupplyRequestIdDTO) GetWarehouseRequestIdOk() (*string, bool) {
	if o == nil || IsNil(o.WarehouseRequestId) {
		return nil, false
	}
	return o.WarehouseRequestId, true
}

// HasWarehouseRequestId returns a boolean if a field has been set.
func (o *SupplyRequestIdDTO) HasWarehouseRequestId() bool {
	if o != nil && !IsNil(o.WarehouseRequestId) {
		return true
	}

	return false
}

// SetWarehouseRequestId gets a reference to the given string and assigns it to the WarehouseRequestId field.
func (o *SupplyRequestIdDTO) SetWarehouseRequestId(v string) {
	o.WarehouseRequestId = &v
}

func (o SupplyRequestIdDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SupplyRequestIdDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.MarketplaceRequestId) {
		toSerialize["marketplaceRequestId"] = o.MarketplaceRequestId
	}
	if !IsNil(o.WarehouseRequestId) {
		toSerialize["warehouseRequestId"] = o.WarehouseRequestId
	}
	return toSerialize, nil
}

func (o *SupplyRequestIdDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSupplyRequestIdDTO := _SupplyRequestIdDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSupplyRequestIdDTO)

	if err != nil {
		return err
	}

	*o = SupplyRequestIdDTO(varSupplyRequestIdDTO)

	return err
}

type NullableSupplyRequestIdDTO struct {
	value *SupplyRequestIdDTO
	isSet bool
}

func (v NullableSupplyRequestIdDTO) Get() *SupplyRequestIdDTO {
	return v.value
}

func (v *NullableSupplyRequestIdDTO) Set(val *SupplyRequestIdDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplyRequestIdDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplyRequestIdDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplyRequestIdDTO(val *SupplyRequestIdDTO) *NullableSupplyRequestIdDTO {
	return &NullableSupplyRequestIdDTO{value: val, isSet: true}
}

func (v NullableSupplyRequestIdDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplyRequestIdDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
