/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the UpdateTimeDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateTimeDTO{}

// UpdateTimeDTO Время последнего обновления.
type UpdateTimeDTO struct {
	// Время последнего обновления.
	UpdatedAt time.Time `json:"updatedAt"`
}

type _UpdateTimeDTO UpdateTimeDTO

// NewUpdateTimeDTO instantiates a new UpdateTimeDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateTimeDTO(updatedAt time.Time) *UpdateTimeDTO {
	this := UpdateTimeDTO{}
	this.UpdatedAt = updatedAt
	return &this
}

// NewUpdateTimeDTOWithDefaults instantiates a new UpdateTimeDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateTimeDTOWithDefaults() *UpdateTimeDTO {
	this := UpdateTimeDTO{}
	return &this
}

// GetUpdatedAt returns the UpdatedAt field value
func (o *UpdateTimeDTO) GetUpdatedAt() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value
// and a boolean to check if the value has been set.
func (o *UpdateTimeDTO) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedAt, true
}

// SetUpdatedAt sets field value
func (o *UpdateTimeDTO) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = v
}

func (o UpdateTimeDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateTimeDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["updatedAt"] = o.UpdatedAt
	return toSerialize, nil
}

func (o *UpdateTimeDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"updatedAt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdateTimeDTO := _UpdateTimeDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdateTimeDTO)

	if err != nil {
		return err
	}

	*o = UpdateTimeDTO(varUpdateTimeDTO)

	return err
}

type NullableUpdateTimeDTO struct {
	value *UpdateTimeDTO
	isSet bool
}

func (v NullableUpdateTimeDTO) Get() *UpdateTimeDTO {
	return v.value
}

func (v *NullableUpdateTimeDTO) Set(val *UpdateTimeDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateTimeDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateTimeDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateTimeDTO(val *UpdateTimeDTO) *NullableUpdateTimeDTO {
	return &NullableUpdateTimeDTO{value: val, isSet: true}
}

func (v NullableUpdateTimeDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateTimeDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


