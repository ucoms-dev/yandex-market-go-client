/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the WarehouseStatusDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WarehouseStatusDTO{}

// WarehouseStatusDTO Информация о статусе склада.
type WarehouseStatusDTO struct {
	Status WarehouseStatusType `json:"status"`
}

type _WarehouseStatusDTO WarehouseStatusDTO

// NewWarehouseStatusDTO instantiates a new WarehouseStatusDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWarehouseStatusDTO(status WarehouseStatusType) *WarehouseStatusDTO {
	this := WarehouseStatusDTO{}
	this.Status = status
	return &this
}

// NewWarehouseStatusDTOWithDefaults instantiates a new WarehouseStatusDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWarehouseStatusDTOWithDefaults() *WarehouseStatusDTO {
	this := WarehouseStatusDTO{}
	return &this
}

// GetStatus returns the Status field value
func (o *WarehouseStatusDTO) GetStatus() WarehouseStatusType {
	if o == nil {
		var ret WarehouseStatusType
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *WarehouseStatusDTO) GetStatusOk() (*WarehouseStatusType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *WarehouseStatusDTO) SetStatus(v WarehouseStatusType) {
	o.Status = v
}

func (o WarehouseStatusDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WarehouseStatusDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["status"] = o.Status
	return toSerialize, nil
}

func (o *WarehouseStatusDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"status",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varWarehouseStatusDTO := _WarehouseStatusDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varWarehouseStatusDTO)

	if err != nil {
		return err
	}

	*o = WarehouseStatusDTO(varWarehouseStatusDTO)

	return err
}

type NullableWarehouseStatusDTO struct {
	value *WarehouseStatusDTO
	isSet bool
}

func (v NullableWarehouseStatusDTO) Get() *WarehouseStatusDTO {
	return v.value
}

func (v *NullableWarehouseStatusDTO) Set(val *WarehouseStatusDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableWarehouseStatusDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableWarehouseStatusDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWarehouseStatusDTO(val *WarehouseStatusDTO) *NullableWarehouseStatusDTO {
	return &NullableWarehouseStatusDTO{value: val, isSet: true}
}

func (v NullableWarehouseStatusDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWarehouseStatusDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


