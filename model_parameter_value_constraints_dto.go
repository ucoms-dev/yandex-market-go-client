/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ParameterValueConstraintsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ParameterValueConstraintsDTO{}

// ParameterValueConstraintsDTO Ограничения на значения характеристик.
type ParameterValueConstraintsDTO struct {
	// Минимальное число.
	MinValue *float64 `json:"minValue,omitempty"`
	// Максимальное число.
	MaxValue *float64 `json:"maxValue,omitempty"`
	// Максимальная длина текста.
	MaxLength *int32 `json:"maxLength,omitempty"`
}

// NewParameterValueConstraintsDTO instantiates a new ParameterValueConstraintsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewParameterValueConstraintsDTO() *ParameterValueConstraintsDTO {
	this := ParameterValueConstraintsDTO{}
	return &this
}

// NewParameterValueConstraintsDTOWithDefaults instantiates a new ParameterValueConstraintsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewParameterValueConstraintsDTOWithDefaults() *ParameterValueConstraintsDTO {
	this := ParameterValueConstraintsDTO{}
	return &this
}

// GetMinValue returns the MinValue field value if set, zero value otherwise.
func (o *ParameterValueConstraintsDTO) GetMinValue() float64 {
	if o == nil || IsNil(o.MinValue) {
		var ret float64
		return ret
	}
	return *o.MinValue
}

// GetMinValueOk returns a tuple with the MinValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterValueConstraintsDTO) GetMinValueOk() (*float64, bool) {
	if o == nil || IsNil(o.MinValue) {
		return nil, false
	}
	return o.MinValue, true
}

// HasMinValue returns a boolean if a field has been set.
func (o *ParameterValueConstraintsDTO) HasMinValue() bool {
	if o != nil && !IsNil(o.MinValue) {
		return true
	}

	return false
}

// SetMinValue gets a reference to the given float64 and assigns it to the MinValue field.
func (o *ParameterValueConstraintsDTO) SetMinValue(v float64) {
	o.MinValue = &v
}

// GetMaxValue returns the MaxValue field value if set, zero value otherwise.
func (o *ParameterValueConstraintsDTO) GetMaxValue() float64 {
	if o == nil || IsNil(o.MaxValue) {
		var ret float64
		return ret
	}
	return *o.MaxValue
}

// GetMaxValueOk returns a tuple with the MaxValue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterValueConstraintsDTO) GetMaxValueOk() (*float64, bool) {
	if o == nil || IsNil(o.MaxValue) {
		return nil, false
	}
	return o.MaxValue, true
}

// HasMaxValue returns a boolean if a field has been set.
func (o *ParameterValueConstraintsDTO) HasMaxValue() bool {
	if o != nil && !IsNil(o.MaxValue) {
		return true
	}

	return false
}

// SetMaxValue gets a reference to the given float64 and assigns it to the MaxValue field.
func (o *ParameterValueConstraintsDTO) SetMaxValue(v float64) {
	o.MaxValue = &v
}

// GetMaxLength returns the MaxLength field value if set, zero value otherwise.
func (o *ParameterValueConstraintsDTO) GetMaxLength() int32 {
	if o == nil || IsNil(o.MaxLength) {
		var ret int32
		return ret
	}
	return *o.MaxLength
}

// GetMaxLengthOk returns a tuple with the MaxLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ParameterValueConstraintsDTO) GetMaxLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxLength) {
		return nil, false
	}
	return o.MaxLength, true
}

// HasMaxLength returns a boolean if a field has been set.
func (o *ParameterValueConstraintsDTO) HasMaxLength() bool {
	if o != nil && !IsNil(o.MaxLength) {
		return true
	}

	return false
}

// SetMaxLength gets a reference to the given int32 and assigns it to the MaxLength field.
func (o *ParameterValueConstraintsDTO) SetMaxLength(v int32) {
	o.MaxLength = &v
}

func (o ParameterValueConstraintsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ParameterValueConstraintsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinValue) {
		toSerialize["minValue"] = o.MinValue
	}
	if !IsNil(o.MaxValue) {
		toSerialize["maxValue"] = o.MaxValue
	}
	if !IsNil(o.MaxLength) {
		toSerialize["maxLength"] = o.MaxLength
	}
	return toSerialize, nil
}

type NullableParameterValueConstraintsDTO struct {
	value *ParameterValueConstraintsDTO
	isSet bool
}

func (v NullableParameterValueConstraintsDTO) Get() *ParameterValueConstraintsDTO {
	return v.value
}

func (v *NullableParameterValueConstraintsDTO) Set(val *ParameterValueConstraintsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableParameterValueConstraintsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableParameterValueConstraintsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableParameterValueConstraintsDTO(val *ParameterValueConstraintsDTO) *NullableParameterValueConstraintsDTO {
	return &NullableParameterValueConstraintsDTO{value: val, isSet: true}
}

func (v NullableParameterValueConstraintsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableParameterValueConstraintsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


