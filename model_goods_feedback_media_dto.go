/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GoodsFeedbackMediaDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsFeedbackMediaDTO{}

// GoodsFeedbackMediaDTO Фото и видео.
type GoodsFeedbackMediaDTO struct {
	// Ссылки на фото.
	Photos []string `json:"photos,omitempty"`
	// Ссылки на видео.
	Videos []string `json:"videos,omitempty"`
}

// NewGoodsFeedbackMediaDTO instantiates a new GoodsFeedbackMediaDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsFeedbackMediaDTO() *GoodsFeedbackMediaDTO {
	this := GoodsFeedbackMediaDTO{}
	return &this
}

// NewGoodsFeedbackMediaDTOWithDefaults instantiates a new GoodsFeedbackMediaDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsFeedbackMediaDTOWithDefaults() *GoodsFeedbackMediaDTO {
	this := GoodsFeedbackMediaDTO{}
	return &this
}

// GetPhotos returns the Photos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoodsFeedbackMediaDTO) GetPhotos() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Photos
}

// GetPhotosOk returns a tuple with the Photos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoodsFeedbackMediaDTO) GetPhotosOk() ([]string, bool) {
	if o == nil || IsNil(o.Photos) {
		return nil, false
	}
	return o.Photos, true
}

// HasPhotos returns a boolean if a field has been set.
func (o *GoodsFeedbackMediaDTO) HasPhotos() bool {
	if o != nil && !IsNil(o.Photos) {
		return true
	}

	return false
}

// SetPhotos gets a reference to the given []string and assigns it to the Photos field.
func (o *GoodsFeedbackMediaDTO) SetPhotos(v []string) {
	o.Photos = v
}

// GetVideos returns the Videos field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GoodsFeedbackMediaDTO) GetVideos() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.Videos
}

// GetVideosOk returns a tuple with the Videos field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GoodsFeedbackMediaDTO) GetVideosOk() ([]string, bool) {
	if o == nil || IsNil(o.Videos) {
		return nil, false
	}
	return o.Videos, true
}

// HasVideos returns a boolean if a field has been set.
func (o *GoodsFeedbackMediaDTO) HasVideos() bool {
	if o != nil && !IsNil(o.Videos) {
		return true
	}

	return false
}

// SetVideos gets a reference to the given []string and assigns it to the Videos field.
func (o *GoodsFeedbackMediaDTO) SetVideos(v []string) {
	o.Videos = v
}

func (o GoodsFeedbackMediaDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsFeedbackMediaDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Photos != nil {
		toSerialize["photos"] = o.Photos
	}
	if o.Videos != nil {
		toSerialize["videos"] = o.Videos
	}
	return toSerialize, nil
}

type NullableGoodsFeedbackMediaDTO struct {
	value *GoodsFeedbackMediaDTO
	isSet bool
}

func (v NullableGoodsFeedbackMediaDTO) Get() *GoodsFeedbackMediaDTO {
	return v.value
}

func (v *NullableGoodsFeedbackMediaDTO) Set(val *GoodsFeedbackMediaDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsFeedbackMediaDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsFeedbackMediaDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsFeedbackMediaDTO(val *GoodsFeedbackMediaDTO) *NullableGoodsFeedbackMediaDTO {
	return &NullableGoodsFeedbackMediaDTO{value: val, isSet: true}
}

func (v NullableGoodsFeedbackMediaDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsFeedbackMediaDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


