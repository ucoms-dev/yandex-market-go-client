/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GenerateBoostConsolidatedRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateBoostConsolidatedRequest{}

// GenerateBoostConsolidatedRequest Данные, необходимые для генерации отчета.
type GenerateBoostConsolidatedRequest struct {
	// Идентификатор кабинета.
	BusinessId int64 `json:"businessId"`
	// Начало периода, включительно.
	DateFrom string `json:"dateFrom"`
	// Конец периода, включительно.
	DateTo string `json:"dateTo"`
}

type _GenerateBoostConsolidatedRequest GenerateBoostConsolidatedRequest

// NewGenerateBoostConsolidatedRequest instantiates a new GenerateBoostConsolidatedRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateBoostConsolidatedRequest(businessId int64, dateFrom string, dateTo string) *GenerateBoostConsolidatedRequest {
	this := GenerateBoostConsolidatedRequest{}
	this.BusinessId = businessId
	this.DateFrom = dateFrom
	this.DateTo = dateTo
	return &this
}

// NewGenerateBoostConsolidatedRequestWithDefaults instantiates a new GenerateBoostConsolidatedRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateBoostConsolidatedRequestWithDefaults() *GenerateBoostConsolidatedRequest {
	this := GenerateBoostConsolidatedRequest{}
	return &this
}

// GetBusinessId returns the BusinessId field value
func (o *GenerateBoostConsolidatedRequest) GetBusinessId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value
// and a boolean to check if the value has been set.
func (o *GenerateBoostConsolidatedRequest) GetBusinessIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessId, true
}

// SetBusinessId sets field value
func (o *GenerateBoostConsolidatedRequest) SetBusinessId(v int64) {
	o.BusinessId = v
}

// GetDateFrom returns the DateFrom field value
func (o *GenerateBoostConsolidatedRequest) GetDateFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateFrom
}

// GetDateFromOk returns a tuple with the DateFrom field value
// and a boolean to check if the value has been set.
func (o *GenerateBoostConsolidatedRequest) GetDateFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateFrom, true
}

// SetDateFrom sets field value
func (o *GenerateBoostConsolidatedRequest) SetDateFrom(v string) {
	o.DateFrom = v
}

// GetDateTo returns the DateTo field value
func (o *GenerateBoostConsolidatedRequest) GetDateTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateTo
}

// GetDateToOk returns a tuple with the DateTo field value
// and a boolean to check if the value has been set.
func (o *GenerateBoostConsolidatedRequest) GetDateToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateTo, true
}

// SetDateTo sets field value
func (o *GenerateBoostConsolidatedRequest) SetDateTo(v string) {
	o.DateTo = v
}

func (o GenerateBoostConsolidatedRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateBoostConsolidatedRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["businessId"] = o.BusinessId
	toSerialize["dateFrom"] = o.DateFrom
	toSerialize["dateTo"] = o.DateTo
	return toSerialize, nil
}

func (o *GenerateBoostConsolidatedRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"businessId",
		"dateFrom",
		"dateTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateBoostConsolidatedRequest := _GenerateBoostConsolidatedRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varGenerateBoostConsolidatedRequest)

	if err != nil {
		return err
	}

	*o = GenerateBoostConsolidatedRequest(varGenerateBoostConsolidatedRequest)

	return err
}

type NullableGenerateBoostConsolidatedRequest struct {
	value *GenerateBoostConsolidatedRequest
	isSet bool
}

func (v NullableGenerateBoostConsolidatedRequest) Get() *GenerateBoostConsolidatedRequest {
	return v.value
}

func (v *NullableGenerateBoostConsolidatedRequest) Set(val *GenerateBoostConsolidatedRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateBoostConsolidatedRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateBoostConsolidatedRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateBoostConsolidatedRequest(val *GenerateBoostConsolidatedRequest) *NullableGenerateBoostConsolidatedRequest {
	return &NullableGenerateBoostConsolidatedRequest{value: val, isSet: true}
}

func (v NullableGenerateBoostConsolidatedRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateBoostConsolidatedRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
