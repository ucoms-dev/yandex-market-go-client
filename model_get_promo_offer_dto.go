/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetPromoOfferDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPromoOfferDTO{}

// GetPromoOfferDTO Товар, который участвует или может участвовать в акции.
type GetPromoOfferDTO struct {
	// Ваш SKU — идентификатор товара в вашей системе.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields) 
	OfferId string `json:"offerId" validate:"regexp=^(?=.*\\\\S.*)[^\\\\x00-\\\\x08\\\\x0A-\\\\x1f\\\\x7f]{1,255}$"`
	Status PromoOfferParticipationStatusType `json:"status"`
	Params PromoOfferParamsDTO `json:"params"`
	AutoParticipatingDetails *PromoOfferAutoParticipatingDetailsDTO `json:"autoParticipatingDetails,omitempty"`
}

type _GetPromoOfferDTO GetPromoOfferDTO

// NewGetPromoOfferDTO instantiates a new GetPromoOfferDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPromoOfferDTO(offerId string, status PromoOfferParticipationStatusType, params PromoOfferParamsDTO) *GetPromoOfferDTO {
	this := GetPromoOfferDTO{}
	this.OfferId = offerId
	this.Status = status
	this.Params = params
	return &this
}

// NewGetPromoOfferDTOWithDefaults instantiates a new GetPromoOfferDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPromoOfferDTOWithDefaults() *GetPromoOfferDTO {
	this := GetPromoOfferDTO{}
	return &this
}

// GetOfferId returns the OfferId field value
func (o *GetPromoOfferDTO) GetOfferId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value
// and a boolean to check if the value has been set.
func (o *GetPromoOfferDTO) GetOfferIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfferId, true
}

// SetOfferId sets field value
func (o *GetPromoOfferDTO) SetOfferId(v string) {
	o.OfferId = v
}

// GetStatus returns the Status field value
func (o *GetPromoOfferDTO) GetStatus() PromoOfferParticipationStatusType {
	if o == nil {
		var ret PromoOfferParticipationStatusType
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GetPromoOfferDTO) GetStatusOk() (*PromoOfferParticipationStatusType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GetPromoOfferDTO) SetStatus(v PromoOfferParticipationStatusType) {
	o.Status = v
}

// GetParams returns the Params field value
func (o *GetPromoOfferDTO) GetParams() PromoOfferParamsDTO {
	if o == nil {
		var ret PromoOfferParamsDTO
		return ret
	}

	return o.Params
}

// GetParamsOk returns a tuple with the Params field value
// and a boolean to check if the value has been set.
func (o *GetPromoOfferDTO) GetParamsOk() (*PromoOfferParamsDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Params, true
}

// SetParams sets field value
func (o *GetPromoOfferDTO) SetParams(v PromoOfferParamsDTO) {
	o.Params = v
}

// GetAutoParticipatingDetails returns the AutoParticipatingDetails field value if set, zero value otherwise.
func (o *GetPromoOfferDTO) GetAutoParticipatingDetails() PromoOfferAutoParticipatingDetailsDTO {
	if o == nil || IsNil(o.AutoParticipatingDetails) {
		var ret PromoOfferAutoParticipatingDetailsDTO
		return ret
	}
	return *o.AutoParticipatingDetails
}

// GetAutoParticipatingDetailsOk returns a tuple with the AutoParticipatingDetails field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPromoOfferDTO) GetAutoParticipatingDetailsOk() (*PromoOfferAutoParticipatingDetailsDTO, bool) {
	if o == nil || IsNil(o.AutoParticipatingDetails) {
		return nil, false
	}
	return o.AutoParticipatingDetails, true
}

// HasAutoParticipatingDetails returns a boolean if a field has been set.
func (o *GetPromoOfferDTO) HasAutoParticipatingDetails() bool {
	if o != nil && !IsNil(o.AutoParticipatingDetails) {
		return true
	}

	return false
}

// SetAutoParticipatingDetails gets a reference to the given PromoOfferAutoParticipatingDetailsDTO and assigns it to the AutoParticipatingDetails field.
func (o *GetPromoOfferDTO) SetAutoParticipatingDetails(v PromoOfferAutoParticipatingDetailsDTO) {
	o.AutoParticipatingDetails = &v
}

func (o GetPromoOfferDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPromoOfferDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["offerId"] = o.OfferId
	toSerialize["status"] = o.Status
	toSerialize["params"] = o.Params
	if !IsNil(o.AutoParticipatingDetails) {
		toSerialize["autoParticipatingDetails"] = o.AutoParticipatingDetails
	}
	return toSerialize, nil
}

func (o *GetPromoOfferDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"offerId",
		"status",
		"params",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetPromoOfferDTO := _GetPromoOfferDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetPromoOfferDTO)

	if err != nil {
		return err
	}

	*o = GetPromoOfferDTO(varGetPromoOfferDTO)

	return err
}

type NullableGetPromoOfferDTO struct {
	value *GetPromoOfferDTO
	isSet bool
}

func (v NullableGetPromoOfferDTO) Get() *GetPromoOfferDTO {
	return v.value
}

func (v *NullableGetPromoOfferDTO) Set(val *GetPromoOfferDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPromoOfferDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPromoOfferDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPromoOfferDTO(val *GetPromoOfferDTO) *NullableGetPromoOfferDTO {
	return &NullableGetPromoOfferDTO{value: val, isSet: true}
}

func (v NullableGetPromoOfferDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPromoOfferDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


