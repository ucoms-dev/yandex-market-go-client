/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PagedReturnsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PagedReturnsDTO{}

// PagedReturnsDTO Невыкупы или возвраты.
type PagedReturnsDTO struct {
	Paging *ForwardScrollingPagerDTO `json:"paging,omitempty"`
	// Список невыкупов или возвратов.
	Returns []ReturnDTO `json:"returns"`
}

type _PagedReturnsDTO PagedReturnsDTO

// NewPagedReturnsDTO instantiates a new PagedReturnsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPagedReturnsDTO(returns []ReturnDTO) *PagedReturnsDTO {
	this := PagedReturnsDTO{}
	this.Returns = returns
	return &this
}

// NewPagedReturnsDTOWithDefaults instantiates a new PagedReturnsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPagedReturnsDTOWithDefaults() *PagedReturnsDTO {
	this := PagedReturnsDTO{}
	return &this
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *PagedReturnsDTO) GetPaging() ForwardScrollingPagerDTO {
	if o == nil || IsNil(o.Paging) {
		var ret ForwardScrollingPagerDTO
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PagedReturnsDTO) GetPagingOk() (*ForwardScrollingPagerDTO, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *PagedReturnsDTO) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ForwardScrollingPagerDTO and assigns it to the Paging field.
func (o *PagedReturnsDTO) SetPaging(v ForwardScrollingPagerDTO) {
	o.Paging = &v
}

// GetReturns returns the Returns field value
func (o *PagedReturnsDTO) GetReturns() []ReturnDTO {
	if o == nil {
		var ret []ReturnDTO
		return ret
	}

	return o.Returns
}

// GetReturnsOk returns a tuple with the Returns field value
// and a boolean to check if the value has been set.
func (o *PagedReturnsDTO) GetReturnsOk() ([]ReturnDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Returns, true
}

// SetReturns sets field value
func (o *PagedReturnsDTO) SetReturns(v []ReturnDTO) {
	o.Returns = v
}

func (o PagedReturnsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PagedReturnsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	toSerialize["returns"] = o.Returns
	return toSerialize, nil
}

func (o *PagedReturnsDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"returns",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPagedReturnsDTO := _PagedReturnsDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPagedReturnsDTO)

	if err != nil {
		return err
	}

	*o = PagedReturnsDTO(varPagedReturnsDTO)

	return err
}

type NullablePagedReturnsDTO struct {
	value *PagedReturnsDTO
	isSet bool
}

func (v NullablePagedReturnsDTO) Get() *PagedReturnsDTO {
	return v.value
}

func (v *NullablePagedReturnsDTO) Set(val *PagedReturnsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePagedReturnsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePagedReturnsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePagedReturnsDTO(val *PagedReturnsDTO) *NullablePagedReturnsDTO {
	return &NullablePagedReturnsDTO{value: val, isSet: true}
}

func (v NullablePagedReturnsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePagedReturnsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


