/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeletePromoOffersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeletePromoOffersRequest{}

// DeletePromoOffersRequest Удаление товаров из акции.  Чтобы убрать:  * все товары из акции и больше не участвовать в ней, передайте значение `true` в параметре `deleteAllOffers`;  * часть товаров, передайте их идентификаторы в параметре `offersIds`. 
type DeletePromoOffersRequest struct {
	// Идентификатор акции.
	PromoId string `json:"promoId"`
	// Чтобы убрать все товары из акции и больше не участвовать в ней, передайте значение `true` и не передавайте параметр `offerIds`.
	DeleteAllOffers *bool `json:"deleteAllOffers,omitempty"`
	// Товары, которые нужно убрать из акции.
	OfferIds []string `json:"offerIds,omitempty"`
}

type _DeletePromoOffersRequest DeletePromoOffersRequest

// NewDeletePromoOffersRequest instantiates a new DeletePromoOffersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeletePromoOffersRequest(promoId string) *DeletePromoOffersRequest {
	this := DeletePromoOffersRequest{}
	this.PromoId = promoId
	return &this
}

// NewDeletePromoOffersRequestWithDefaults instantiates a new DeletePromoOffersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeletePromoOffersRequestWithDefaults() *DeletePromoOffersRequest {
	this := DeletePromoOffersRequest{}
	return &this
}

// GetPromoId returns the PromoId field value
func (o *DeletePromoOffersRequest) GetPromoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PromoId
}

// GetPromoIdOk returns a tuple with the PromoId field value
// and a boolean to check if the value has been set.
func (o *DeletePromoOffersRequest) GetPromoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromoId, true
}

// SetPromoId sets field value
func (o *DeletePromoOffersRequest) SetPromoId(v string) {
	o.PromoId = v
}

// GetDeleteAllOffers returns the DeleteAllOffers field value if set, zero value otherwise.
func (o *DeletePromoOffersRequest) GetDeleteAllOffers() bool {
	if o == nil || IsNil(o.DeleteAllOffers) {
		var ret bool
		return ret
	}
	return *o.DeleteAllOffers
}

// GetDeleteAllOffersOk returns a tuple with the DeleteAllOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DeletePromoOffersRequest) GetDeleteAllOffersOk() (*bool, bool) {
	if o == nil || IsNil(o.DeleteAllOffers) {
		return nil, false
	}
	return o.DeleteAllOffers, true
}

// HasDeleteAllOffers returns a boolean if a field has been set.
func (o *DeletePromoOffersRequest) HasDeleteAllOffers() bool {
	if o != nil && !IsNil(o.DeleteAllOffers) {
		return true
	}

	return false
}

// SetDeleteAllOffers gets a reference to the given bool and assigns it to the DeleteAllOffers field.
func (o *DeletePromoOffersRequest) SetDeleteAllOffers(v bool) {
	o.DeleteAllOffers = &v
}

// GetOfferIds returns the OfferIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *DeletePromoOffersRequest) GetOfferIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.OfferIds
}

// GetOfferIdsOk returns a tuple with the OfferIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *DeletePromoOffersRequest) GetOfferIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OfferIds) {
		return nil, false
	}
	return o.OfferIds, true
}

// HasOfferIds returns a boolean if a field has been set.
func (o *DeletePromoOffersRequest) HasOfferIds() bool {
	if o != nil && !IsNil(o.OfferIds) {
		return true
	}

	return false
}

// SetOfferIds gets a reference to the given []string and assigns it to the OfferIds field.
func (o *DeletePromoOffersRequest) SetOfferIds(v []string) {
	o.OfferIds = v
}

func (o DeletePromoOffersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeletePromoOffersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["promoId"] = o.PromoId
	if !IsNil(o.DeleteAllOffers) {
		toSerialize["deleteAllOffers"] = o.DeleteAllOffers
	}
	if o.OfferIds != nil {
		toSerialize["offerIds"] = o.OfferIds
	}
	return toSerialize, nil
}

func (o *DeletePromoOffersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"promoId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeletePromoOffersRequest := _DeletePromoOffersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeletePromoOffersRequest)

	if err != nil {
		return err
	}

	*o = DeletePromoOffersRequest(varDeletePromoOffersRequest)

	return err
}

type NullableDeletePromoOffersRequest struct {
	value *DeletePromoOffersRequest
	isSet bool
}

func (v NullableDeletePromoOffersRequest) Get() *DeletePromoOffersRequest {
	return v.value
}

func (v *NullableDeletePromoOffersRequest) Set(val *DeletePromoOffersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableDeletePromoOffersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableDeletePromoOffersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeletePromoOffersRequest(val *DeletePromoOffersRequest) *NullableDeletePromoOffersRequest {
	return &NullableDeletePromoOffersRequest{value: val, isSet: true}
}

func (v NullableDeletePromoOffersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeletePromoOffersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


