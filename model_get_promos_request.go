/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetPromosRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetPromosRequest{}

// GetPromosRequest Фильтры для получения списка акций.
type GetPromosRequest struct {
	Participation *PromoParticipationType `json:"participation,omitempty"`
	Mechanics *MechanicsType `json:"mechanics,omitempty"`
}

// NewGetPromosRequest instantiates a new GetPromosRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetPromosRequest() *GetPromosRequest {
	this := GetPromosRequest{}
	return &this
}

// NewGetPromosRequestWithDefaults instantiates a new GetPromosRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetPromosRequestWithDefaults() *GetPromosRequest {
	this := GetPromosRequest{}
	return &this
}

// GetParticipation returns the Participation field value if set, zero value otherwise.
func (o *GetPromosRequest) GetParticipation() PromoParticipationType {
	if o == nil || IsNil(o.Participation) {
		var ret PromoParticipationType
		return ret
	}
	return *o.Participation
}

// GetParticipationOk returns a tuple with the Participation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPromosRequest) GetParticipationOk() (*PromoParticipationType, bool) {
	if o == nil || IsNil(o.Participation) {
		return nil, false
	}
	return o.Participation, true
}

// HasParticipation returns a boolean if a field has been set.
func (o *GetPromosRequest) HasParticipation() bool {
	if o != nil && !IsNil(o.Participation) {
		return true
	}

	return false
}

// SetParticipation gets a reference to the given PromoParticipationType and assigns it to the Participation field.
func (o *GetPromosRequest) SetParticipation(v PromoParticipationType) {
	o.Participation = &v
}

// GetMechanics returns the Mechanics field value if set, zero value otherwise.
func (o *GetPromosRequest) GetMechanics() MechanicsType {
	if o == nil || IsNil(o.Mechanics) {
		var ret MechanicsType
		return ret
	}
	return *o.Mechanics
}

// GetMechanicsOk returns a tuple with the Mechanics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetPromosRequest) GetMechanicsOk() (*MechanicsType, bool) {
	if o == nil || IsNil(o.Mechanics) {
		return nil, false
	}
	return o.Mechanics, true
}

// HasMechanics returns a boolean if a field has been set.
func (o *GetPromosRequest) HasMechanics() bool {
	if o != nil && !IsNil(o.Mechanics) {
		return true
	}

	return false
}

// SetMechanics gets a reference to the given MechanicsType and assigns it to the Mechanics field.
func (o *GetPromosRequest) SetMechanics(v MechanicsType) {
	o.Mechanics = &v
}

func (o GetPromosRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetPromosRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Participation) {
		toSerialize["participation"] = o.Participation
	}
	if !IsNil(o.Mechanics) {
		toSerialize["mechanics"] = o.Mechanics
	}
	return toSerialize, nil
}

type NullableGetPromosRequest struct {
	value *GetPromosRequest
	isSet bool
}

func (v NullableGetPromosRequest) Get() *GetPromosRequest {
	return v.value
}

func (v *NullableGetPromosRequest) Set(val *GetPromosRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetPromosRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetPromosRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetPromosRequest(val *GetPromosRequest) *NullableGetPromosRequest {
	return &NullableGetPromosRequest{value: val, isSet: true}
}

func (v NullableGetPromosRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetPromosRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


