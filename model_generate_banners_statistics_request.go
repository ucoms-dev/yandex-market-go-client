/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GenerateBannersStatisticsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateBannersStatisticsRequest{}

// GenerateBannersStatisticsRequest Данные, необходимые для генерации отчета. 
type GenerateBannersStatisticsRequest struct {
	// Идентификатор кабинета.
	BusinessId int64 `json:"businessId"`
	// Начало периода, включительно.
	DateFrom string `json:"dateFrom"`
	// Конец периода, включительно.
	DateTo string `json:"dateTo"`
}

type _GenerateBannersStatisticsRequest GenerateBannersStatisticsRequest

// NewGenerateBannersStatisticsRequest instantiates a new GenerateBannersStatisticsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateBannersStatisticsRequest(businessId int64, dateFrom string, dateTo string) *GenerateBannersStatisticsRequest {
	this := GenerateBannersStatisticsRequest{}
	this.BusinessId = businessId
	this.DateFrom = dateFrom
	this.DateTo = dateTo
	return &this
}

// NewGenerateBannersStatisticsRequestWithDefaults instantiates a new GenerateBannersStatisticsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateBannersStatisticsRequestWithDefaults() *GenerateBannersStatisticsRequest {
	this := GenerateBannersStatisticsRequest{}
	return &this
}

// GetBusinessId returns the BusinessId field value
func (o *GenerateBannersStatisticsRequest) GetBusinessId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value
// and a boolean to check if the value has been set.
func (o *GenerateBannersStatisticsRequest) GetBusinessIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BusinessId, true
}

// SetBusinessId sets field value
func (o *GenerateBannersStatisticsRequest) SetBusinessId(v int64) {
	o.BusinessId = v
}

// GetDateFrom returns the DateFrom field value
func (o *GenerateBannersStatisticsRequest) GetDateFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateFrom
}

// GetDateFromOk returns a tuple with the DateFrom field value
// and a boolean to check if the value has been set.
func (o *GenerateBannersStatisticsRequest) GetDateFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateFrom, true
}

// SetDateFrom sets field value
func (o *GenerateBannersStatisticsRequest) SetDateFrom(v string) {
	o.DateFrom = v
}

// GetDateTo returns the DateTo field value
func (o *GenerateBannersStatisticsRequest) GetDateTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateTo
}

// GetDateToOk returns a tuple with the DateTo field value
// and a boolean to check if the value has been set.
func (o *GenerateBannersStatisticsRequest) GetDateToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateTo, true
}

// SetDateTo sets field value
func (o *GenerateBannersStatisticsRequest) SetDateTo(v string) {
	o.DateTo = v
}

func (o GenerateBannersStatisticsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateBannersStatisticsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["businessId"] = o.BusinessId
	toSerialize["dateFrom"] = o.DateFrom
	toSerialize["dateTo"] = o.DateTo
	return toSerialize, nil
}

func (o *GenerateBannersStatisticsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"businessId",
		"dateFrom",
		"dateTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateBannersStatisticsRequest := _GenerateBannersStatisticsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGenerateBannersStatisticsRequest)

	if err != nil {
		return err
	}

	*o = GenerateBannersStatisticsRequest(varGenerateBannersStatisticsRequest)

	return err
}

type NullableGenerateBannersStatisticsRequest struct {
	value *GenerateBannersStatisticsRequest
	isSet bool
}

func (v NullableGenerateBannersStatisticsRequest) Get() *GenerateBannersStatisticsRequest {
	return v.value
}

func (v *NullableGenerateBannersStatisticsRequest) Set(val *GenerateBannersStatisticsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateBannersStatisticsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateBannersStatisticsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateBannersStatisticsRequest(val *GenerateBannersStatisticsRequest) *NullableGenerateBannersStatisticsRequest {
	return &NullableGenerateBannersStatisticsRequest{value: val, isSet: true}
}

func (v NullableGenerateBannersStatisticsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateBannersStatisticsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


