/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the GetSupplyRequestsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSupplyRequestsRequest{}

// GetSupplyRequestsRequest Модель для фильтрации и сортировки заявок на поставку. Фильтры по `requestDateFrom` и `requestDateTo` отбирают заявки по targetLocation->requestedDate и transitLocation->requestedDate.
type GetSupplyRequestsRequest struct {
	// Идентификаторы заявок.
	RequestIds []int64 `json:"requestIds,omitempty"`
	// Дата начала периода для фильтрации заявок.
	RequestDateFrom NullableTime `json:"requestDateFrom,omitempty"`
	// Дата окончания периода для фильтрации заявок.
	RequestDateTo NullableTime `json:"requestDateTo,omitempty"`
	// Типы заявок для фильтрации.
	RequestTypes []SupplyRequestType `json:"requestTypes,omitempty"`
	// Подтипы заявок для фильтрации.
	RequestSubtypes []SupplyRequestSubType `json:"requestSubtypes,omitempty"`
	// Статусы заявок для фильтрации.
	RequestStatuses []SupplyRequestStatusType `json:"requestStatuses,omitempty"`
	Sorting         *SupplyRequestSortingDTO  `json:"sorting,omitempty"`
}

// NewGetSupplyRequestsRequest instantiates a new GetSupplyRequestsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSupplyRequestsRequest() *GetSupplyRequestsRequest {
	this := GetSupplyRequestsRequest{}
	return &this
}

// NewGetSupplyRequestsRequestWithDefaults instantiates a new GetSupplyRequestsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSupplyRequestsRequestWithDefaults() *GetSupplyRequestsRequest {
	this := GetSupplyRequestsRequest{}
	return &this
}

// GetRequestIds returns the RequestIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSupplyRequestsRequest) GetRequestIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.RequestIds
}

// GetRequestIdsOk returns a tuple with the RequestIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSupplyRequestsRequest) GetRequestIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.RequestIds) {
		return nil, false
	}
	return o.RequestIds, true
}

// HasRequestIds returns a boolean if a field has been set.
func (o *GetSupplyRequestsRequest) HasRequestIds() bool {
	if o != nil && !IsNil(o.RequestIds) {
		return true
	}

	return false
}

// SetRequestIds gets a reference to the given []int64 and assigns it to the RequestIds field.
func (o *GetSupplyRequestsRequest) SetRequestIds(v []int64) {
	o.RequestIds = v
}

// GetRequestDateFrom returns the RequestDateFrom field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSupplyRequestsRequest) GetRequestDateFrom() time.Time {
	if o == nil || IsNil(o.RequestDateFrom.Get()) {
		var ret time.Time
		return ret
	}
	return *o.RequestDateFrom.Get()
}

// GetRequestDateFromOk returns a tuple with the RequestDateFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSupplyRequestsRequest) GetRequestDateFromOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestDateFrom.Get(), o.RequestDateFrom.IsSet()
}

// HasRequestDateFrom returns a boolean if a field has been set.
func (o *GetSupplyRequestsRequest) HasRequestDateFrom() bool {
	if o != nil && o.RequestDateFrom.IsSet() {
		return true
	}

	return false
}

// SetRequestDateFrom gets a reference to the given NullableTime and assigns it to the RequestDateFrom field.
func (o *GetSupplyRequestsRequest) SetRequestDateFrom(v time.Time) {
	o.RequestDateFrom.Set(&v)
}

// SetRequestDateFromNil sets the value for RequestDateFrom to be an explicit nil
func (o *GetSupplyRequestsRequest) SetRequestDateFromNil() {
	o.RequestDateFrom.Set(nil)
}

// UnsetRequestDateFrom ensures that no value is present for RequestDateFrom, not even an explicit nil
func (o *GetSupplyRequestsRequest) UnsetRequestDateFrom() {
	o.RequestDateFrom.Unset()
}

// GetRequestDateTo returns the RequestDateTo field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSupplyRequestsRequest) GetRequestDateTo() time.Time {
	if o == nil || IsNil(o.RequestDateTo.Get()) {
		var ret time.Time
		return ret
	}
	return *o.RequestDateTo.Get()
}

// GetRequestDateToOk returns a tuple with the RequestDateTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSupplyRequestsRequest) GetRequestDateToOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.RequestDateTo.Get(), o.RequestDateTo.IsSet()
}

// HasRequestDateTo returns a boolean if a field has been set.
func (o *GetSupplyRequestsRequest) HasRequestDateTo() bool {
	if o != nil && o.RequestDateTo.IsSet() {
		return true
	}

	return false
}

// SetRequestDateTo gets a reference to the given NullableTime and assigns it to the RequestDateTo field.
func (o *GetSupplyRequestsRequest) SetRequestDateTo(v time.Time) {
	o.RequestDateTo.Set(&v)
}

// SetRequestDateToNil sets the value for RequestDateTo to be an explicit nil
func (o *GetSupplyRequestsRequest) SetRequestDateToNil() {
	o.RequestDateTo.Set(nil)
}

// UnsetRequestDateTo ensures that no value is present for RequestDateTo, not even an explicit nil
func (o *GetSupplyRequestsRequest) UnsetRequestDateTo() {
	o.RequestDateTo.Unset()
}

// GetRequestTypes returns the RequestTypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSupplyRequestsRequest) GetRequestTypes() []SupplyRequestType {
	if o == nil {
		var ret []SupplyRequestType
		return ret
	}
	return o.RequestTypes
}

// GetRequestTypesOk returns a tuple with the RequestTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSupplyRequestsRequest) GetRequestTypesOk() ([]SupplyRequestType, bool) {
	if o == nil || IsNil(o.RequestTypes) {
		return nil, false
	}
	return o.RequestTypes, true
}

// HasRequestTypes returns a boolean if a field has been set.
func (o *GetSupplyRequestsRequest) HasRequestTypes() bool {
	if o != nil && !IsNil(o.RequestTypes) {
		return true
	}

	return false
}

// SetRequestTypes gets a reference to the given []SupplyRequestType and assigns it to the RequestTypes field.
func (o *GetSupplyRequestsRequest) SetRequestTypes(v []SupplyRequestType) {
	o.RequestTypes = v
}

// GetRequestSubtypes returns the RequestSubtypes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSupplyRequestsRequest) GetRequestSubtypes() []SupplyRequestSubType {
	if o == nil {
		var ret []SupplyRequestSubType
		return ret
	}
	return o.RequestSubtypes
}

// GetRequestSubtypesOk returns a tuple with the RequestSubtypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSupplyRequestsRequest) GetRequestSubtypesOk() ([]SupplyRequestSubType, bool) {
	if o == nil || IsNil(o.RequestSubtypes) {
		return nil, false
	}
	return o.RequestSubtypes, true
}

// HasRequestSubtypes returns a boolean if a field has been set.
func (o *GetSupplyRequestsRequest) HasRequestSubtypes() bool {
	if o != nil && !IsNil(o.RequestSubtypes) {
		return true
	}

	return false
}

// SetRequestSubtypes gets a reference to the given []SupplyRequestSubType and assigns it to the RequestSubtypes field.
func (o *GetSupplyRequestsRequest) SetRequestSubtypes(v []SupplyRequestSubType) {
	o.RequestSubtypes = v
}

// GetRequestStatuses returns the RequestStatuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetSupplyRequestsRequest) GetRequestStatuses() []SupplyRequestStatusType {
	if o == nil {
		var ret []SupplyRequestStatusType
		return ret
	}
	return o.RequestStatuses
}

// GetRequestStatusesOk returns a tuple with the RequestStatuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetSupplyRequestsRequest) GetRequestStatusesOk() ([]SupplyRequestStatusType, bool) {
	if o == nil || IsNil(o.RequestStatuses) {
		return nil, false
	}
	return o.RequestStatuses, true
}

// HasRequestStatuses returns a boolean if a field has been set.
func (o *GetSupplyRequestsRequest) HasRequestStatuses() bool {
	if o != nil && !IsNil(o.RequestStatuses) {
		return true
	}

	return false
}

// SetRequestStatuses gets a reference to the given []SupplyRequestStatusType and assigns it to the RequestStatuses field.
func (o *GetSupplyRequestsRequest) SetRequestStatuses(v []SupplyRequestStatusType) {
	o.RequestStatuses = v
}

// GetSorting returns the Sorting field value if set, zero value otherwise.
func (o *GetSupplyRequestsRequest) GetSorting() SupplyRequestSortingDTO {
	if o == nil || IsNil(o.Sorting) {
		var ret SupplyRequestSortingDTO
		return ret
	}
	return *o.Sorting
}

// GetSortingOk returns a tuple with the Sorting field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSupplyRequestsRequest) GetSortingOk() (*SupplyRequestSortingDTO, bool) {
	if o == nil || IsNil(o.Sorting) {
		return nil, false
	}
	return o.Sorting, true
}

// HasSorting returns a boolean if a field has been set.
func (o *GetSupplyRequestsRequest) HasSorting() bool {
	if o != nil && !IsNil(o.Sorting) {
		return true
	}

	return false
}

// SetSorting gets a reference to the given SupplyRequestSortingDTO and assigns it to the Sorting field.
func (o *GetSupplyRequestsRequest) SetSorting(v SupplyRequestSortingDTO) {
	o.Sorting = &v
}

func (o GetSupplyRequestsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSupplyRequestsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RequestIds != nil {
		toSerialize["requestIds"] = o.RequestIds
	}
	if o.RequestDateFrom.IsSet() {
		toSerialize["requestDateFrom"] = o.RequestDateFrom.Get()
	}
	if o.RequestDateTo.IsSet() {
		toSerialize["requestDateTo"] = o.RequestDateTo.Get()
	}
	if o.RequestTypes != nil {
		toSerialize["requestTypes"] = o.RequestTypes
	}
	if o.RequestSubtypes != nil {
		toSerialize["requestSubtypes"] = o.RequestSubtypes
	}
	if o.RequestStatuses != nil {
		toSerialize["requestStatuses"] = o.RequestStatuses
	}
	if !IsNil(o.Sorting) {
		toSerialize["sorting"] = o.Sorting
	}
	return toSerialize, nil
}

type NullableGetSupplyRequestsRequest struct {
	value *GetSupplyRequestsRequest
	isSet bool
}

func (v NullableGetSupplyRequestsRequest) Get() *GetSupplyRequestsRequest {
	return v.value
}

func (v *NullableGetSupplyRequestsRequest) Set(val *GetSupplyRequestsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSupplyRequestsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSupplyRequestsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSupplyRequestsRequest(val *GetSupplyRequestsRequest) *NullableGetSupplyRequestsRequest {
	return &NullableGetSupplyRequestsRequest{value: val, isSet: true}
}

func (v NullableGetSupplyRequestsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSupplyRequestsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
