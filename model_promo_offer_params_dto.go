/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the PromoOfferParamsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromoOfferParamsDTO{}

// PromoOfferParamsDTO Параметры товара в акции.  Возвращается параметр, который соответствует типу акции. 
type PromoOfferParamsDTO struct {
	DiscountParams *PromoOfferDiscountParamsDTO `json:"discountParams,omitempty"`
	PromocodeParams *PromoOfferPromocodeParamsDTO `json:"promocodeParams,omitempty"`
}

// NewPromoOfferParamsDTO instantiates a new PromoOfferParamsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromoOfferParamsDTO() *PromoOfferParamsDTO {
	this := PromoOfferParamsDTO{}
	return &this
}

// NewPromoOfferParamsDTOWithDefaults instantiates a new PromoOfferParamsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromoOfferParamsDTOWithDefaults() *PromoOfferParamsDTO {
	this := PromoOfferParamsDTO{}
	return &this
}

// GetDiscountParams returns the DiscountParams field value if set, zero value otherwise.
func (o *PromoOfferParamsDTO) GetDiscountParams() PromoOfferDiscountParamsDTO {
	if o == nil || IsNil(o.DiscountParams) {
		var ret PromoOfferDiscountParamsDTO
		return ret
	}
	return *o.DiscountParams
}

// GetDiscountParamsOk returns a tuple with the DiscountParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoOfferParamsDTO) GetDiscountParamsOk() (*PromoOfferDiscountParamsDTO, bool) {
	if o == nil || IsNil(o.DiscountParams) {
		return nil, false
	}
	return o.DiscountParams, true
}

// HasDiscountParams returns a boolean if a field has been set.
func (o *PromoOfferParamsDTO) HasDiscountParams() bool {
	if o != nil && !IsNil(o.DiscountParams) {
		return true
	}

	return false
}

// SetDiscountParams gets a reference to the given PromoOfferDiscountParamsDTO and assigns it to the DiscountParams field.
func (o *PromoOfferParamsDTO) SetDiscountParams(v PromoOfferDiscountParamsDTO) {
	o.DiscountParams = &v
}

// GetPromocodeParams returns the PromocodeParams field value if set, zero value otherwise.
func (o *PromoOfferParamsDTO) GetPromocodeParams() PromoOfferPromocodeParamsDTO {
	if o == nil || IsNil(o.PromocodeParams) {
		var ret PromoOfferPromocodeParamsDTO
		return ret
	}
	return *o.PromocodeParams
}

// GetPromocodeParamsOk returns a tuple with the PromocodeParams field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoOfferParamsDTO) GetPromocodeParamsOk() (*PromoOfferPromocodeParamsDTO, bool) {
	if o == nil || IsNil(o.PromocodeParams) {
		return nil, false
	}
	return o.PromocodeParams, true
}

// HasPromocodeParams returns a boolean if a field has been set.
func (o *PromoOfferParamsDTO) HasPromocodeParams() bool {
	if o != nil && !IsNil(o.PromocodeParams) {
		return true
	}

	return false
}

// SetPromocodeParams gets a reference to the given PromoOfferPromocodeParamsDTO and assigns it to the PromocodeParams field.
func (o *PromoOfferParamsDTO) SetPromocodeParams(v PromoOfferPromocodeParamsDTO) {
	o.PromocodeParams = &v
}

func (o PromoOfferParamsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromoOfferParamsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DiscountParams) {
		toSerialize["discountParams"] = o.DiscountParams
	}
	if !IsNil(o.PromocodeParams) {
		toSerialize["promocodeParams"] = o.PromocodeParams
	}
	return toSerialize, nil
}

type NullablePromoOfferParamsDTO struct {
	value *PromoOfferParamsDTO
	isSet bool
}

func (v NullablePromoOfferParamsDTO) Get() *PromoOfferParamsDTO {
	return v.value
}

func (v *NullablePromoOfferParamsDTO) Set(val *PromoOfferParamsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePromoOfferParamsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePromoOfferParamsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromoOfferParamsDTO(val *PromoOfferParamsDTO) *NullablePromoOfferParamsDTO {
	return &NullablePromoOfferParamsDTO{value: val, isSet: true}
}

func (v NullablePromoOfferParamsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromoOfferParamsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


