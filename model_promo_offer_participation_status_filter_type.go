/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// PromoOfferParticipationStatusFilterType Фильтр для товаров, которые добавлены в акцию вручную:  * `MANUALLY_ADDED` — товары, которые добавлены вручную.  * `NOT_MANUALLY_ADDED`— товары, которые не участвуют в акции и те, которые добавлены автоматически.  Об автоматическом и ручном добавлении товаров в акцию читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/marketing/promos/market/index). 
type PromoOfferParticipationStatusFilterType string

// List of PromoOfferParticipationStatusFilterType
const (
	MANUALLY_ADDED PromoOfferParticipationStatusFilterType = "MANUALLY_ADDED"
	NOT_MANUALLY_ADDED PromoOfferParticipationStatusFilterType = "NOT_MANUALLY_ADDED"
)

// All allowed values of PromoOfferParticipationStatusFilterType enum
var AllowedPromoOfferParticipationStatusFilterTypeEnumValues = []PromoOfferParticipationStatusFilterType{
	"MANUALLY_ADDED",
	"NOT_MANUALLY_ADDED",
}

func (v *PromoOfferParticipationStatusFilterType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := PromoOfferParticipationStatusFilterType(value)
	for _, existing := range AllowedPromoOfferParticipationStatusFilterTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid PromoOfferParticipationStatusFilterType", value)
}

// NewPromoOfferParticipationStatusFilterTypeFromValue returns a pointer to a valid PromoOfferParticipationStatusFilterType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPromoOfferParticipationStatusFilterTypeFromValue(v string) (*PromoOfferParticipationStatusFilterType, error) {
	ev := PromoOfferParticipationStatusFilterType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for PromoOfferParticipationStatusFilterType: valid values are %v", v, AllowedPromoOfferParticipationStatusFilterTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PromoOfferParticipationStatusFilterType) IsValid() bool {
	for _, existing := range AllowedPromoOfferParticipationStatusFilterTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to PromoOfferParticipationStatusFilterType value
func (v PromoOfferParticipationStatusFilterType) Ptr() *PromoOfferParticipationStatusFilterType {
	return &v
}

type NullablePromoOfferParticipationStatusFilterType struct {
	value *PromoOfferParticipationStatusFilterType
	isSet bool
}

func (v NullablePromoOfferParticipationStatusFilterType) Get() *PromoOfferParticipationStatusFilterType {
	return v.value
}

func (v *NullablePromoOfferParticipationStatusFilterType) Set(val *PromoOfferParticipationStatusFilterType) {
	v.value = val
	v.isSet = true
}

func (v NullablePromoOfferParticipationStatusFilterType) IsSet() bool {
	return v.isSet
}

func (v *NullablePromoOfferParticipationStatusFilterType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromoOfferParticipationStatusFilterType(val *PromoOfferParticipationStatusFilterType) *NullablePromoOfferParticipationStatusFilterType {
	return &NullablePromoOfferParticipationStatusFilterType{value: val, isSet: true}
}

func (v NullablePromoOfferParticipationStatusFilterType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromoOfferParticipationStatusFilterType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

