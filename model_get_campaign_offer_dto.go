/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetCampaignOfferDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCampaignOfferDTO{}

// GetCampaignOfferDTO Параметры размещения товара в магазине.
type GetCampaignOfferDTO struct {
	// Ваш SKU — идентификатор товара в вашей системе.  Правила использования SKU:  * У каждого товара SKU должен быть свой.  * Уже заданный SKU нельзя освободить и использовать заново для другого товара. Каждый товар должен получать новый идентификатор, до того никогда не использовавшийся в вашем каталоге.  SKU товара можно изменить в кабинете продавца на Маркете. О том, как это сделать, читайте [в Справке Маркета для продавцов](https://yandex.ru/support2/marketplace/ru/assortment/operations/edit-sku).  [Что такое SKU и как его назначать](https://yandex.ru/support/marketplace/assortment/add/index.html#fields)
	OfferId string      `json:"offerId" validate:"regexp=^(?=.*\\\\S.*)[^\\\\x00-\\\\x08\\\\x0A-\\\\x1f\\\\x7f]{1,255}$"`
	Quantum *QuantumDTO `json:"quantum,omitempty"`
	// {% note warning \"Вместо него используйте методы скрытия товаров с витрины\" %}  * [GET campaigns/{campaignId}/hidden-offers](../../reference/assortment/getHiddenOffers.md) — просмотр скрытых товаров; * [POST campaigns/{campaignId}/hidden-offers](../../reference/assortment/addHiddenOffers.md) — скрытие товаров; * [POST campaigns/{campaignId}/hidden-offers/delete](../../reference/assortment/deleteHiddenOffers.md) — возобновление показа.  {% endnote %}  Есть ли товар в продаже.
	// Deprecated
	Available     *bool                    `json:"available,omitempty"`
	BasicPrice    *GetPriceWithDiscountDTO `json:"basicPrice,omitempty"`
	CampaignPrice *GetPriceWithVatDTO      `json:"campaignPrice,omitempty"`
	Status        *OfferCampaignStatusType `json:"status,omitempty"`
	// Ошибки, препятствующие размещению товара на витрине.
	Errors []OfferErrorDTO `json:"errors,omitempty"`
	// Предупреждения, не препятствующие размещению товара на витрине.
	Warnings []OfferErrorDTO `json:"warnings,omitempty"`
}

type _GetCampaignOfferDTO GetCampaignOfferDTO

// NewGetCampaignOfferDTO instantiates a new GetCampaignOfferDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCampaignOfferDTO(offerId string) *GetCampaignOfferDTO {
	this := GetCampaignOfferDTO{}
	this.OfferId = offerId
	return &this
}

// NewGetCampaignOfferDTOWithDefaults instantiates a new GetCampaignOfferDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCampaignOfferDTOWithDefaults() *GetCampaignOfferDTO {
	this := GetCampaignOfferDTO{}
	return &this
}

// GetOfferId returns the OfferId field value
func (o *GetCampaignOfferDTO) GetOfferId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OfferId
}

// GetOfferIdOk returns a tuple with the OfferId field value
// and a boolean to check if the value has been set.
func (o *GetCampaignOfferDTO) GetOfferIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfferId, true
}

// SetOfferId sets field value
func (o *GetCampaignOfferDTO) SetOfferId(v string) {
	o.OfferId = v
}

// GetQuantum returns the Quantum field value if set, zero value otherwise.
func (o *GetCampaignOfferDTO) GetQuantum() QuantumDTO {
	if o == nil || IsNil(o.Quantum) {
		var ret QuantumDTO
		return ret
	}
	return *o.Quantum
}

// GetQuantumOk returns a tuple with the Quantum field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignOfferDTO) GetQuantumOk() (*QuantumDTO, bool) {
	if o == nil || IsNil(o.Quantum) {
		return nil, false
	}
	return o.Quantum, true
}

// HasQuantum returns a boolean if a field has been set.
func (o *GetCampaignOfferDTO) HasQuantum() bool {
	if o != nil && !IsNil(o.Quantum) {
		return true
	}

	return false
}

// SetQuantum gets a reference to the given QuantumDTO and assigns it to the Quantum field.
func (o *GetCampaignOfferDTO) SetQuantum(v QuantumDTO) {
	o.Quantum = &v
}

// GetAvailable returns the Available field value if set, zero value otherwise.
// Deprecated
func (o *GetCampaignOfferDTO) GetAvailable() bool {
	if o == nil || IsNil(o.Available) {
		var ret bool
		return ret
	}
	return *o.Available
}

// GetAvailableOk returns a tuple with the Available field value if set, nil otherwise
// and a boolean to check if the value has been set.
// Deprecated
func (o *GetCampaignOfferDTO) GetAvailableOk() (*bool, bool) {
	if o == nil || IsNil(o.Available) {
		return nil, false
	}
	return o.Available, true
}

// HasAvailable returns a boolean if a field has been set.
func (o *GetCampaignOfferDTO) HasAvailable() bool {
	if o != nil && !IsNil(o.Available) {
		return true
	}

	return false
}

// SetAvailable gets a reference to the given bool and assigns it to the Available field.
// Deprecated
func (o *GetCampaignOfferDTO) SetAvailable(v bool) {
	o.Available = &v
}

// GetBasicPrice returns the BasicPrice field value if set, zero value otherwise.
func (o *GetCampaignOfferDTO) GetBasicPrice() GetPriceWithDiscountDTO {
	if o == nil || IsNil(o.BasicPrice) {
		var ret GetPriceWithDiscountDTO
		return ret
	}
	return *o.BasicPrice
}

// GetBasicPriceOk returns a tuple with the BasicPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignOfferDTO) GetBasicPriceOk() (*GetPriceWithDiscountDTO, bool) {
	if o == nil || IsNil(o.BasicPrice) {
		return nil, false
	}
	return o.BasicPrice, true
}

// HasBasicPrice returns a boolean if a field has been set.
func (o *GetCampaignOfferDTO) HasBasicPrice() bool {
	if o != nil && !IsNil(o.BasicPrice) {
		return true
	}

	return false
}

// SetBasicPrice gets a reference to the given GetPriceWithDiscountDTO and assigns it to the BasicPrice field.
func (o *GetCampaignOfferDTO) SetBasicPrice(v GetPriceWithDiscountDTO) {
	o.BasicPrice = &v
}

// GetCampaignPrice returns the CampaignPrice field value if set, zero value otherwise.
func (o *GetCampaignOfferDTO) GetCampaignPrice() GetPriceWithVatDTO {
	if o == nil || IsNil(o.CampaignPrice) {
		var ret GetPriceWithVatDTO
		return ret
	}
	return *o.CampaignPrice
}

// GetCampaignPriceOk returns a tuple with the CampaignPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignOfferDTO) GetCampaignPriceOk() (*GetPriceWithVatDTO, bool) {
	if o == nil || IsNil(o.CampaignPrice) {
		return nil, false
	}
	return o.CampaignPrice, true
}

// HasCampaignPrice returns a boolean if a field has been set.
func (o *GetCampaignOfferDTO) HasCampaignPrice() bool {
	if o != nil && !IsNil(o.CampaignPrice) {
		return true
	}

	return false
}

// SetCampaignPrice gets a reference to the given GetPriceWithVatDTO and assigns it to the CampaignPrice field.
func (o *GetCampaignOfferDTO) SetCampaignPrice(v GetPriceWithVatDTO) {
	o.CampaignPrice = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetCampaignOfferDTO) GetStatus() OfferCampaignStatusType {
	if o == nil || IsNil(o.Status) {
		var ret OfferCampaignStatusType
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignOfferDTO) GetStatusOk() (*OfferCampaignStatusType, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetCampaignOfferDTO) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OfferCampaignStatusType and assigns it to the Status field.
func (o *GetCampaignOfferDTO) SetStatus(v OfferCampaignStatusType) {
	o.Status = &v
}

// GetErrors returns the Errors field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetCampaignOfferDTO) GetErrors() []OfferErrorDTO {
	if o == nil {
		var ret []OfferErrorDTO
		return ret
	}
	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetCampaignOfferDTO) GetErrorsOk() ([]OfferErrorDTO, bool) {
	if o == nil || IsNil(o.Errors) {
		return nil, false
	}
	return o.Errors, true
}

// HasErrors returns a boolean if a field has been set.
func (o *GetCampaignOfferDTO) HasErrors() bool {
	if o != nil && !IsNil(o.Errors) {
		return true
	}

	return false
}

// SetErrors gets a reference to the given []OfferErrorDTO and assigns it to the Errors field.
func (o *GetCampaignOfferDTO) SetErrors(v []OfferErrorDTO) {
	o.Errors = v
}

// GetWarnings returns the Warnings field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetCampaignOfferDTO) GetWarnings() []OfferErrorDTO {
	if o == nil {
		var ret []OfferErrorDTO
		return ret
	}
	return o.Warnings
}

// GetWarningsOk returns a tuple with the Warnings field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetCampaignOfferDTO) GetWarningsOk() ([]OfferErrorDTO, bool) {
	if o == nil || IsNil(o.Warnings) {
		return nil, false
	}
	return o.Warnings, true
}

// HasWarnings returns a boolean if a field has been set.
func (o *GetCampaignOfferDTO) HasWarnings() bool {
	if o != nil && !IsNil(o.Warnings) {
		return true
	}

	return false
}

// SetWarnings gets a reference to the given []OfferErrorDTO and assigns it to the Warnings field.
func (o *GetCampaignOfferDTO) SetWarnings(v []OfferErrorDTO) {
	o.Warnings = v
}

func (o GetCampaignOfferDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCampaignOfferDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["offerId"] = o.OfferId
	if !IsNil(o.Quantum) {
		toSerialize["quantum"] = o.Quantum
	}
	if !IsNil(o.Available) {
		toSerialize["available"] = o.Available
	}
	if !IsNil(o.BasicPrice) {
		toSerialize["basicPrice"] = o.BasicPrice
	}
	if !IsNil(o.CampaignPrice) {
		toSerialize["campaignPrice"] = o.CampaignPrice
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if o.Errors != nil {
		toSerialize["errors"] = o.Errors
	}
	if o.Warnings != nil {
		toSerialize["warnings"] = o.Warnings
	}
	return toSerialize, nil
}

func (o *GetCampaignOfferDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"offerId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetCampaignOfferDTO := _GetCampaignOfferDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varGetCampaignOfferDTO)

	if err != nil {
		return err
	}

	*o = GetCampaignOfferDTO(varGetCampaignOfferDTO)

	return err
}

type NullableGetCampaignOfferDTO struct {
	value *GetCampaignOfferDTO
	isSet bool
}

func (v NullableGetCampaignOfferDTO) Get() *GetCampaignOfferDTO {
	return v.value
}

func (v *NullableGetCampaignOfferDTO) Set(val *GetCampaignOfferDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCampaignOfferDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCampaignOfferDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCampaignOfferDTO(val *GetCampaignOfferDTO) *NullableGetCampaignOfferDTO {
	return &NullableGetCampaignOfferDTO{value: val, isSet: true}
}

func (v NullableGetCampaignOfferDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCampaignOfferDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
