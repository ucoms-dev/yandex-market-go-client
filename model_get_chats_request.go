/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetChatsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetChatsRequest{}

// GetChatsRequest Фильтры по чатам, которые нужно вернуть. 
type GetChatsRequest struct {
	// Фильтр по идентификаторам заказов на Маркете.
	OrderIds []int64 `json:"orderIds,omitempty"`
	// Фильтр по типам чатов.
	Types []ChatType `json:"types,omitempty"`
	// Фильтр по статусам чатов.
	Statuses []ChatStatusType `json:"statuses,omitempty"`
}

// NewGetChatsRequest instantiates a new GetChatsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetChatsRequest() *GetChatsRequest {
	this := GetChatsRequest{}
	return &this
}

// NewGetChatsRequestWithDefaults instantiates a new GetChatsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetChatsRequestWithDefaults() *GetChatsRequest {
	this := GetChatsRequest{}
	return &this
}

// GetOrderIds returns the OrderIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetChatsRequest) GetOrderIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.OrderIds
}

// GetOrderIdsOk returns a tuple with the OrderIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetChatsRequest) GetOrderIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.OrderIds) {
		return nil, false
	}
	return o.OrderIds, true
}

// HasOrderIds returns a boolean if a field has been set.
func (o *GetChatsRequest) HasOrderIds() bool {
	if o != nil && !IsNil(o.OrderIds) {
		return true
	}

	return false
}

// SetOrderIds gets a reference to the given []int64 and assigns it to the OrderIds field.
func (o *GetChatsRequest) SetOrderIds(v []int64) {
	o.OrderIds = v
}

// GetTypes returns the Types field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetChatsRequest) GetTypes() []ChatType {
	if o == nil {
		var ret []ChatType
		return ret
	}
	return o.Types
}

// GetTypesOk returns a tuple with the Types field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetChatsRequest) GetTypesOk() ([]ChatType, bool) {
	if o == nil || IsNil(o.Types) {
		return nil, false
	}
	return o.Types, true
}

// HasTypes returns a boolean if a field has been set.
func (o *GetChatsRequest) HasTypes() bool {
	if o != nil && !IsNil(o.Types) {
		return true
	}

	return false
}

// SetTypes gets a reference to the given []ChatType and assigns it to the Types field.
func (o *GetChatsRequest) SetTypes(v []ChatType) {
	o.Types = v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetChatsRequest) GetStatuses() []ChatStatusType {
	if o == nil {
		var ret []ChatStatusType
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetChatsRequest) GetStatusesOk() ([]ChatStatusType, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *GetChatsRequest) HasStatuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []ChatStatusType and assigns it to the Statuses field.
func (o *GetChatsRequest) SetStatuses(v []ChatStatusType) {
	o.Statuses = v
}

func (o GetChatsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetChatsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OrderIds != nil {
		toSerialize["orderIds"] = o.OrderIds
	}
	if o.Types != nil {
		toSerialize["types"] = o.Types
	}
	if o.Statuses != nil {
		toSerialize["statuses"] = o.Statuses
	}
	return toSerialize, nil
}

type NullableGetChatsRequest struct {
	value *GetChatsRequest
	isSet bool
}

func (v NullableGetChatsRequest) Get() *GetChatsRequest {
	return v.value
}

func (v *NullableGetChatsRequest) Set(val *GetChatsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetChatsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetChatsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetChatsRequest(val *GetChatsRequest) *NullableGetChatsRequest {
	return &NullableGetChatsRequest{value: val, isSet: true}
}

func (v NullableGetChatsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetChatsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


