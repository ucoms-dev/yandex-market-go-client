/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetCampaignSettingsResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetCampaignSettingsResponse{}

// GetCampaignSettingsResponse Ответ на запрос настроек магазина.
type GetCampaignSettingsResponse struct {
	Settings *CampaignSettingsDTO `json:"settings,omitempty"`
}

// NewGetCampaignSettingsResponse instantiates a new GetCampaignSettingsResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetCampaignSettingsResponse() *GetCampaignSettingsResponse {
	this := GetCampaignSettingsResponse{}
	return &this
}

// NewGetCampaignSettingsResponseWithDefaults instantiates a new GetCampaignSettingsResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetCampaignSettingsResponseWithDefaults() *GetCampaignSettingsResponse {
	this := GetCampaignSettingsResponse{}
	return &this
}

// GetSettings returns the Settings field value if set, zero value otherwise.
func (o *GetCampaignSettingsResponse) GetSettings() CampaignSettingsDTO {
	if o == nil || IsNil(o.Settings) {
		var ret CampaignSettingsDTO
		return ret
	}
	return *o.Settings
}

// GetSettingsOk returns a tuple with the Settings field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetCampaignSettingsResponse) GetSettingsOk() (*CampaignSettingsDTO, bool) {
	if o == nil || IsNil(o.Settings) {
		return nil, false
	}
	return o.Settings, true
}

// HasSettings returns a boolean if a field has been set.
func (o *GetCampaignSettingsResponse) HasSettings() bool {
	if o != nil && !IsNil(o.Settings) {
		return true
	}

	return false
}

// SetSettings gets a reference to the given CampaignSettingsDTO and assigns it to the Settings field.
func (o *GetCampaignSettingsResponse) SetSettings(v CampaignSettingsDTO) {
	o.Settings = &v
}

func (o GetCampaignSettingsResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetCampaignSettingsResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Settings) {
		toSerialize["settings"] = o.Settings
	}
	return toSerialize, nil
}

type NullableGetCampaignSettingsResponse struct {
	value *GetCampaignSettingsResponse
	isSet bool
}

func (v NullableGetCampaignSettingsResponse) Get() *GetCampaignSettingsResponse {
	return v.value
}

func (v *NullableGetCampaignSettingsResponse) Set(val *GetCampaignSettingsResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableGetCampaignSettingsResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableGetCampaignSettingsResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetCampaignSettingsResponse(val *GetCampaignSettingsResponse) *NullableGetCampaignSettingsResponse {
	return &NullableGetCampaignSettingsResponse{value: val, isSet: true}
}

func (v NullableGetCampaignSettingsResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetCampaignSettingsResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


