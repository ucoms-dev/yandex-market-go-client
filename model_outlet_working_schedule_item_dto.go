/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OutletWorkingScheduleItemDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutletWorkingScheduleItemDTO{}

// OutletWorkingScheduleItemDTO Расписание работы точки продаж.
type OutletWorkingScheduleItemDTO struct {
	StartDay DayOfWeekType `json:"startDay"`
	EndDay   DayOfWeekType `json:"endDay"`
	// Точка продаж работает c указанного часа.  Формат: `ЧЧ:ММ`.
	StartTime string `json:"startTime" validate:"regexp=^([0-1][0-9]|2[0-3]):[0-5][0-9]$"`
	// Точка продаж работает до указанного часа.  Формат: `ЧЧ:ММ`.
	EndTime string `json:"endTime" validate:"regexp=^([0-1][0-9]|2[0-3]):[0-5][0-9]$"`
}

type _OutletWorkingScheduleItemDTO OutletWorkingScheduleItemDTO

// NewOutletWorkingScheduleItemDTO instantiates a new OutletWorkingScheduleItemDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutletWorkingScheduleItemDTO(startDay DayOfWeekType, endDay DayOfWeekType, startTime string, endTime string) *OutletWorkingScheduleItemDTO {
	this := OutletWorkingScheduleItemDTO{}
	this.StartDay = startDay
	this.EndDay = endDay
	this.StartTime = startTime
	this.EndTime = endTime
	return &this
}

// NewOutletWorkingScheduleItemDTOWithDefaults instantiates a new OutletWorkingScheduleItemDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutletWorkingScheduleItemDTOWithDefaults() *OutletWorkingScheduleItemDTO {
	this := OutletWorkingScheduleItemDTO{}
	return &this
}

// GetStartDay returns the StartDay field value
func (o *OutletWorkingScheduleItemDTO) GetStartDay() DayOfWeekType {
	if o == nil {
		var ret DayOfWeekType
		return ret
	}

	return o.StartDay
}

// GetStartDayOk returns a tuple with the StartDay field value
// and a boolean to check if the value has been set.
func (o *OutletWorkingScheduleItemDTO) GetStartDayOk() (*DayOfWeekType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDay, true
}

// SetStartDay sets field value
func (o *OutletWorkingScheduleItemDTO) SetStartDay(v DayOfWeekType) {
	o.StartDay = v
}

// GetEndDay returns the EndDay field value
func (o *OutletWorkingScheduleItemDTO) GetEndDay() DayOfWeekType {
	if o == nil {
		var ret DayOfWeekType
		return ret
	}

	return o.EndDay
}

// GetEndDayOk returns a tuple with the EndDay field value
// and a boolean to check if the value has been set.
func (o *OutletWorkingScheduleItemDTO) GetEndDayOk() (*DayOfWeekType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndDay, true
}

// SetEndDay sets field value
func (o *OutletWorkingScheduleItemDTO) SetEndDay(v DayOfWeekType) {
	o.EndDay = v
}

// GetStartTime returns the StartTime field value
func (o *OutletWorkingScheduleItemDTO) GetStartTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *OutletWorkingScheduleItemDTO) GetStartTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *OutletWorkingScheduleItemDTO) SetStartTime(v string) {
	o.StartTime = v
}

// GetEndTime returns the EndTime field value
func (o *OutletWorkingScheduleItemDTO) GetEndTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.EndTime
}

// GetEndTimeOk returns a tuple with the EndTime field value
// and a boolean to check if the value has been set.
func (o *OutletWorkingScheduleItemDTO) GetEndTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.EndTime, true
}

// SetEndTime sets field value
func (o *OutletWorkingScheduleItemDTO) SetEndTime(v string) {
	o.EndTime = v
}

func (o OutletWorkingScheduleItemDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutletWorkingScheduleItemDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["startDay"] = o.StartDay
	toSerialize["endDay"] = o.EndDay
	toSerialize["startTime"] = o.StartTime
	toSerialize["endTime"] = o.EndTime
	return toSerialize, nil
}

func (o *OutletWorkingScheduleItemDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"startDay",
		"endDay",
		"startTime",
		"endTime",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutletWorkingScheduleItemDTO := _OutletWorkingScheduleItemDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varOutletWorkingScheduleItemDTO)

	if err != nil {
		return err
	}

	*o = OutletWorkingScheduleItemDTO(varOutletWorkingScheduleItemDTO)

	return err
}

type NullableOutletWorkingScheduleItemDTO struct {
	value *OutletWorkingScheduleItemDTO
	isSet bool
}

func (v NullableOutletWorkingScheduleItemDTO) Get() *OutletWorkingScheduleItemDTO {
	return v.value
}

func (v *NullableOutletWorkingScheduleItemDTO) Set(val *OutletWorkingScheduleItemDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOutletWorkingScheduleItemDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOutletWorkingScheduleItemDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutletWorkingScheduleItemDTO(val *OutletWorkingScheduleItemDTO) *NullableOutletWorkingScheduleItemDTO {
	return &NullableOutletWorkingScheduleItemDTO{value: val, isSet: true}
}

func (v NullableOutletWorkingScheduleItemDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutletWorkingScheduleItemDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
