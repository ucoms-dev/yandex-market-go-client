/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the SearchShipmentsResponseDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SearchShipmentsResponseDTO{}

// SearchShipmentsResponseDTO Информация об отгрузках.
type SearchShipmentsResponseDTO struct {
	// Список с информацией об отгрузках.
	Shipments []ShipmentInfoDTO `json:"shipments"`
	Paging *ForwardScrollingPagerDTO `json:"paging,omitempty"`
}

type _SearchShipmentsResponseDTO SearchShipmentsResponseDTO

// NewSearchShipmentsResponseDTO instantiates a new SearchShipmentsResponseDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSearchShipmentsResponseDTO(shipments []ShipmentInfoDTO) *SearchShipmentsResponseDTO {
	this := SearchShipmentsResponseDTO{}
	this.Shipments = shipments
	return &this
}

// NewSearchShipmentsResponseDTOWithDefaults instantiates a new SearchShipmentsResponseDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSearchShipmentsResponseDTOWithDefaults() *SearchShipmentsResponseDTO {
	this := SearchShipmentsResponseDTO{}
	return &this
}

// GetShipments returns the Shipments field value
func (o *SearchShipmentsResponseDTO) GetShipments() []ShipmentInfoDTO {
	if o == nil {
		var ret []ShipmentInfoDTO
		return ret
	}

	return o.Shipments
}

// GetShipmentsOk returns a tuple with the Shipments field value
// and a boolean to check if the value has been set.
func (o *SearchShipmentsResponseDTO) GetShipmentsOk() ([]ShipmentInfoDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Shipments, true
}

// SetShipments sets field value
func (o *SearchShipmentsResponseDTO) SetShipments(v []ShipmentInfoDTO) {
	o.Shipments = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *SearchShipmentsResponseDTO) GetPaging() ForwardScrollingPagerDTO {
	if o == nil || IsNil(o.Paging) {
		var ret ForwardScrollingPagerDTO
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SearchShipmentsResponseDTO) GetPagingOk() (*ForwardScrollingPagerDTO, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *SearchShipmentsResponseDTO) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ForwardScrollingPagerDTO and assigns it to the Paging field.
func (o *SearchShipmentsResponseDTO) SetPaging(v ForwardScrollingPagerDTO) {
	o.Paging = &v
}

func (o SearchShipmentsResponseDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SearchShipmentsResponseDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["shipments"] = o.Shipments
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

func (o *SearchShipmentsResponseDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"shipments",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSearchShipmentsResponseDTO := _SearchShipmentsResponseDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSearchShipmentsResponseDTO)

	if err != nil {
		return err
	}

	*o = SearchShipmentsResponseDTO(varSearchShipmentsResponseDTO)

	return err
}

type NullableSearchShipmentsResponseDTO struct {
	value *SearchShipmentsResponseDTO
	isSet bool
}

func (v NullableSearchShipmentsResponseDTO) Get() *SearchShipmentsResponseDTO {
	return v.value
}

func (v *NullableSearchShipmentsResponseDTO) Set(val *SearchShipmentsResponseDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableSearchShipmentsResponseDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableSearchShipmentsResponseDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSearchShipmentsResponseDTO(val *SearchShipmentsResponseDTO) *NullableSearchShipmentsResponseDTO {
	return &NullableSearchShipmentsResponseDTO{value: val, isSet: true}
}

func (v NullableSearchShipmentsResponseDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSearchShipmentsResponseDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


