/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the ConfirmShipmentRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConfirmShipmentRequest{}

// ConfirmShipmentRequest Запрос для подтверждения отгрузки.
type ConfirmShipmentRequest struct {
	// Идентификатор отгрузки в системе поставщика.
	ExternalShipmentId *string `json:"externalShipmentId,omitempty"`
	// Логин пользователя в Яндекс ID, от имени которого будет подписываться электронный акт приема-передачи.  Указывается без `@yandex.ru`.  Где его найти:  * на странице [Яндекс ID](https://id.yandex.ru); * в [кабинете продавца на Маркете](https://partner.market.yandex.ru/):    * слева снизу под иконкой пользователя;   * на странице **Настройки** → **Сотрудники и доступы**.
	Signatory *string `json:"signatory,omitempty"`
}

// NewConfirmShipmentRequest instantiates a new ConfirmShipmentRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConfirmShipmentRequest() *ConfirmShipmentRequest {
	this := ConfirmShipmentRequest{}
	return &this
}

// NewConfirmShipmentRequestWithDefaults instantiates a new ConfirmShipmentRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConfirmShipmentRequestWithDefaults() *ConfirmShipmentRequest {
	this := ConfirmShipmentRequest{}
	return &this
}

// GetExternalShipmentId returns the ExternalShipmentId field value if set, zero value otherwise.
func (o *ConfirmShipmentRequest) GetExternalShipmentId() string {
	if o == nil || IsNil(o.ExternalShipmentId) {
		var ret string
		return ret
	}
	return *o.ExternalShipmentId
}

// GetExternalShipmentIdOk returns a tuple with the ExternalShipmentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmShipmentRequest) GetExternalShipmentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ExternalShipmentId) {
		return nil, false
	}
	return o.ExternalShipmentId, true
}

// HasExternalShipmentId returns a boolean if a field has been set.
func (o *ConfirmShipmentRequest) HasExternalShipmentId() bool {
	if o != nil && !IsNil(o.ExternalShipmentId) {
		return true
	}

	return false
}

// SetExternalShipmentId gets a reference to the given string and assigns it to the ExternalShipmentId field.
func (o *ConfirmShipmentRequest) SetExternalShipmentId(v string) {
	o.ExternalShipmentId = &v
}

// GetSignatory returns the Signatory field value if set, zero value otherwise.
func (o *ConfirmShipmentRequest) GetSignatory() string {
	if o == nil || IsNil(o.Signatory) {
		var ret string
		return ret
	}
	return *o.Signatory
}

// GetSignatoryOk returns a tuple with the Signatory field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConfirmShipmentRequest) GetSignatoryOk() (*string, bool) {
	if o == nil || IsNil(o.Signatory) {
		return nil, false
	}
	return o.Signatory, true
}

// HasSignatory returns a boolean if a field has been set.
func (o *ConfirmShipmentRequest) HasSignatory() bool {
	if o != nil && !IsNil(o.Signatory) {
		return true
	}

	return false
}

// SetSignatory gets a reference to the given string and assigns it to the Signatory field.
func (o *ConfirmShipmentRequest) SetSignatory(v string) {
	o.Signatory = &v
}

func (o ConfirmShipmentRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConfirmShipmentRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExternalShipmentId) {
		toSerialize["externalShipmentId"] = o.ExternalShipmentId
	}
	if !IsNil(o.Signatory) {
		toSerialize["signatory"] = o.Signatory
	}
	return toSerialize, nil
}

type NullableConfirmShipmentRequest struct {
	value *ConfirmShipmentRequest
	isSet bool
}

func (v NullableConfirmShipmentRequest) Get() *ConfirmShipmentRequest {
	return v.value
}

func (v *NullableConfirmShipmentRequest) Set(val *ConfirmShipmentRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConfirmShipmentRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConfirmShipmentRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConfirmShipmentRequest(val *ConfirmShipmentRequest) *NullableConfirmShipmentRequest {
	return &NullableConfirmShipmentRequest{value: val, isSet: true}
}

func (v NullableConfirmShipmentRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConfirmShipmentRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
