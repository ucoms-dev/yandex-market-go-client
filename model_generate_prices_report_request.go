/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GeneratePricesReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GeneratePricesReportRequest{}

// GeneratePricesReportRequest Данные, необходимые для генерации отчета.
type GeneratePricesReportRequest struct {
	// Идентификатор кабинета.  В большинстве случаев обязателен. Не указывается, если задан `campaignId`. 
	BusinessId *int64 `json:"businessId,omitempty"`
	// Идентификатор кампании.  Передавайте, только если в кабинете есть магазины с уникальными ценами и вы хотите получить отчет для них. В этом случае передавать `businessId` не нужно.  Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:    * **Модули и API** → блок **Передача данных Маркету**.   * **Лог запросов** → выпадающий список в блоке **Показывать логи**.  ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах. 
	CampaignId *int64 `json:"campaignId,omitempty"`
	// Фильтр по категориям на Маркете.
	CategoryIds []int64 `json:"categoryIds,omitempty"`
	// Фильтр по времени появления предложения — начало периода.  Формат даты: `ДД-ММ-ГГГГ`. 
	CreationDateFrom *string `json:"creationDateFrom,omitempty"`
	// Фильтр по времени появления предложения — окончание периода.  Формат даты: `ДД-ММ-ГГГГ`. 
	CreationDateTo *string `json:"creationDateTo,omitempty"`
}

// NewGeneratePricesReportRequest instantiates a new GeneratePricesReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeneratePricesReportRequest() *GeneratePricesReportRequest {
	this := GeneratePricesReportRequest{}
	return &this
}

// NewGeneratePricesReportRequestWithDefaults instantiates a new GeneratePricesReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeneratePricesReportRequestWithDefaults() *GeneratePricesReportRequest {
	this := GeneratePricesReportRequest{}
	return &this
}

// GetBusinessId returns the BusinessId field value if set, zero value otherwise.
func (o *GeneratePricesReportRequest) GetBusinessId() int64 {
	if o == nil || IsNil(o.BusinessId) {
		var ret int64
		return ret
	}
	return *o.BusinessId
}

// GetBusinessIdOk returns a tuple with the BusinessId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePricesReportRequest) GetBusinessIdOk() (*int64, bool) {
	if o == nil || IsNil(o.BusinessId) {
		return nil, false
	}
	return o.BusinessId, true
}

// HasBusinessId returns a boolean if a field has been set.
func (o *GeneratePricesReportRequest) HasBusinessId() bool {
	if o != nil && !IsNil(o.BusinessId) {
		return true
	}

	return false
}

// SetBusinessId gets a reference to the given int64 and assigns it to the BusinessId field.
func (o *GeneratePricesReportRequest) SetBusinessId(v int64) {
	o.BusinessId = &v
}

// GetCampaignId returns the CampaignId field value if set, zero value otherwise.
func (o *GeneratePricesReportRequest) GetCampaignId() int64 {
	if o == nil || IsNil(o.CampaignId) {
		var ret int64
		return ret
	}
	return *o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePricesReportRequest) GetCampaignIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CampaignId) {
		return nil, false
	}
	return o.CampaignId, true
}

// HasCampaignId returns a boolean if a field has been set.
func (o *GeneratePricesReportRequest) HasCampaignId() bool {
	if o != nil && !IsNil(o.CampaignId) {
		return true
	}

	return false
}

// SetCampaignId gets a reference to the given int64 and assigns it to the CampaignId field.
func (o *GeneratePricesReportRequest) SetCampaignId(v int64) {
	o.CampaignId = &v
}

// GetCategoryIds returns the CategoryIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GeneratePricesReportRequest) GetCategoryIds() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.CategoryIds
}

// GetCategoryIdsOk returns a tuple with the CategoryIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GeneratePricesReportRequest) GetCategoryIdsOk() ([]int64, bool) {
	if o == nil || IsNil(o.CategoryIds) {
		return nil, false
	}
	return o.CategoryIds, true
}

// HasCategoryIds returns a boolean if a field has been set.
func (o *GeneratePricesReportRequest) HasCategoryIds() bool {
	if o != nil && !IsNil(o.CategoryIds) {
		return true
	}

	return false
}

// SetCategoryIds gets a reference to the given []int64 and assigns it to the CategoryIds field.
func (o *GeneratePricesReportRequest) SetCategoryIds(v []int64) {
	o.CategoryIds = v
}

// GetCreationDateFrom returns the CreationDateFrom field value if set, zero value otherwise.
func (o *GeneratePricesReportRequest) GetCreationDateFrom() string {
	if o == nil || IsNil(o.CreationDateFrom) {
		var ret string
		return ret
	}
	return *o.CreationDateFrom
}

// GetCreationDateFromOk returns a tuple with the CreationDateFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePricesReportRequest) GetCreationDateFromOk() (*string, bool) {
	if o == nil || IsNil(o.CreationDateFrom) {
		return nil, false
	}
	return o.CreationDateFrom, true
}

// HasCreationDateFrom returns a boolean if a field has been set.
func (o *GeneratePricesReportRequest) HasCreationDateFrom() bool {
	if o != nil && !IsNil(o.CreationDateFrom) {
		return true
	}

	return false
}

// SetCreationDateFrom gets a reference to the given string and assigns it to the CreationDateFrom field.
func (o *GeneratePricesReportRequest) SetCreationDateFrom(v string) {
	o.CreationDateFrom = &v
}

// GetCreationDateTo returns the CreationDateTo field value if set, zero value otherwise.
func (o *GeneratePricesReportRequest) GetCreationDateTo() string {
	if o == nil || IsNil(o.CreationDateTo) {
		var ret string
		return ret
	}
	return *o.CreationDateTo
}

// GetCreationDateToOk returns a tuple with the CreationDateTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeneratePricesReportRequest) GetCreationDateToOk() (*string, bool) {
	if o == nil || IsNil(o.CreationDateTo) {
		return nil, false
	}
	return o.CreationDateTo, true
}

// HasCreationDateTo returns a boolean if a field has been set.
func (o *GeneratePricesReportRequest) HasCreationDateTo() bool {
	if o != nil && !IsNil(o.CreationDateTo) {
		return true
	}

	return false
}

// SetCreationDateTo gets a reference to the given string and assigns it to the CreationDateTo field.
func (o *GeneratePricesReportRequest) SetCreationDateTo(v string) {
	o.CreationDateTo = &v
}

func (o GeneratePricesReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GeneratePricesReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BusinessId) {
		toSerialize["businessId"] = o.BusinessId
	}
	if !IsNil(o.CampaignId) {
		toSerialize["campaignId"] = o.CampaignId
	}
	if o.CategoryIds != nil {
		toSerialize["categoryIds"] = o.CategoryIds
	}
	if !IsNil(o.CreationDateFrom) {
		toSerialize["creationDateFrom"] = o.CreationDateFrom
	}
	if !IsNil(o.CreationDateTo) {
		toSerialize["creationDateTo"] = o.CreationDateTo
	}
	return toSerialize, nil
}

type NullableGeneratePricesReportRequest struct {
	value *GeneratePricesReportRequest
	isSet bool
}

func (v NullableGeneratePricesReportRequest) Get() *GeneratePricesReportRequest {
	return v.value
}

func (v *NullableGeneratePricesReportRequest) Set(val *GeneratePricesReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGeneratePricesReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGeneratePricesReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeneratePricesReportRequest(val *GeneratePricesReportRequest) *NullableGeneratePricesReportRequest {
	return &NullableGeneratePricesReportRequest{value: val, isSet: true}
}

func (v NullableGeneratePricesReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeneratePricesReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


