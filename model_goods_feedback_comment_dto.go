/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GoodsFeedbackCommentDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GoodsFeedbackCommentDTO{}

// GoodsFeedbackCommentDTO Комментарий к отзыву.
type GoodsFeedbackCommentDTO struct {
	// Идентификатор комментария к отзыву. 
	Id int64 `json:"id"`
	// Текст комментария.
	Text string `json:"text"`
	// Может ли продавец изменять комментарий или удалять его.
	CanModify *bool `json:"canModify,omitempty"`
	// Идентификатор комментария к отзыву. 
	ParentId *int64 `json:"parentId,omitempty"`
	Author GoodsFeedbackCommentAuthorDTO `json:"author"`
	Status GoodsFeedbackCommentStatusType `json:"status"`
	// Идентификатор отзыва. 
	FeedbackId int64 `json:"feedbackId"`
}

type _GoodsFeedbackCommentDTO GoodsFeedbackCommentDTO

// NewGoodsFeedbackCommentDTO instantiates a new GoodsFeedbackCommentDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGoodsFeedbackCommentDTO(id int64, text string, author GoodsFeedbackCommentAuthorDTO, status GoodsFeedbackCommentStatusType, feedbackId int64) *GoodsFeedbackCommentDTO {
	this := GoodsFeedbackCommentDTO{}
	this.Id = id
	this.Text = text
	this.Author = author
	this.Status = status
	this.FeedbackId = feedbackId
	return &this
}

// NewGoodsFeedbackCommentDTOWithDefaults instantiates a new GoodsFeedbackCommentDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGoodsFeedbackCommentDTOWithDefaults() *GoodsFeedbackCommentDTO {
	this := GoodsFeedbackCommentDTO{}
	return &this
}

// GetId returns the Id field value
func (o *GoodsFeedbackCommentDTO) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackCommentDTO) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *GoodsFeedbackCommentDTO) SetId(v int64) {
	o.Id = v
}

// GetText returns the Text field value
func (o *GoodsFeedbackCommentDTO) GetText() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Text
}

// GetTextOk returns a tuple with the Text field value
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackCommentDTO) GetTextOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Text, true
}

// SetText sets field value
func (o *GoodsFeedbackCommentDTO) SetText(v string) {
	o.Text = v
}

// GetCanModify returns the CanModify field value if set, zero value otherwise.
func (o *GoodsFeedbackCommentDTO) GetCanModify() bool {
	if o == nil || IsNil(o.CanModify) {
		var ret bool
		return ret
	}
	return *o.CanModify
}

// GetCanModifyOk returns a tuple with the CanModify field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackCommentDTO) GetCanModifyOk() (*bool, bool) {
	if o == nil || IsNil(o.CanModify) {
		return nil, false
	}
	return o.CanModify, true
}

// HasCanModify returns a boolean if a field has been set.
func (o *GoodsFeedbackCommentDTO) HasCanModify() bool {
	if o != nil && !IsNil(o.CanModify) {
		return true
	}

	return false
}

// SetCanModify gets a reference to the given bool and assigns it to the CanModify field.
func (o *GoodsFeedbackCommentDTO) SetCanModify(v bool) {
	o.CanModify = &v
}

// GetParentId returns the ParentId field value if set, zero value otherwise.
func (o *GoodsFeedbackCommentDTO) GetParentId() int64 {
	if o == nil || IsNil(o.ParentId) {
		var ret int64
		return ret
	}
	return *o.ParentId
}

// GetParentIdOk returns a tuple with the ParentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackCommentDTO) GetParentIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ParentId) {
		return nil, false
	}
	return o.ParentId, true
}

// HasParentId returns a boolean if a field has been set.
func (o *GoodsFeedbackCommentDTO) HasParentId() bool {
	if o != nil && !IsNil(o.ParentId) {
		return true
	}

	return false
}

// SetParentId gets a reference to the given int64 and assigns it to the ParentId field.
func (o *GoodsFeedbackCommentDTO) SetParentId(v int64) {
	o.ParentId = &v
}

// GetAuthor returns the Author field value
func (o *GoodsFeedbackCommentDTO) GetAuthor() GoodsFeedbackCommentAuthorDTO {
	if o == nil {
		var ret GoodsFeedbackCommentAuthorDTO
		return ret
	}

	return o.Author
}

// GetAuthorOk returns a tuple with the Author field value
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackCommentDTO) GetAuthorOk() (*GoodsFeedbackCommentAuthorDTO, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Author, true
}

// SetAuthor sets field value
func (o *GoodsFeedbackCommentDTO) SetAuthor(v GoodsFeedbackCommentAuthorDTO) {
	o.Author = v
}

// GetStatus returns the Status field value
func (o *GoodsFeedbackCommentDTO) GetStatus() GoodsFeedbackCommentStatusType {
	if o == nil {
		var ret GoodsFeedbackCommentStatusType
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackCommentDTO) GetStatusOk() (*GoodsFeedbackCommentStatusType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *GoodsFeedbackCommentDTO) SetStatus(v GoodsFeedbackCommentStatusType) {
	o.Status = v
}

// GetFeedbackId returns the FeedbackId field value
func (o *GoodsFeedbackCommentDTO) GetFeedbackId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FeedbackId
}

// GetFeedbackIdOk returns a tuple with the FeedbackId field value
// and a boolean to check if the value has been set.
func (o *GoodsFeedbackCommentDTO) GetFeedbackIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FeedbackId, true
}

// SetFeedbackId sets field value
func (o *GoodsFeedbackCommentDTO) SetFeedbackId(v int64) {
	o.FeedbackId = v
}

func (o GoodsFeedbackCommentDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GoodsFeedbackCommentDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["text"] = o.Text
	if !IsNil(o.CanModify) {
		toSerialize["canModify"] = o.CanModify
	}
	if !IsNil(o.ParentId) {
		toSerialize["parentId"] = o.ParentId
	}
	toSerialize["author"] = o.Author
	toSerialize["status"] = o.Status
	toSerialize["feedbackId"] = o.FeedbackId
	return toSerialize, nil
}

func (o *GoodsFeedbackCommentDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"text",
		"author",
		"status",
		"feedbackId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGoodsFeedbackCommentDTO := _GoodsFeedbackCommentDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGoodsFeedbackCommentDTO)

	if err != nil {
		return err
	}

	*o = GoodsFeedbackCommentDTO(varGoodsFeedbackCommentDTO)

	return err
}

type NullableGoodsFeedbackCommentDTO struct {
	value *GoodsFeedbackCommentDTO
	isSet bool
}

func (v NullableGoodsFeedbackCommentDTO) Get() *GoodsFeedbackCommentDTO {
	return v.value
}

func (v *NullableGoodsFeedbackCommentDTO) Set(val *GoodsFeedbackCommentDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGoodsFeedbackCommentDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGoodsFeedbackCommentDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGoodsFeedbackCommentDTO(val *GoodsFeedbackCommentDTO) *NullableGoodsFeedbackCommentDTO {
	return &NullableGoodsFeedbackCommentDTO{value: val, isSet: true}
}

func (v NullableGoodsFeedbackCommentDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGoodsFeedbackCommentDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


