/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OutletWorkingScheduleDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OutletWorkingScheduleDTO{}

// OutletWorkingScheduleDTO Список режимов работы точки продаж. 
type OutletWorkingScheduleDTO struct {
	// Признак, работает ли точка продаж в дни государственных праздников.  Возможные значения:  * `false` — точка продаж не работает в дни государственных праздников. * `true` — точка продаж работает в дни государственных праздников. 
	WorkInHoliday *bool `json:"workInHoliday,omitempty"`
	// Список расписаний работы точки продаж. 
	ScheduleItems []OutletWorkingScheduleItemDTO `json:"scheduleItems"`
}

type _OutletWorkingScheduleDTO OutletWorkingScheduleDTO

// NewOutletWorkingScheduleDTO instantiates a new OutletWorkingScheduleDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOutletWorkingScheduleDTO(scheduleItems []OutletWorkingScheduleItemDTO) *OutletWorkingScheduleDTO {
	this := OutletWorkingScheduleDTO{}
	this.ScheduleItems = scheduleItems
	return &this
}

// NewOutletWorkingScheduleDTOWithDefaults instantiates a new OutletWorkingScheduleDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOutletWorkingScheduleDTOWithDefaults() *OutletWorkingScheduleDTO {
	this := OutletWorkingScheduleDTO{}
	return &this
}

// GetWorkInHoliday returns the WorkInHoliday field value if set, zero value otherwise.
func (o *OutletWorkingScheduleDTO) GetWorkInHoliday() bool {
	if o == nil || IsNil(o.WorkInHoliday) {
		var ret bool
		return ret
	}
	return *o.WorkInHoliday
}

// GetWorkInHolidayOk returns a tuple with the WorkInHoliday field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OutletWorkingScheduleDTO) GetWorkInHolidayOk() (*bool, bool) {
	if o == nil || IsNil(o.WorkInHoliday) {
		return nil, false
	}
	return o.WorkInHoliday, true
}

// HasWorkInHoliday returns a boolean if a field has been set.
func (o *OutletWorkingScheduleDTO) HasWorkInHoliday() bool {
	if o != nil && !IsNil(o.WorkInHoliday) {
		return true
	}

	return false
}

// SetWorkInHoliday gets a reference to the given bool and assigns it to the WorkInHoliday field.
func (o *OutletWorkingScheduleDTO) SetWorkInHoliday(v bool) {
	o.WorkInHoliday = &v
}

// GetScheduleItems returns the ScheduleItems field value
func (o *OutletWorkingScheduleDTO) GetScheduleItems() []OutletWorkingScheduleItemDTO {
	if o == nil {
		var ret []OutletWorkingScheduleItemDTO
		return ret
	}

	return o.ScheduleItems
}

// GetScheduleItemsOk returns a tuple with the ScheduleItems field value
// and a boolean to check if the value has been set.
func (o *OutletWorkingScheduleDTO) GetScheduleItemsOk() ([]OutletWorkingScheduleItemDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.ScheduleItems, true
}

// SetScheduleItems sets field value
func (o *OutletWorkingScheduleDTO) SetScheduleItems(v []OutletWorkingScheduleItemDTO) {
	o.ScheduleItems = v
}

func (o OutletWorkingScheduleDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OutletWorkingScheduleDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.WorkInHoliday) {
		toSerialize["workInHoliday"] = o.WorkInHoliday
	}
	toSerialize["scheduleItems"] = o.ScheduleItems
	return toSerialize, nil
}

func (o *OutletWorkingScheduleDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"scheduleItems",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOutletWorkingScheduleDTO := _OutletWorkingScheduleDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOutletWorkingScheduleDTO)

	if err != nil {
		return err
	}

	*o = OutletWorkingScheduleDTO(varOutletWorkingScheduleDTO)

	return err
}

type NullableOutletWorkingScheduleDTO struct {
	value *OutletWorkingScheduleDTO
	isSet bool
}

func (v NullableOutletWorkingScheduleDTO) Get() *OutletWorkingScheduleDTO {
	return v.value
}

func (v *NullableOutletWorkingScheduleDTO) Set(val *OutletWorkingScheduleDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOutletWorkingScheduleDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOutletWorkingScheduleDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOutletWorkingScheduleDTO(val *OutletWorkingScheduleDTO) *NullableOutletWorkingScheduleDTO {
	return &NullableOutletWorkingScheduleDTO{value: val, isSet: true}
}

func (v NullableOutletWorkingScheduleDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOutletWorkingScheduleDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


