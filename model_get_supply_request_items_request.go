/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GetSupplyRequestItemsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSupplyRequestItemsRequest{}

// GetSupplyRequestItemsRequest struct for GetSupplyRequestItemsRequest
type GetSupplyRequestItemsRequest struct {
	// Идентификатор заявки.  {% note warning \"Используется только в API\" %}  По нему не получится найти заявки в кабинете продавца на Маркете. Для этого используйте `marketplaceRequestId` или `warehouseRequestId`.  {% endnote %}
	RequestId int64 `json:"requestId"`
}

type _GetSupplyRequestItemsRequest GetSupplyRequestItemsRequest

// NewGetSupplyRequestItemsRequest instantiates a new GetSupplyRequestItemsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSupplyRequestItemsRequest(requestId int64) *GetSupplyRequestItemsRequest {
	this := GetSupplyRequestItemsRequest{}
	this.RequestId = requestId
	return &this
}

// NewGetSupplyRequestItemsRequestWithDefaults instantiates a new GetSupplyRequestItemsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSupplyRequestItemsRequestWithDefaults() *GetSupplyRequestItemsRequest {
	this := GetSupplyRequestItemsRequest{}
	return &this
}

// GetRequestId returns the RequestId field value
func (o *GetSupplyRequestItemsRequest) GetRequestId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RequestId
}

// GetRequestIdOk returns a tuple with the RequestId field value
// and a boolean to check if the value has been set.
func (o *GetSupplyRequestItemsRequest) GetRequestIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RequestId, true
}

// SetRequestId sets field value
func (o *GetSupplyRequestItemsRequest) SetRequestId(v int64) {
	o.RequestId = v
}

func (o GetSupplyRequestItemsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSupplyRequestItemsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requestId"] = o.RequestId
	return toSerialize, nil
}

func (o *GetSupplyRequestItemsRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"requestId",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSupplyRequestItemsRequest := _GetSupplyRequestItemsRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varGetSupplyRequestItemsRequest)

	if err != nil {
		return err
	}

	*o = GetSupplyRequestItemsRequest(varGetSupplyRequestItemsRequest)

	return err
}

type NullableGetSupplyRequestItemsRequest struct {
	value *GetSupplyRequestItemsRequest
	isSet bool
}

func (v NullableGetSupplyRequestItemsRequest) Get() *GetSupplyRequestItemsRequest {
	return v.value
}

func (v *NullableGetSupplyRequestItemsRequest) Set(val *GetSupplyRequestItemsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSupplyRequestItemsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSupplyRequestItemsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSupplyRequestItemsRequest(val *GetSupplyRequestItemsRequest) *NullableGetSupplyRequestItemsRequest {
	return &NullableGetSupplyRequestItemsRequest{value: val, isSet: true}
}

func (v NullableGetSupplyRequestItemsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSupplyRequestItemsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
