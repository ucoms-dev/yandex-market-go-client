/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOfferRecommendationsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOfferRecommendationsRequest{}

// GetOfferRecommendationsRequest struct for GetOfferRecommendationsRequest
type GetOfferRecommendationsRequest struct {
	// Идентификаторы товаров, информация о которых нужна. ⚠️ Не используйте это поле одновременно с остальными фильтрами. Если вы хотите воспользоваться фильтрами, оставьте поле пустым.
	OfferIds []string `json:"offerIds,omitempty"`
	CofinancePriceFilter *FieldStateType `json:"cofinancePriceFilter,omitempty"`
	CompetitivenessFilter *PriceCompetitivenessType `json:"competitivenessFilter,omitempty"`
}

// NewGetOfferRecommendationsRequest instantiates a new GetOfferRecommendationsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOfferRecommendationsRequest() *GetOfferRecommendationsRequest {
	this := GetOfferRecommendationsRequest{}
	return &this
}

// NewGetOfferRecommendationsRequestWithDefaults instantiates a new GetOfferRecommendationsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOfferRecommendationsRequestWithDefaults() *GetOfferRecommendationsRequest {
	this := GetOfferRecommendationsRequest{}
	return &this
}

// GetOfferIds returns the OfferIds field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOfferRecommendationsRequest) GetOfferIds() []string {
	if o == nil {
		var ret []string
		return ret
	}
	return o.OfferIds
}

// GetOfferIdsOk returns a tuple with the OfferIds field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOfferRecommendationsRequest) GetOfferIdsOk() ([]string, bool) {
	if o == nil || IsNil(o.OfferIds) {
		return nil, false
	}
	return o.OfferIds, true
}

// HasOfferIds returns a boolean if a field has been set.
func (o *GetOfferRecommendationsRequest) HasOfferIds() bool {
	if o != nil && !IsNil(o.OfferIds) {
		return true
	}

	return false
}

// SetOfferIds gets a reference to the given []string and assigns it to the OfferIds field.
func (o *GetOfferRecommendationsRequest) SetOfferIds(v []string) {
	o.OfferIds = v
}

// GetCofinancePriceFilter returns the CofinancePriceFilter field value if set, zero value otherwise.
func (o *GetOfferRecommendationsRequest) GetCofinancePriceFilter() FieldStateType {
	if o == nil || IsNil(o.CofinancePriceFilter) {
		var ret FieldStateType
		return ret
	}
	return *o.CofinancePriceFilter
}

// GetCofinancePriceFilterOk returns a tuple with the CofinancePriceFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOfferRecommendationsRequest) GetCofinancePriceFilterOk() (*FieldStateType, bool) {
	if o == nil || IsNil(o.CofinancePriceFilter) {
		return nil, false
	}
	return o.CofinancePriceFilter, true
}

// HasCofinancePriceFilter returns a boolean if a field has been set.
func (o *GetOfferRecommendationsRequest) HasCofinancePriceFilter() bool {
	if o != nil && !IsNil(o.CofinancePriceFilter) {
		return true
	}

	return false
}

// SetCofinancePriceFilter gets a reference to the given FieldStateType and assigns it to the CofinancePriceFilter field.
func (o *GetOfferRecommendationsRequest) SetCofinancePriceFilter(v FieldStateType) {
	o.CofinancePriceFilter = &v
}

// GetCompetitivenessFilter returns the CompetitivenessFilter field value if set, zero value otherwise.
func (o *GetOfferRecommendationsRequest) GetCompetitivenessFilter() PriceCompetitivenessType {
	if o == nil || IsNil(o.CompetitivenessFilter) {
		var ret PriceCompetitivenessType
		return ret
	}
	return *o.CompetitivenessFilter
}

// GetCompetitivenessFilterOk returns a tuple with the CompetitivenessFilter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOfferRecommendationsRequest) GetCompetitivenessFilterOk() (*PriceCompetitivenessType, bool) {
	if o == nil || IsNil(o.CompetitivenessFilter) {
		return nil, false
	}
	return o.CompetitivenessFilter, true
}

// HasCompetitivenessFilter returns a boolean if a field has been set.
func (o *GetOfferRecommendationsRequest) HasCompetitivenessFilter() bool {
	if o != nil && !IsNil(o.CompetitivenessFilter) {
		return true
	}

	return false
}

// SetCompetitivenessFilter gets a reference to the given PriceCompetitivenessType and assigns it to the CompetitivenessFilter field.
func (o *GetOfferRecommendationsRequest) SetCompetitivenessFilter(v PriceCompetitivenessType) {
	o.CompetitivenessFilter = &v
}

func (o GetOfferRecommendationsRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOfferRecommendationsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.OfferIds != nil {
		toSerialize["offerIds"] = o.OfferIds
	}
	if !IsNil(o.CofinancePriceFilter) {
		toSerialize["cofinancePriceFilter"] = o.CofinancePriceFilter
	}
	if !IsNil(o.CompetitivenessFilter) {
		toSerialize["competitivenessFilter"] = o.CompetitivenessFilter
	}
	return toSerialize, nil
}

type NullableGetOfferRecommendationsRequest struct {
	value *GetOfferRecommendationsRequest
	isSet bool
}

func (v NullableGetOfferRecommendationsRequest) Get() *GetOfferRecommendationsRequest {
	return v.value
}

func (v *NullableGetOfferRecommendationsRequest) Set(val *GetOfferRecommendationsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOfferRecommendationsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOfferRecommendationsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOfferRecommendationsRequest(val *GetOfferRecommendationsRequest) *NullableGetOfferRecommendationsRequest {
	return &NullableGetOfferRecommendationsRequest{value: val, isSet: true}
}

func (v NullableGetOfferRecommendationsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOfferRecommendationsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


