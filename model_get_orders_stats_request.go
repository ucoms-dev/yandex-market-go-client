/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetOrdersStatsRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetOrdersStatsRequest{}

// GetOrdersStatsRequest Запрос информации по заказам.
type GetOrdersStatsRequest struct {
	// Начальная дата, когда заказ был сформирован.  Формат даты: `ГГГГ‑ММ‑ДД`.  Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
	DateFrom *string `json:"dateFrom,omitempty"`
	// Конечная дата, когда заказ был сформирован.  Формат даты: `ГГГГ‑ММ‑ДД`.  Нельзя использовать вместе с параметрами `updateFrom` и `updateTo`.
	DateTo *string `json:"dateTo,omitempty"`
	// Начальная дата периода, за который были изменения в заказе (например, статуса или информации о платежах).  Формат даты: `ГГГГ‑ММ‑ДД`.  Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
	UpdateFrom *string `json:"updateFrom,omitempty"`
	// Конечная дата периода, за который были изменения в заказе (например, статуса или информации о платежах).  Формат даты: `ГГГГ‑ММ‑ДД`.  Нельзя использовать вместе с параметрами `dateFrom` и `dateTo`.
	UpdateTo *string `json:"updateTo,omitempty"`
	// Список идентификаторов заказов.
	Orders []int64 `json:"orders,omitempty"`
	// Список статусов заказов.
	Statuses []OrderStatsStatusType `json:"statuses,omitempty"`
	// Нужно ли вернуть только те заказы, в составе которых есть хотя бы один товар с кодом идентификации в системе [«Честный ЗНАК»](https://честныйзнак.рф/) или [«ASL BELGISI»](https://aslbelgisi.uz) (для продавцов Market Yandex Go):  * `true` — да. * `false` — нет. Такие коды присваиваются товарам, которые подлежат маркировке и относятся к определенным категориям.
	HasCis *bool `json:"hasCis,omitempty"`
}

// NewGetOrdersStatsRequest instantiates a new GetOrdersStatsRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetOrdersStatsRequest() *GetOrdersStatsRequest {
	this := GetOrdersStatsRequest{}
	return &this
}

// NewGetOrdersStatsRequestWithDefaults instantiates a new GetOrdersStatsRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetOrdersStatsRequestWithDefaults() *GetOrdersStatsRequest {
	this := GetOrdersStatsRequest{}
	return &this
}

// GetDateFrom returns the DateFrom field value if set, zero value otherwise.
func (o *GetOrdersStatsRequest) GetDateFrom() string {
	if o == nil || IsNil(o.DateFrom) {
		var ret string
		return ret
	}
	return *o.DateFrom
}

// GetDateFromOk returns a tuple with the DateFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersStatsRequest) GetDateFromOk() (*string, bool) {
	if o == nil || IsNil(o.DateFrom) {
		return nil, false
	}
	return o.DateFrom, true
}

// HasDateFrom returns a boolean if a field has been set.
func (o *GetOrdersStatsRequest) HasDateFrom() bool {
	if o != nil && !IsNil(o.DateFrom) {
		return true
	}

	return false
}

// SetDateFrom gets a reference to the given string and assigns it to the DateFrom field.
func (o *GetOrdersStatsRequest) SetDateFrom(v string) {
	o.DateFrom = &v
}

// GetDateTo returns the DateTo field value if set, zero value otherwise.
func (o *GetOrdersStatsRequest) GetDateTo() string {
	if o == nil || IsNil(o.DateTo) {
		var ret string
		return ret
	}
	return *o.DateTo
}

// GetDateToOk returns a tuple with the DateTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersStatsRequest) GetDateToOk() (*string, bool) {
	if o == nil || IsNil(o.DateTo) {
		return nil, false
	}
	return o.DateTo, true
}

// HasDateTo returns a boolean if a field has been set.
func (o *GetOrdersStatsRequest) HasDateTo() bool {
	if o != nil && !IsNil(o.DateTo) {
		return true
	}

	return false
}

// SetDateTo gets a reference to the given string and assigns it to the DateTo field.
func (o *GetOrdersStatsRequest) SetDateTo(v string) {
	o.DateTo = &v
}

// GetUpdateFrom returns the UpdateFrom field value if set, zero value otherwise.
func (o *GetOrdersStatsRequest) GetUpdateFrom() string {
	if o == nil || IsNil(o.UpdateFrom) {
		var ret string
		return ret
	}
	return *o.UpdateFrom
}

// GetUpdateFromOk returns a tuple with the UpdateFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersStatsRequest) GetUpdateFromOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateFrom) {
		return nil, false
	}
	return o.UpdateFrom, true
}

// HasUpdateFrom returns a boolean if a field has been set.
func (o *GetOrdersStatsRequest) HasUpdateFrom() bool {
	if o != nil && !IsNil(o.UpdateFrom) {
		return true
	}

	return false
}

// SetUpdateFrom gets a reference to the given string and assigns it to the UpdateFrom field.
func (o *GetOrdersStatsRequest) SetUpdateFrom(v string) {
	o.UpdateFrom = &v
}

// GetUpdateTo returns the UpdateTo field value if set, zero value otherwise.
func (o *GetOrdersStatsRequest) GetUpdateTo() string {
	if o == nil || IsNil(o.UpdateTo) {
		var ret string
		return ret
	}
	return *o.UpdateTo
}

// GetUpdateToOk returns a tuple with the UpdateTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersStatsRequest) GetUpdateToOk() (*string, bool) {
	if o == nil || IsNil(o.UpdateTo) {
		return nil, false
	}
	return o.UpdateTo, true
}

// HasUpdateTo returns a boolean if a field has been set.
func (o *GetOrdersStatsRequest) HasUpdateTo() bool {
	if o != nil && !IsNil(o.UpdateTo) {
		return true
	}

	return false
}

// SetUpdateTo gets a reference to the given string and assigns it to the UpdateTo field.
func (o *GetOrdersStatsRequest) SetUpdateTo(v string) {
	o.UpdateTo = &v
}

// GetOrders returns the Orders field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrdersStatsRequest) GetOrders() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}
	return o.Orders
}

// GetOrdersOk returns a tuple with the Orders field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrdersStatsRequest) GetOrdersOk() ([]int64, bool) {
	if o == nil || IsNil(o.Orders) {
		return nil, false
	}
	return o.Orders, true
}

// HasOrders returns a boolean if a field has been set.
func (o *GetOrdersStatsRequest) HasOrders() bool {
	if o != nil && !IsNil(o.Orders) {
		return true
	}

	return false
}

// SetOrders gets a reference to the given []int64 and assigns it to the Orders field.
func (o *GetOrdersStatsRequest) SetOrders(v []int64) {
	o.Orders = v
}

// GetStatuses returns the Statuses field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *GetOrdersStatsRequest) GetStatuses() []OrderStatsStatusType {
	if o == nil {
		var ret []OrderStatsStatusType
		return ret
	}
	return o.Statuses
}

// GetStatusesOk returns a tuple with the Statuses field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *GetOrdersStatsRequest) GetStatusesOk() ([]OrderStatsStatusType, bool) {
	if o == nil || IsNil(o.Statuses) {
		return nil, false
	}
	return o.Statuses, true
}

// HasStatuses returns a boolean if a field has been set.
func (o *GetOrdersStatsRequest) HasStatuses() bool {
	if o != nil && !IsNil(o.Statuses) {
		return true
	}

	return false
}

// SetStatuses gets a reference to the given []OrderStatsStatusType and assigns it to the Statuses field.
func (o *GetOrdersStatsRequest) SetStatuses(v []OrderStatsStatusType) {
	o.Statuses = v
}

// GetHasCis returns the HasCis field value if set, zero value otherwise.
func (o *GetOrdersStatsRequest) GetHasCis() bool {
	if o == nil || IsNil(o.HasCis) {
		var ret bool
		return ret
	}
	return *o.HasCis
}

// GetHasCisOk returns a tuple with the HasCis field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetOrdersStatsRequest) GetHasCisOk() (*bool, bool) {
	if o == nil || IsNil(o.HasCis) {
		return nil, false
	}
	return o.HasCis, true
}

// HasHasCis returns a boolean if a field has been set.
func (o *GetOrdersStatsRequest) HasHasCis() bool {
	if o != nil && !IsNil(o.HasCis) {
		return true
	}

	return false
}

// SetHasCis gets a reference to the given bool and assigns it to the HasCis field.
func (o *GetOrdersStatsRequest) SetHasCis(v bool) {
	o.HasCis = &v
}

func (o GetOrdersStatsRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetOrdersStatsRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DateFrom) {
		toSerialize["dateFrom"] = o.DateFrom
	}
	if !IsNil(o.DateTo) {
		toSerialize["dateTo"] = o.DateTo
	}
	if !IsNil(o.UpdateFrom) {
		toSerialize["updateFrom"] = o.UpdateFrom
	}
	if !IsNil(o.UpdateTo) {
		toSerialize["updateTo"] = o.UpdateTo
	}
	if o.Orders != nil {
		toSerialize["orders"] = o.Orders
	}
	if o.Statuses != nil {
		toSerialize["statuses"] = o.Statuses
	}
	if !IsNil(o.HasCis) {
		toSerialize["hasCis"] = o.HasCis
	}
	return toSerialize, nil
}

type NullableGetOrdersStatsRequest struct {
	value *GetOrdersStatsRequest
	isSet bool
}

func (v NullableGetOrdersStatsRequest) Get() *GetOrdersStatsRequest {
	return v.value
}

func (v *NullableGetOrdersStatsRequest) Set(val *GetOrdersStatsRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetOrdersStatsRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetOrdersStatsRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetOrdersStatsRequest(val *GetOrdersStatsRequest) *NullableGetOrdersStatsRequest {
	return &NullableGetOrdersStatsRequest{value: val, isSet: true}
}

func (v NullableGetOrdersStatsRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetOrdersStatsRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
