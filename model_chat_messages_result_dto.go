/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ChatMessagesResultDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatMessagesResultDTO{}

// ChatMessagesResultDTO Информация о сообщениях.
type ChatMessagesResultDTO struct {
	// Идентификатор заказа.
	OrderId int64 `json:"orderId"`
	// Информация о сообщениях.
	Messages []ChatMessageDTO `json:"messages"`
	Paging *ForwardScrollingPagerDTO `json:"paging,omitempty"`
}

type _ChatMessagesResultDTO ChatMessagesResultDTO

// NewChatMessagesResultDTO instantiates a new ChatMessagesResultDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatMessagesResultDTO(orderId int64, messages []ChatMessageDTO) *ChatMessagesResultDTO {
	this := ChatMessagesResultDTO{}
	this.OrderId = orderId
	this.Messages = messages
	return &this
}

// NewChatMessagesResultDTOWithDefaults instantiates a new ChatMessagesResultDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatMessagesResultDTOWithDefaults() *ChatMessagesResultDTO {
	this := ChatMessagesResultDTO{}
	return &this
}

// GetOrderId returns the OrderId field value
func (o *ChatMessagesResultDTO) GetOrderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *ChatMessagesResultDTO) GetOrderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *ChatMessagesResultDTO) SetOrderId(v int64) {
	o.OrderId = v
}

// GetMessages returns the Messages field value
func (o *ChatMessagesResultDTO) GetMessages() []ChatMessageDTO {
	if o == nil {
		var ret []ChatMessageDTO
		return ret
	}

	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value
// and a boolean to check if the value has been set.
func (o *ChatMessagesResultDTO) GetMessagesOk() ([]ChatMessageDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Messages, true
}

// SetMessages sets field value
func (o *ChatMessagesResultDTO) SetMessages(v []ChatMessageDTO) {
	o.Messages = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *ChatMessagesResultDTO) GetPaging() ForwardScrollingPagerDTO {
	if o == nil || IsNil(o.Paging) {
		var ret ForwardScrollingPagerDTO
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatMessagesResultDTO) GetPagingOk() (*ForwardScrollingPagerDTO, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *ChatMessagesResultDTO) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ForwardScrollingPagerDTO and assigns it to the Paging field.
func (o *ChatMessagesResultDTO) SetPaging(v ForwardScrollingPagerDTO) {
	o.Paging = &v
}

func (o ChatMessagesResultDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatMessagesResultDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["orderId"] = o.OrderId
	toSerialize["messages"] = o.Messages
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

func (o *ChatMessagesResultDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"orderId",
		"messages",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varChatMessagesResultDTO := _ChatMessagesResultDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varChatMessagesResultDTO)

	if err != nil {
		return err
	}

	*o = ChatMessagesResultDTO(varChatMessagesResultDTO)

	return err
}

type NullableChatMessagesResultDTO struct {
	value *ChatMessagesResultDTO
	isSet bool
}

func (v NullableChatMessagesResultDTO) Get() *ChatMessagesResultDTO {
	return v.value
}

func (v *NullableChatMessagesResultDTO) Set(val *ChatMessagesResultDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableChatMessagesResultDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableChatMessagesResultDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatMessagesResultDTO(val *ChatMessagesResultDTO) *NullableChatMessagesResultDTO {
	return &NullableChatMessagesResultDTO{value: val, isSet: true}
}

func (v NullableChatMessagesResultDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatMessagesResultDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


