/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OrderBoxLayoutPartialCountDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderBoxLayoutPartialCountDTO{}

// OrderBoxLayoutPartialCountDTO Информация о части товара в коробке.
type OrderBoxLayoutPartialCountDTO struct {
	// Номер части, начиная с 1.
	Current int32 `json:"current"`
	// На сколько всего частей разделен товар.
	Total int32 `json:"total"`
}

type _OrderBoxLayoutPartialCountDTO OrderBoxLayoutPartialCountDTO

// NewOrderBoxLayoutPartialCountDTO instantiates a new OrderBoxLayoutPartialCountDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderBoxLayoutPartialCountDTO(current int32, total int32) *OrderBoxLayoutPartialCountDTO {
	this := OrderBoxLayoutPartialCountDTO{}
	this.Current = current
	this.Total = total
	return &this
}

// NewOrderBoxLayoutPartialCountDTOWithDefaults instantiates a new OrderBoxLayoutPartialCountDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderBoxLayoutPartialCountDTOWithDefaults() *OrderBoxLayoutPartialCountDTO {
	this := OrderBoxLayoutPartialCountDTO{}
	return &this
}

// GetCurrent returns the Current field value
func (o *OrderBoxLayoutPartialCountDTO) GetCurrent() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Current
}

// GetCurrentOk returns a tuple with the Current field value
// and a boolean to check if the value has been set.
func (o *OrderBoxLayoutPartialCountDTO) GetCurrentOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Current, true
}

// SetCurrent sets field value
func (o *OrderBoxLayoutPartialCountDTO) SetCurrent(v int32) {
	o.Current = v
}

// GetTotal returns the Total field value
func (o *OrderBoxLayoutPartialCountDTO) GetTotal() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Total
}

// GetTotalOk returns a tuple with the Total field value
// and a boolean to check if the value has been set.
func (o *OrderBoxLayoutPartialCountDTO) GetTotalOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Total, true
}

// SetTotal sets field value
func (o *OrderBoxLayoutPartialCountDTO) SetTotal(v int32) {
	o.Total = v
}

func (o OrderBoxLayoutPartialCountDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderBoxLayoutPartialCountDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["current"] = o.Current
	toSerialize["total"] = o.Total
	return toSerialize, nil
}

func (o *OrderBoxLayoutPartialCountDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"current",
		"total",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderBoxLayoutPartialCountDTO := _OrderBoxLayoutPartialCountDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOrderBoxLayoutPartialCountDTO)

	if err != nil {
		return err
	}

	*o = OrderBoxLayoutPartialCountDTO(varOrderBoxLayoutPartialCountDTO)

	return err
}

type NullableOrderBoxLayoutPartialCountDTO struct {
	value *OrderBoxLayoutPartialCountDTO
	isSet bool
}

func (v NullableOrderBoxLayoutPartialCountDTO) Get() *OrderBoxLayoutPartialCountDTO {
	return v.value
}

func (v *NullableOrderBoxLayoutPartialCountDTO) Set(val *OrderBoxLayoutPartialCountDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderBoxLayoutPartialCountDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderBoxLayoutPartialCountDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderBoxLayoutPartialCountDTO(val *OrderBoxLayoutPartialCountDTO) *NullableOrderBoxLayoutPartialCountDTO {
	return &NullableOrderBoxLayoutPartialCountDTO{value: val, isSet: true}
}

func (v NullableOrderBoxLayoutPartialCountDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderBoxLayoutPartialCountDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


