/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the OfferManualDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferManualDTO{}

// OfferManualDTO Инструкция по использованию товара. 
type OfferManualDTO struct {
	// Ссылка на инструкцию.
	Url string `json:"url"`
	// Название инструкции, которое будет отображаться на карточке товара. 
	Title *string `json:"title,omitempty"`
}

type _OfferManualDTO OfferManualDTO

// NewOfferManualDTO instantiates a new OfferManualDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferManualDTO(url string) *OfferManualDTO {
	this := OfferManualDTO{}
	this.Url = url
	return &this
}

// NewOfferManualDTOWithDefaults instantiates a new OfferManualDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferManualDTOWithDefaults() *OfferManualDTO {
	this := OfferManualDTO{}
	return &this
}

// GetUrl returns the Url field value
func (o *OfferManualDTO) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
func (o *OfferManualDTO) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
func (o *OfferManualDTO) SetUrl(v string) {
	o.Url = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *OfferManualDTO) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferManualDTO) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *OfferManualDTO) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *OfferManualDTO) SetTitle(v string) {
	o.Title = &v
}

func (o OfferManualDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferManualDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["url"] = o.Url
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

func (o *OfferManualDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"url",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOfferManualDTO := _OfferManualDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varOfferManualDTO)

	if err != nil {
		return err
	}

	*o = OfferManualDTO(varOfferManualDTO)

	return err
}

type NullableOfferManualDTO struct {
	value *OfferManualDTO
	isSet bool
}

func (v NullableOfferManualDTO) Get() *OfferManualDTO {
	return v.value
}

func (v *NullableOfferManualDTO) Set(val *OfferManualDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferManualDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferManualDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferManualDTO(val *OfferManualDTO) *NullableOfferManualDTO {
	return &NullableOfferManualDTO{value: val, isSet: true}
}

func (v NullableOfferManualDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferManualDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


