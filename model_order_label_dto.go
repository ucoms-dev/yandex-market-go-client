/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the OrderLabelDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OrderLabelDTO{}

// OrderLabelDTO Данные для печати ярлыка.
type OrderLabelDTO struct {
	// Идентификатор заказа.
	OrderId int64 `json:"orderId"`
	// Количество коробок в заказе.
	PlacesNumber int32 `json:"placesNumber"`
	// URL файла с ярлыками‑наклейками на все коробки в заказе.  Соответствует URL, по которому выполняется запрос [GET campaigns/{campaignId}/orders/{orderId}/delivery/labels](../../reference/orders/generateOrderLabels.md).
	// Deprecated
	Url string `json:"url"`
	// Информация на ярлыке.
	ParcelBoxLabels []ParcelBoxLabelDTO `json:"parcelBoxLabels"`
}

type _OrderLabelDTO OrderLabelDTO

// NewOrderLabelDTO instantiates a new OrderLabelDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrderLabelDTO(orderId int64, placesNumber int32, url string, parcelBoxLabels []ParcelBoxLabelDTO) *OrderLabelDTO {
	this := OrderLabelDTO{}
	this.OrderId = orderId
	this.PlacesNumber = placesNumber
	this.Url = url
	this.ParcelBoxLabels = parcelBoxLabels
	return &this
}

// NewOrderLabelDTOWithDefaults instantiates a new OrderLabelDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrderLabelDTOWithDefaults() *OrderLabelDTO {
	this := OrderLabelDTO{}
	return &this
}

// GetOrderId returns the OrderId field value
func (o *OrderLabelDTO) GetOrderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OrderId
}

// GetOrderIdOk returns a tuple with the OrderId field value
// and a boolean to check if the value has been set.
func (o *OrderLabelDTO) GetOrderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OrderId, true
}

// SetOrderId sets field value
func (o *OrderLabelDTO) SetOrderId(v int64) {
	o.OrderId = v
}

// GetPlacesNumber returns the PlacesNumber field value
func (o *OrderLabelDTO) GetPlacesNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PlacesNumber
}

// GetPlacesNumberOk returns a tuple with the PlacesNumber field value
// and a boolean to check if the value has been set.
func (o *OrderLabelDTO) GetPlacesNumberOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlacesNumber, true
}

// SetPlacesNumber sets field value
func (o *OrderLabelDTO) SetPlacesNumber(v int32) {
	o.PlacesNumber = v
}

// GetUrl returns the Url field value
// Deprecated
func (o *OrderLabelDTO) GetUrl() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Url
}

// GetUrlOk returns a tuple with the Url field value
// and a boolean to check if the value has been set.
// Deprecated
func (o *OrderLabelDTO) GetUrlOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Url, true
}

// SetUrl sets field value
// Deprecated
func (o *OrderLabelDTO) SetUrl(v string) {
	o.Url = v
}

// GetParcelBoxLabels returns the ParcelBoxLabels field value
func (o *OrderLabelDTO) GetParcelBoxLabels() []ParcelBoxLabelDTO {
	if o == nil {
		var ret []ParcelBoxLabelDTO
		return ret
	}

	return o.ParcelBoxLabels
}

// GetParcelBoxLabelsOk returns a tuple with the ParcelBoxLabels field value
// and a boolean to check if the value has been set.
func (o *OrderLabelDTO) GetParcelBoxLabelsOk() ([]ParcelBoxLabelDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.ParcelBoxLabels, true
}

// SetParcelBoxLabels sets field value
func (o *OrderLabelDTO) SetParcelBoxLabels(v []ParcelBoxLabelDTO) {
	o.ParcelBoxLabels = v
}

func (o OrderLabelDTO) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OrderLabelDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["orderId"] = o.OrderId
	toSerialize["placesNumber"] = o.PlacesNumber
	toSerialize["url"] = o.Url
	toSerialize["parcelBoxLabels"] = o.ParcelBoxLabels
	return toSerialize, nil
}

func (o *OrderLabelDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"orderId",
		"placesNumber",
		"url",
		"parcelBoxLabels",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOrderLabelDTO := _OrderLabelDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varOrderLabelDTO)

	if err != nil {
		return err
	}

	*o = OrderLabelDTO(varOrderLabelDTO)

	return err
}

type NullableOrderLabelDTO struct {
	value *OrderLabelDTO
	isSet bool
}

func (v NullableOrderLabelDTO) Get() *OrderLabelDTO {
	return v.value
}

func (v *NullableOrderLabelDTO) Set(val *OrderLabelDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderLabelDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderLabelDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderLabelDTO(val *OrderLabelDTO) *NullableOrderLabelDTO {
	return &NullableOrderLabelDTO{value: val, isSet: true}
}

func (v NullableOrderLabelDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderLabelDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
