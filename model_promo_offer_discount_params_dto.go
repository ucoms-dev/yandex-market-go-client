/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the PromoOfferDiscountParamsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PromoOfferDiscountParamsDTO{}

// PromoOfferDiscountParamsDTO Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.
type PromoOfferDiscountParamsDTO struct {
	// Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Возвращается, только если товар участвует в акции. 
	Price *int64 `json:"price,omitempty"`
	// Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Возвращается, только если товар участвует в акции. 
	PromoPrice *int64 `json:"promoPrice,omitempty"`
	// Максимально возможная цена для участия в акции.  Указывается в рублях.  Возвращается для всех товаров. 
	MaxPromoPrice int64 `json:"maxPromoPrice"`
}

type _PromoOfferDiscountParamsDTO PromoOfferDiscountParamsDTO

// NewPromoOfferDiscountParamsDTO instantiates a new PromoOfferDiscountParamsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPromoOfferDiscountParamsDTO(maxPromoPrice int64) *PromoOfferDiscountParamsDTO {
	this := PromoOfferDiscountParamsDTO{}
	this.MaxPromoPrice = maxPromoPrice
	return &this
}

// NewPromoOfferDiscountParamsDTOWithDefaults instantiates a new PromoOfferDiscountParamsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPromoOfferDiscountParamsDTOWithDefaults() *PromoOfferDiscountParamsDTO {
	this := PromoOfferDiscountParamsDTO{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *PromoOfferDiscountParamsDTO) GetPrice() int64 {
	if o == nil || IsNil(o.Price) {
		var ret int64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoOfferDiscountParamsDTO) GetPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *PromoOfferDiscountParamsDTO) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int64 and assigns it to the Price field.
func (o *PromoOfferDiscountParamsDTO) SetPrice(v int64) {
	o.Price = &v
}

// GetPromoPrice returns the PromoPrice field value if set, zero value otherwise.
func (o *PromoOfferDiscountParamsDTO) GetPromoPrice() int64 {
	if o == nil || IsNil(o.PromoPrice) {
		var ret int64
		return ret
	}
	return *o.PromoPrice
}

// GetPromoPriceOk returns a tuple with the PromoPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PromoOfferDiscountParamsDTO) GetPromoPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.PromoPrice) {
		return nil, false
	}
	return o.PromoPrice, true
}

// HasPromoPrice returns a boolean if a field has been set.
func (o *PromoOfferDiscountParamsDTO) HasPromoPrice() bool {
	if o != nil && !IsNil(o.PromoPrice) {
		return true
	}

	return false
}

// SetPromoPrice gets a reference to the given int64 and assigns it to the PromoPrice field.
func (o *PromoOfferDiscountParamsDTO) SetPromoPrice(v int64) {
	o.PromoPrice = &v
}

// GetMaxPromoPrice returns the MaxPromoPrice field value
func (o *PromoOfferDiscountParamsDTO) GetMaxPromoPrice() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MaxPromoPrice
}

// GetMaxPromoPriceOk returns a tuple with the MaxPromoPrice field value
// and a boolean to check if the value has been set.
func (o *PromoOfferDiscountParamsDTO) GetMaxPromoPriceOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MaxPromoPrice, true
}

// SetMaxPromoPrice sets field value
func (o *PromoOfferDiscountParamsDTO) SetMaxPromoPrice(v int64) {
	o.MaxPromoPrice = v
}

func (o PromoOfferDiscountParamsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PromoOfferDiscountParamsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PromoPrice) {
		toSerialize["promoPrice"] = o.PromoPrice
	}
	toSerialize["maxPromoPrice"] = o.MaxPromoPrice
	return toSerialize, nil
}

func (o *PromoOfferDiscountParamsDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"maxPromoPrice",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varPromoOfferDiscountParamsDTO := _PromoOfferDiscountParamsDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varPromoOfferDiscountParamsDTO)

	if err != nil {
		return err
	}

	*o = PromoOfferDiscountParamsDTO(varPromoOfferDiscountParamsDTO)

	return err
}

type NullablePromoOfferDiscountParamsDTO struct {
	value *PromoOfferDiscountParamsDTO
	isSet bool
}

func (v NullablePromoOfferDiscountParamsDTO) Get() *PromoOfferDiscountParamsDTO {
	return v.value
}

func (v *NullablePromoOfferDiscountParamsDTO) Set(val *PromoOfferDiscountParamsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullablePromoOfferDiscountParamsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullablePromoOfferDiscountParamsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePromoOfferDiscountParamsDTO(val *PromoOfferDiscountParamsDTO) *NullablePromoOfferDiscountParamsDTO {
	return &NullablePromoOfferDiscountParamsDTO{value: val, isSet: true}
}

func (v NullablePromoOfferDiscountParamsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePromoOfferDiscountParamsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


