/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the GetChatHistoryRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetChatHistoryRequest{}

// GetChatHistoryRequest Историю какого чата нужно получить — и начиная с какого сообщения. 
type GetChatHistoryRequest struct {
	// Идентификатор сообщения, начиная с которого нужно получить все последующие сообщения.
	MessageIdFrom *int64 `json:"messageIdFrom,omitempty"`
}

// NewGetChatHistoryRequest instantiates a new GetChatHistoryRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetChatHistoryRequest() *GetChatHistoryRequest {
	this := GetChatHistoryRequest{}
	return &this
}

// NewGetChatHistoryRequestWithDefaults instantiates a new GetChatHistoryRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetChatHistoryRequestWithDefaults() *GetChatHistoryRequest {
	this := GetChatHistoryRequest{}
	return &this
}

// GetMessageIdFrom returns the MessageIdFrom field value if set, zero value otherwise.
func (o *GetChatHistoryRequest) GetMessageIdFrom() int64 {
	if o == nil || IsNil(o.MessageIdFrom) {
		var ret int64
		return ret
	}
	return *o.MessageIdFrom
}

// GetMessageIdFromOk returns a tuple with the MessageIdFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetChatHistoryRequest) GetMessageIdFromOk() (*int64, bool) {
	if o == nil || IsNil(o.MessageIdFrom) {
		return nil, false
	}
	return o.MessageIdFrom, true
}

// HasMessageIdFrom returns a boolean if a field has been set.
func (o *GetChatHistoryRequest) HasMessageIdFrom() bool {
	if o != nil && !IsNil(o.MessageIdFrom) {
		return true
	}

	return false
}

// SetMessageIdFrom gets a reference to the given int64 and assigns it to the MessageIdFrom field.
func (o *GetChatHistoryRequest) SetMessageIdFrom(v int64) {
	o.MessageIdFrom = &v
}

func (o GetChatHistoryRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetChatHistoryRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MessageIdFrom) {
		toSerialize["messageIdFrom"] = o.MessageIdFrom
	}
	return toSerialize, nil
}

type NullableGetChatHistoryRequest struct {
	value *GetChatHistoryRequest
	isSet bool
}

func (v NullableGetChatHistoryRequest) Get() *GetChatHistoryRequest {
	return v.value
}

func (v *NullableGetChatHistoryRequest) Set(val *GetChatHistoryRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGetChatHistoryRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGetChatHistoryRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetChatHistoryRequest(val *GetChatHistoryRequest) *NullableGetChatHistoryRequest {
	return &NullableGetChatHistoryRequest{value: val, isSet: true}
}

func (v NullableGetChatHistoryRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetChatHistoryRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


