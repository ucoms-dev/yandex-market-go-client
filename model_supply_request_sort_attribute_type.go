/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// SupplyRequestSortAttributeType По какому параметру сортировать заявки:  * `ID` — идентификатор заявки. * `REQUESTED_DATE` — дата поставки на склад хранения.      Если товары проходили через транзитный склад, сортирует по датам поставки на оба склада. * `UPDATED_AT` — время обновления заявки. * `STATUS` — статус заявки.
type SupplyRequestSortAttributeType string

// List of SupplyRequestSortAttributeType
const (
	SupplyRequestSortAttributeType_ID             SupplyRequestSortAttributeType = "ID"
	SupplyRequestSortAttributeType_REQUESTED_DATE SupplyRequestSortAttributeType = "REQUESTED_DATE"
	SupplyRequestSortAttributeType_UPDATED_AT     SupplyRequestSortAttributeType = "UPDATED_AT"
	SupplyRequestSortAttributeType_STATUS         SupplyRequestSortAttributeType = "STATUS"
)

// All allowed values of SupplyRequestSortAttributeType enum
var AllowedSupplyRequestSortAttributeTypeEnumValues = []SupplyRequestSortAttributeType{
	"ID",
	"REQUESTED_DATE",
	"UPDATED_AT",
	"STATUS",
}

func (v *SupplyRequestSortAttributeType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := SupplyRequestSortAttributeType(value)
	for _, existing := range AllowedSupplyRequestSortAttributeTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid SupplyRequestSortAttributeType", value)
}

// NewSupplyRequestSortAttributeTypeFromValue returns a pointer to a valid SupplyRequestSortAttributeType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewSupplyRequestSortAttributeTypeFromValue(v string) (*SupplyRequestSortAttributeType, error) {
	ev := SupplyRequestSortAttributeType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for SupplyRequestSortAttributeType: valid values are %v", v, AllowedSupplyRequestSortAttributeTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v SupplyRequestSortAttributeType) IsValid() bool {
	for _, existing := range AllowedSupplyRequestSortAttributeTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to SupplyRequestSortAttributeType value
func (v SupplyRequestSortAttributeType) Ptr() *SupplyRequestSortAttributeType {
	return &v
}

type NullableSupplyRequestSortAttributeType struct {
	value *SupplyRequestSortAttributeType
	isSet bool
}

func (v NullableSupplyRequestSortAttributeType) Get() *SupplyRequestSortAttributeType {
	return v.value
}

func (v *NullableSupplyRequestSortAttributeType) Set(val *SupplyRequestSortAttributeType) {
	v.value = val
	v.isSet = true
}

func (v NullableSupplyRequestSortAttributeType) IsSet() bool {
	return v.isSet
}

func (v *NullableSupplyRequestSortAttributeType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSupplyRequestSortAttributeType(val *SupplyRequestSortAttributeType) *NullableSupplyRequestSortAttributeType {
	return &NullableSupplyRequestSortAttributeType{value: val, isSet: true}
}

func (v NullableSupplyRequestSortAttributeType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSupplyRequestSortAttributeType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
