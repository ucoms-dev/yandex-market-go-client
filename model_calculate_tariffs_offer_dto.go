/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CalculateTariffsOfferDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CalculateTariffsOfferDTO{}

// CalculateTariffsOfferDTO Параметры товара, для которого нужно рассчитать стоимость услуг.
type CalculateTariffsOfferDTO struct {
	// Идентификатор категории товара на Маркете.  Для расчета стоимости услуг необходимо указать идентификатор листовой категории товара — той, которая не имеет дочерних категорий.  Чтобы узнать идентификатор категории, к которой относится товар, воспользуйтесь запросом [POST categories/tree](../../reference/categories/getCategoriesTree.md). 
	CategoryId int64 `json:"categoryId"`
	// Цена на товар в рублях.
	Price float32 `json:"price"`
	// Длина товара в сантиметрах.
	Length float32 `json:"length"`
	// Ширина товара в сантиметрах.
	Width float32 `json:"width"`
	// Высота товара в сантиметрах.
	Height float32 `json:"height"`
	// Вес товара в килограммах.
	Weight float32 `json:"weight"`
	// Квант продажи — количество единиц товара в одном товарном предложении.
	Quantity *int32 `json:"quantity,omitempty"`
}

type _CalculateTariffsOfferDTO CalculateTariffsOfferDTO

// NewCalculateTariffsOfferDTO instantiates a new CalculateTariffsOfferDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCalculateTariffsOfferDTO(categoryId int64, price float32, length float32, width float32, height float32, weight float32) *CalculateTariffsOfferDTO {
	this := CalculateTariffsOfferDTO{}
	this.CategoryId = categoryId
	this.Price = price
	this.Length = length
	this.Width = width
	this.Height = height
	this.Weight = weight
	var quantity int32 = 1
	this.Quantity = &quantity
	return &this
}

// NewCalculateTariffsOfferDTOWithDefaults instantiates a new CalculateTariffsOfferDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCalculateTariffsOfferDTOWithDefaults() *CalculateTariffsOfferDTO {
	this := CalculateTariffsOfferDTO{}
	var quantity int32 = 1
	this.Quantity = &quantity
	return &this
}

// GetCategoryId returns the CategoryId field value
func (o *CalculateTariffsOfferDTO) GetCategoryId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CategoryId
}

// GetCategoryIdOk returns a tuple with the CategoryId field value
// and a boolean to check if the value has been set.
func (o *CalculateTariffsOfferDTO) GetCategoryIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CategoryId, true
}

// SetCategoryId sets field value
func (o *CalculateTariffsOfferDTO) SetCategoryId(v int64) {
	o.CategoryId = v
}

// GetPrice returns the Price field value
func (o *CalculateTariffsOfferDTO) GetPrice() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Price
}

// GetPriceOk returns a tuple with the Price field value
// and a boolean to check if the value has been set.
func (o *CalculateTariffsOfferDTO) GetPriceOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Price, true
}

// SetPrice sets field value
func (o *CalculateTariffsOfferDTO) SetPrice(v float32) {
	o.Price = v
}

// GetLength returns the Length field value
func (o *CalculateTariffsOfferDTO) GetLength() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Length
}

// GetLengthOk returns a tuple with the Length field value
// and a boolean to check if the value has been set.
func (o *CalculateTariffsOfferDTO) GetLengthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Length, true
}

// SetLength sets field value
func (o *CalculateTariffsOfferDTO) SetLength(v float32) {
	o.Length = v
}

// GetWidth returns the Width field value
func (o *CalculateTariffsOfferDTO) GetWidth() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Width
}

// GetWidthOk returns a tuple with the Width field value
// and a boolean to check if the value has been set.
func (o *CalculateTariffsOfferDTO) GetWidthOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Width, true
}

// SetWidth sets field value
func (o *CalculateTariffsOfferDTO) SetWidth(v float32) {
	o.Width = v
}

// GetHeight returns the Height field value
func (o *CalculateTariffsOfferDTO) GetHeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Height
}

// GetHeightOk returns a tuple with the Height field value
// and a boolean to check if the value has been set.
func (o *CalculateTariffsOfferDTO) GetHeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Height, true
}

// SetHeight sets field value
func (o *CalculateTariffsOfferDTO) SetHeight(v float32) {
	o.Height = v
}

// GetWeight returns the Weight field value
func (o *CalculateTariffsOfferDTO) GetWeight() float32 {
	if o == nil {
		var ret float32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *CalculateTariffsOfferDTO) GetWeightOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *CalculateTariffsOfferDTO) SetWeight(v float32) {
	o.Weight = v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *CalculateTariffsOfferDTO) GetQuantity() int32 {
	if o == nil || IsNil(o.Quantity) {
		var ret int32
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CalculateTariffsOfferDTO) GetQuantityOk() (*int32, bool) {
	if o == nil || IsNil(o.Quantity) {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *CalculateTariffsOfferDTO) HasQuantity() bool {
	if o != nil && !IsNil(o.Quantity) {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given int32 and assigns it to the Quantity field.
func (o *CalculateTariffsOfferDTO) SetQuantity(v int32) {
	o.Quantity = &v
}

func (o CalculateTariffsOfferDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CalculateTariffsOfferDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["categoryId"] = o.CategoryId
	toSerialize["price"] = o.Price
	toSerialize["length"] = o.Length
	toSerialize["width"] = o.Width
	toSerialize["height"] = o.Height
	toSerialize["weight"] = o.Weight
	if !IsNil(o.Quantity) {
		toSerialize["quantity"] = o.Quantity
	}
	return toSerialize, nil
}

func (o *CalculateTariffsOfferDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"categoryId",
		"price",
		"length",
		"width",
		"height",
		"weight",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCalculateTariffsOfferDTO := _CalculateTariffsOfferDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCalculateTariffsOfferDTO)

	if err != nil {
		return err
	}

	*o = CalculateTariffsOfferDTO(varCalculateTariffsOfferDTO)

	return err
}

type NullableCalculateTariffsOfferDTO struct {
	value *CalculateTariffsOfferDTO
	isSet bool
}

func (v NullableCalculateTariffsOfferDTO) Get() *CalculateTariffsOfferDTO {
	return v.value
}

func (v *NullableCalculateTariffsOfferDTO) Set(val *CalculateTariffsOfferDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCalculateTariffsOfferDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCalculateTariffsOfferDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCalculateTariffsOfferDTO(val *CalculateTariffsOfferDTO) *NullableCalculateTariffsOfferDTO {
	return &NullableCalculateTariffsOfferDTO{value: val, isSet: true}
}

func (v NullableCalculateTariffsOfferDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCalculateTariffsOfferDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


