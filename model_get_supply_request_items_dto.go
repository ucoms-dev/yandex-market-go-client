/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the GetSupplyRequestItemsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetSupplyRequestItemsDTO{}

// GetSupplyRequestItemsDTO Информация о товарах в заявке.
type GetSupplyRequestItemsDTO struct {
	// Список товаров.
	Items []SupplyRequestItemDTO `json:"items"`
	Paging *ForwardScrollingPagerDTO `json:"paging,omitempty"`
}

type _GetSupplyRequestItemsDTO GetSupplyRequestItemsDTO

// NewGetSupplyRequestItemsDTO instantiates a new GetSupplyRequestItemsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetSupplyRequestItemsDTO(items []SupplyRequestItemDTO) *GetSupplyRequestItemsDTO {
	this := GetSupplyRequestItemsDTO{}
	this.Items = items
	return &this
}

// NewGetSupplyRequestItemsDTOWithDefaults instantiates a new GetSupplyRequestItemsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetSupplyRequestItemsDTOWithDefaults() *GetSupplyRequestItemsDTO {
	this := GetSupplyRequestItemsDTO{}
	return &this
}

// GetItems returns the Items field value
func (o *GetSupplyRequestItemsDTO) GetItems() []SupplyRequestItemDTO {
	if o == nil {
		var ret []SupplyRequestItemDTO
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *GetSupplyRequestItemsDTO) GetItemsOk() ([]SupplyRequestItemDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *GetSupplyRequestItemsDTO) SetItems(v []SupplyRequestItemDTO) {
	o.Items = v
}

// GetPaging returns the Paging field value if set, zero value otherwise.
func (o *GetSupplyRequestItemsDTO) GetPaging() ForwardScrollingPagerDTO {
	if o == nil || IsNil(o.Paging) {
		var ret ForwardScrollingPagerDTO
		return ret
	}
	return *o.Paging
}

// GetPagingOk returns a tuple with the Paging field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetSupplyRequestItemsDTO) GetPagingOk() (*ForwardScrollingPagerDTO, bool) {
	if o == nil || IsNil(o.Paging) {
		return nil, false
	}
	return o.Paging, true
}

// HasPaging returns a boolean if a field has been set.
func (o *GetSupplyRequestItemsDTO) HasPaging() bool {
	if o != nil && !IsNil(o.Paging) {
		return true
	}

	return false
}

// SetPaging gets a reference to the given ForwardScrollingPagerDTO and assigns it to the Paging field.
func (o *GetSupplyRequestItemsDTO) SetPaging(v ForwardScrollingPagerDTO) {
	o.Paging = &v
}

func (o GetSupplyRequestItemsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetSupplyRequestItemsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["items"] = o.Items
	if !IsNil(o.Paging) {
		toSerialize["paging"] = o.Paging
	}
	return toSerialize, nil
}

func (o *GetSupplyRequestItemsDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"items",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGetSupplyRequestItemsDTO := _GetSupplyRequestItemsDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varGetSupplyRequestItemsDTO)

	if err != nil {
		return err
	}

	*o = GetSupplyRequestItemsDTO(varGetSupplyRequestItemsDTO)

	return err
}

type NullableGetSupplyRequestItemsDTO struct {
	value *GetSupplyRequestItemsDTO
	isSet bool
}

func (v NullableGetSupplyRequestItemsDTO) Get() *GetSupplyRequestItemsDTO {
	return v.value
}

func (v *NullableGetSupplyRequestItemsDTO) Set(val *GetSupplyRequestItemsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableGetSupplyRequestItemsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableGetSupplyRequestItemsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetSupplyRequestItemsDTO(val *GetSupplyRequestItemsDTO) *NullableGetSupplyRequestItemsDTO {
	return &NullableGetSupplyRequestItemsDTO{value: val, isSet: true}
}

func (v NullableGetSupplyRequestItemsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetSupplyRequestItemsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


