/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// QualityRatingComponentType Составляющие индекса качества.  **Для модели DBS:** * `DBS_CANCELLATION_RATE` — доля отмененных товаров. * `DBS_LATE_DELIVERY_RATE` — доля заказов, доставленных после плановой даты.  **Для моделей FBS и Экспресс:** * `FBS_CANCELLATION_RATE` — доля отмененных товаров. * `FBS_LATE_SHIP_RATE` — доля не вовремя отгруженных заказов.  **Для модели FBY:** * `FBY_LATE_DELIVERY_RATE` — доля товаров, которые приехали на склад с опозданием. * `FBY_CANCELLATION_RATE` — доля отмененных или недоставленных товаров. * `FBY_DELIVERY_DIFF_RATE` — доля товаров, которые не прибыли вместе с поставкой или которые не приняли. * `FBY_LATE_EDITING_RATE` — доля товаров, которые поздно убрали из заявки. 
type QualityRatingComponentType string

// List of QualityRatingComponentType
const (
	DBS_CANCELLATION_RATE QualityRatingComponentType = "DBS_CANCELLATION_RATE"
	DBS_LATE_DELIVERY_RATE QualityRatingComponentType = "DBS_LATE_DELIVERY_RATE"
	FBS_CANCELLATION_RATE QualityRatingComponentType = "FBS_CANCELLATION_RATE"
	FBS_LATE_SHIP_RATE QualityRatingComponentType = "FBS_LATE_SHIP_RATE"
	FBY_LATE_DELIVERY_RATE QualityRatingComponentType = "FBY_LATE_DELIVERY_RATE"
	FBY_CANCELLATION_RATE QualityRatingComponentType = "FBY_CANCELLATION_RATE"
	FBY_DELIVERY_DIFF_RATE QualityRatingComponentType = "FBY_DELIVERY_DIFF_RATE"
	FBY_LATE_EDITING_RATE QualityRatingComponentType = "FBY_LATE_EDITING_RATE"
)

// All allowed values of QualityRatingComponentType enum
var AllowedQualityRatingComponentTypeEnumValues = []QualityRatingComponentType{
	"DBS_CANCELLATION_RATE",
	"DBS_LATE_DELIVERY_RATE",
	"FBS_CANCELLATION_RATE",
	"FBS_LATE_SHIP_RATE",
	"FBY_LATE_DELIVERY_RATE",
	"FBY_CANCELLATION_RATE",
	"FBY_DELIVERY_DIFF_RATE",
	"FBY_LATE_EDITING_RATE",
}

func (v *QualityRatingComponentType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := QualityRatingComponentType(value)
	for _, existing := range AllowedQualityRatingComponentTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid QualityRatingComponentType", value)
}

// NewQualityRatingComponentTypeFromValue returns a pointer to a valid QualityRatingComponentType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewQualityRatingComponentTypeFromValue(v string) (*QualityRatingComponentType, error) {
	ev := QualityRatingComponentType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for QualityRatingComponentType: valid values are %v", v, AllowedQualityRatingComponentTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v QualityRatingComponentType) IsValid() bool {
	for _, existing := range AllowedQualityRatingComponentTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to QualityRatingComponentType value
func (v QualityRatingComponentType) Ptr() *QualityRatingComponentType {
	return &v
}

type NullableQualityRatingComponentType struct {
	value *QualityRatingComponentType
	isSet bool
}

func (v NullableQualityRatingComponentType) Get() *QualityRatingComponentType {
	return v.value
}

func (v *NullableQualityRatingComponentType) Set(val *QualityRatingComponentType) {
	v.value = val
	v.isSet = true
}

func (v NullableQualityRatingComponentType) IsSet() bool {
	return v.isSet
}

func (v *NullableQualityRatingComponentType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQualityRatingComponentType(val *QualityRatingComponentType) *NullableQualityRatingComponentType {
	return &NullableQualityRatingComponentType{value: val, isSet: true}
}

func (v NullableQualityRatingComponentType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQualityRatingComponentType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

