/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdatePromoOffersResultDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePromoOffersResultDTO{}

// UpdatePromoOffersResultDTO Ошибки и предупреждения, которые появились при добавлении товаров в акцию.
type UpdatePromoOffersResultDTO struct {
	// Изменения, которые были отклонены.  Возвращается, только если есть отклоненные изменения. 
	RejectedOffers []RejectedPromoOfferUpdateDTO `json:"rejectedOffers,omitempty"`
	// Изменения, по которым есть предупреждения. Они информируют о возможных проблемах. Информация о товарах обновится.  Возвращается, только если есть предупреждения. 
	WarningOffers []WarningPromoOfferUpdateDTO `json:"warningOffers,omitempty"`
}

// NewUpdatePromoOffersResultDTO instantiates a new UpdatePromoOffersResultDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePromoOffersResultDTO() *UpdatePromoOffersResultDTO {
	this := UpdatePromoOffersResultDTO{}
	return &this
}

// NewUpdatePromoOffersResultDTOWithDefaults instantiates a new UpdatePromoOffersResultDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePromoOffersResultDTOWithDefaults() *UpdatePromoOffersResultDTO {
	this := UpdatePromoOffersResultDTO{}
	return &this
}

// GetRejectedOffers returns the RejectedOffers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePromoOffersResultDTO) GetRejectedOffers() []RejectedPromoOfferUpdateDTO {
	if o == nil {
		var ret []RejectedPromoOfferUpdateDTO
		return ret
	}
	return o.RejectedOffers
}

// GetRejectedOffersOk returns a tuple with the RejectedOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePromoOffersResultDTO) GetRejectedOffersOk() ([]RejectedPromoOfferUpdateDTO, bool) {
	if o == nil || IsNil(o.RejectedOffers) {
		return nil, false
	}
	return o.RejectedOffers, true
}

// HasRejectedOffers returns a boolean if a field has been set.
func (o *UpdatePromoOffersResultDTO) HasRejectedOffers() bool {
	if o != nil && !IsNil(o.RejectedOffers) {
		return true
	}

	return false
}

// SetRejectedOffers gets a reference to the given []RejectedPromoOfferUpdateDTO and assigns it to the RejectedOffers field.
func (o *UpdatePromoOffersResultDTO) SetRejectedOffers(v []RejectedPromoOfferUpdateDTO) {
	o.RejectedOffers = v
}

// GetWarningOffers returns the WarningOffers field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *UpdatePromoOffersResultDTO) GetWarningOffers() []WarningPromoOfferUpdateDTO {
	if o == nil {
		var ret []WarningPromoOfferUpdateDTO
		return ret
	}
	return o.WarningOffers
}

// GetWarningOffersOk returns a tuple with the WarningOffers field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *UpdatePromoOffersResultDTO) GetWarningOffersOk() ([]WarningPromoOfferUpdateDTO, bool) {
	if o == nil || IsNil(o.WarningOffers) {
		return nil, false
	}
	return o.WarningOffers, true
}

// HasWarningOffers returns a boolean if a field has been set.
func (o *UpdatePromoOffersResultDTO) HasWarningOffers() bool {
	if o != nil && !IsNil(o.WarningOffers) {
		return true
	}

	return false
}

// SetWarningOffers gets a reference to the given []WarningPromoOfferUpdateDTO and assigns it to the WarningOffers field.
func (o *UpdatePromoOffersResultDTO) SetWarningOffers(v []WarningPromoOfferUpdateDTO) {
	o.WarningOffers = v
}

func (o UpdatePromoOffersResultDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePromoOffersResultDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.RejectedOffers != nil {
		toSerialize["rejectedOffers"] = o.RejectedOffers
	}
	if o.WarningOffers != nil {
		toSerialize["warningOffers"] = o.WarningOffers
	}
	return toSerialize, nil
}

type NullableUpdatePromoOffersResultDTO struct {
	value *UpdatePromoOffersResultDTO
	isSet bool
}

func (v NullableUpdatePromoOffersResultDTO) Get() *UpdatePromoOffersResultDTO {
	return v.value
}

func (v *NullableUpdatePromoOffersResultDTO) Set(val *UpdatePromoOffersResultDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePromoOffersResultDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePromoOffersResultDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePromoOffersResultDTO(val *UpdatePromoOffersResultDTO) *NullableUpdatePromoOffersResultDTO {
	return &NullableUpdatePromoOffersResultDTO{value: val, isSet: true}
}

func (v NullableUpdatePromoOffersResultDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePromoOffersResultDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


