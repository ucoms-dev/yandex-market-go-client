/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"time"
)

// checks if the OfferPriceResponseDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OfferPriceResponseDTO{}

// OfferPriceResponseDTO Информация об установленной цене на товар.
type OfferPriceResponseDTO struct {
	// Идентификатор предложения из прайс-листа.
	Id *string `json:"id,omitempty"`
	Price *PriceDTO `json:"price,omitempty"`
	// SKU на Маркете.
	MarketSku *int64 `json:"marketSku,omitempty"`
	// Дата и время последнего обновления цены на товар.
	UpdatedAt *time.Time `json:"updatedAt,omitempty"`
}

// NewOfferPriceResponseDTO instantiates a new OfferPriceResponseDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOfferPriceResponseDTO() *OfferPriceResponseDTO {
	this := OfferPriceResponseDTO{}
	return &this
}

// NewOfferPriceResponseDTOWithDefaults instantiates a new OfferPriceResponseDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOfferPriceResponseDTOWithDefaults() *OfferPriceResponseDTO {
	this := OfferPriceResponseDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *OfferPriceResponseDTO) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferPriceResponseDTO) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *OfferPriceResponseDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *OfferPriceResponseDTO) SetId(v string) {
	o.Id = &v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *OfferPriceResponseDTO) GetPrice() PriceDTO {
	if o == nil || IsNil(o.Price) {
		var ret PriceDTO
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferPriceResponseDTO) GetPriceOk() (*PriceDTO, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *OfferPriceResponseDTO) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given PriceDTO and assigns it to the Price field.
func (o *OfferPriceResponseDTO) SetPrice(v PriceDTO) {
	o.Price = &v
}

// GetMarketSku returns the MarketSku field value if set, zero value otherwise.
func (o *OfferPriceResponseDTO) GetMarketSku() int64 {
	if o == nil || IsNil(o.MarketSku) {
		var ret int64
		return ret
	}
	return *o.MarketSku
}

// GetMarketSkuOk returns a tuple with the MarketSku field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferPriceResponseDTO) GetMarketSkuOk() (*int64, bool) {
	if o == nil || IsNil(o.MarketSku) {
		return nil, false
	}
	return o.MarketSku, true
}

// HasMarketSku returns a boolean if a field has been set.
func (o *OfferPriceResponseDTO) HasMarketSku() bool {
	if o != nil && !IsNil(o.MarketSku) {
		return true
	}

	return false
}

// SetMarketSku gets a reference to the given int64 and assigns it to the MarketSku field.
func (o *OfferPriceResponseDTO) SetMarketSku(v int64) {
	o.MarketSku = &v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *OfferPriceResponseDTO) GetUpdatedAt() time.Time {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret time.Time
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *OfferPriceResponseDTO) GetUpdatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *OfferPriceResponseDTO) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given time.Time and assigns it to the UpdatedAt field.
func (o *OfferPriceResponseDTO) SetUpdatedAt(v time.Time) {
	o.UpdatedAt = &v
}

func (o OfferPriceResponseDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OfferPriceResponseDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.MarketSku) {
		toSerialize["marketSku"] = o.MarketSku
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updatedAt"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableOfferPriceResponseDTO struct {
	value *OfferPriceResponseDTO
	isSet bool
}

func (v NullableOfferPriceResponseDTO) Get() *OfferPriceResponseDTO {
	return v.value
}

func (v *NullableOfferPriceResponseDTO) Set(val *OfferPriceResponseDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableOfferPriceResponseDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableOfferPriceResponseDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOfferPriceResponseDTO(val *OfferPriceResponseDTO) *NullableOfferPriceResponseDTO {
	return &NullableOfferPriceResponseDTO{value: val, isSet: true}
}

func (v NullableOfferPriceResponseDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOfferPriceResponseDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


