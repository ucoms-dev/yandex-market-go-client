/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"bytes"
	"encoding/json"
	"fmt"
)

// checks if the GenerateJewelryFiscalReportRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GenerateJewelryFiscalReportRequest{}

// GenerateJewelryFiscalReportRequest Данные, необходимые для генерации отчета.
type GenerateJewelryFiscalReportRequest struct {
	// Идентификатор кампании.  Его можно узнать с помощью запроса [GET campaigns](../../reference/campaigns/getCampaigns.md) или найти в кабинете продавца на Маркете — нажмите на название своего бизнеса и перейдите на страницу:    * **Модули и API** → блок **Передача данных Маркету**.   * **Лог запросов** → выпадающий список в блоке **Показывать логи**.  ⚠️ Не передавайте вместо него идентификатор магазина, который указан в кабинете продавца на Маркете рядом с названием магазина и в некоторых отчетах.
	CampaignId int64 `json:"campaignId"`
	// Начало периода, включительно.
	DateFrom string `json:"dateFrom"`
	// Конец периода, включительно.
	DateTo string `json:"dateTo"`
}

type _GenerateJewelryFiscalReportRequest GenerateJewelryFiscalReportRequest

// NewGenerateJewelryFiscalReportRequest instantiates a new GenerateJewelryFiscalReportRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGenerateJewelryFiscalReportRequest(campaignId int64, dateFrom string, dateTo string) *GenerateJewelryFiscalReportRequest {
	this := GenerateJewelryFiscalReportRequest{}
	this.CampaignId = campaignId
	this.DateFrom = dateFrom
	this.DateTo = dateTo
	return &this
}

// NewGenerateJewelryFiscalReportRequestWithDefaults instantiates a new GenerateJewelryFiscalReportRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGenerateJewelryFiscalReportRequestWithDefaults() *GenerateJewelryFiscalReportRequest {
	this := GenerateJewelryFiscalReportRequest{}
	return &this
}

// GetCampaignId returns the CampaignId field value
func (o *GenerateJewelryFiscalReportRequest) GetCampaignId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CampaignId
}

// GetCampaignIdOk returns a tuple with the CampaignId field value
// and a boolean to check if the value has been set.
func (o *GenerateJewelryFiscalReportRequest) GetCampaignIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CampaignId, true
}

// SetCampaignId sets field value
func (o *GenerateJewelryFiscalReportRequest) SetCampaignId(v int64) {
	o.CampaignId = v
}

// GetDateFrom returns the DateFrom field value
func (o *GenerateJewelryFiscalReportRequest) GetDateFrom() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateFrom
}

// GetDateFromOk returns a tuple with the DateFrom field value
// and a boolean to check if the value has been set.
func (o *GenerateJewelryFiscalReportRequest) GetDateFromOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateFrom, true
}

// SetDateFrom sets field value
func (o *GenerateJewelryFiscalReportRequest) SetDateFrom(v string) {
	o.DateFrom = v
}

// GetDateTo returns the DateTo field value
func (o *GenerateJewelryFiscalReportRequest) GetDateTo() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DateTo
}

// GetDateToOk returns a tuple with the DateTo field value
// and a boolean to check if the value has been set.
func (o *GenerateJewelryFiscalReportRequest) GetDateToOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateTo, true
}

// SetDateTo sets field value
func (o *GenerateJewelryFiscalReportRequest) SetDateTo(v string) {
	o.DateTo = v
}

func (o GenerateJewelryFiscalReportRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GenerateJewelryFiscalReportRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["campaignId"] = o.CampaignId
	toSerialize["dateFrom"] = o.DateFrom
	toSerialize["dateTo"] = o.DateTo
	return toSerialize, nil
}

func (o *GenerateJewelryFiscalReportRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"campaignId",
		"dateFrom",
		"dateTo",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err
	}

	for _, requiredProperty := range requiredProperties {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varGenerateJewelryFiscalReportRequest := _GenerateJewelryFiscalReportRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	err = decoder.Decode(&varGenerateJewelryFiscalReportRequest)

	if err != nil {
		return err
	}

	*o = GenerateJewelryFiscalReportRequest(varGenerateJewelryFiscalReportRequest)

	return err
}

type NullableGenerateJewelryFiscalReportRequest struct {
	value *GenerateJewelryFiscalReportRequest
	isSet bool
}

func (v NullableGenerateJewelryFiscalReportRequest) Get() *GenerateJewelryFiscalReportRequest {
	return v.value
}

func (v *NullableGenerateJewelryFiscalReportRequest) Set(val *GenerateJewelryFiscalReportRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableGenerateJewelryFiscalReportRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableGenerateJewelryFiscalReportRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGenerateJewelryFiscalReportRequest(val *GenerateJewelryFiscalReportRequest) *NullableGenerateJewelryFiscalReportRequest {
	return &NullableGenerateJewelryFiscalReportRequest{value: val, isSet: true}
}

func (v NullableGenerateJewelryFiscalReportRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGenerateJewelryFiscalReportRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
