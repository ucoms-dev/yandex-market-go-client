/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the CampaignSettingsLocalRegionDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CampaignSettingsLocalRegionDTO{}

// CampaignSettingsLocalRegionDTO Информация о своем регионе магазина.
type CampaignSettingsLocalRegionDTO struct {
	// Идентификатор региона.
	Id *int64 `json:"id,omitempty"`
	// Название региона.
	Name *string `json:"name,omitempty"`
	Type *RegionType `json:"type,omitempty"`
	DeliveryOptionsSource *CampaignSettingsScheduleSourceType `json:"deliveryOptionsSource,omitempty"`
	Delivery *CampaignSettingsDeliveryDTO `json:"delivery,omitempty"`
}

// NewCampaignSettingsLocalRegionDTO instantiates a new CampaignSettingsLocalRegionDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCampaignSettingsLocalRegionDTO() *CampaignSettingsLocalRegionDTO {
	this := CampaignSettingsLocalRegionDTO{}
	return &this
}

// NewCampaignSettingsLocalRegionDTOWithDefaults instantiates a new CampaignSettingsLocalRegionDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCampaignSettingsLocalRegionDTOWithDefaults() *CampaignSettingsLocalRegionDTO {
	this := CampaignSettingsLocalRegionDTO{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *CampaignSettingsLocalRegionDTO) GetId() int64 {
	if o == nil || IsNil(o.Id) {
		var ret int64
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettingsLocalRegionDTO) GetIdOk() (*int64, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *CampaignSettingsLocalRegionDTO) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given int64 and assigns it to the Id field.
func (o *CampaignSettingsLocalRegionDTO) SetId(v int64) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CampaignSettingsLocalRegionDTO) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettingsLocalRegionDTO) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CampaignSettingsLocalRegionDTO) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CampaignSettingsLocalRegionDTO) SetName(v string) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CampaignSettingsLocalRegionDTO) GetType() RegionType {
	if o == nil || IsNil(o.Type) {
		var ret RegionType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettingsLocalRegionDTO) GetTypeOk() (*RegionType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CampaignSettingsLocalRegionDTO) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given RegionType and assigns it to the Type field.
func (o *CampaignSettingsLocalRegionDTO) SetType(v RegionType) {
	o.Type = &v
}

// GetDeliveryOptionsSource returns the DeliveryOptionsSource field value if set, zero value otherwise.
func (o *CampaignSettingsLocalRegionDTO) GetDeliveryOptionsSource() CampaignSettingsScheduleSourceType {
	if o == nil || IsNil(o.DeliveryOptionsSource) {
		var ret CampaignSettingsScheduleSourceType
		return ret
	}
	return *o.DeliveryOptionsSource
}

// GetDeliveryOptionsSourceOk returns a tuple with the DeliveryOptionsSource field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettingsLocalRegionDTO) GetDeliveryOptionsSourceOk() (*CampaignSettingsScheduleSourceType, bool) {
	if o == nil || IsNil(o.DeliveryOptionsSource) {
		return nil, false
	}
	return o.DeliveryOptionsSource, true
}

// HasDeliveryOptionsSource returns a boolean if a field has been set.
func (o *CampaignSettingsLocalRegionDTO) HasDeliveryOptionsSource() bool {
	if o != nil && !IsNil(o.DeliveryOptionsSource) {
		return true
	}

	return false
}

// SetDeliveryOptionsSource gets a reference to the given CampaignSettingsScheduleSourceType and assigns it to the DeliveryOptionsSource field.
func (o *CampaignSettingsLocalRegionDTO) SetDeliveryOptionsSource(v CampaignSettingsScheduleSourceType) {
	o.DeliveryOptionsSource = &v
}

// GetDelivery returns the Delivery field value if set, zero value otherwise.
func (o *CampaignSettingsLocalRegionDTO) GetDelivery() CampaignSettingsDeliveryDTO {
	if o == nil || IsNil(o.Delivery) {
		var ret CampaignSettingsDeliveryDTO
		return ret
	}
	return *o.Delivery
}

// GetDeliveryOk returns a tuple with the Delivery field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CampaignSettingsLocalRegionDTO) GetDeliveryOk() (*CampaignSettingsDeliveryDTO, bool) {
	if o == nil || IsNil(o.Delivery) {
		return nil, false
	}
	return o.Delivery, true
}

// HasDelivery returns a boolean if a field has been set.
func (o *CampaignSettingsLocalRegionDTO) HasDelivery() bool {
	if o != nil && !IsNil(o.Delivery) {
		return true
	}

	return false
}

// SetDelivery gets a reference to the given CampaignSettingsDeliveryDTO and assigns it to the Delivery field.
func (o *CampaignSettingsLocalRegionDTO) SetDelivery(v CampaignSettingsDeliveryDTO) {
	o.Delivery = &v
}

func (o CampaignSettingsLocalRegionDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CampaignSettingsLocalRegionDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.DeliveryOptionsSource) {
		toSerialize["deliveryOptionsSource"] = o.DeliveryOptionsSource
	}
	if !IsNil(o.Delivery) {
		toSerialize["delivery"] = o.Delivery
	}
	return toSerialize, nil
}

type NullableCampaignSettingsLocalRegionDTO struct {
	value *CampaignSettingsLocalRegionDTO
	isSet bool
}

func (v NullableCampaignSettingsLocalRegionDTO) Get() *CampaignSettingsLocalRegionDTO {
	return v.value
}

func (v *NullableCampaignSettingsLocalRegionDTO) Set(val *CampaignSettingsLocalRegionDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableCampaignSettingsLocalRegionDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableCampaignSettingsLocalRegionDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCampaignSettingsLocalRegionDTO(val *CampaignSettingsLocalRegionDTO) *NullableCampaignSettingsLocalRegionDTO {
	return &NullableCampaignSettingsLocalRegionDTO{value: val, isSet: true}
}

func (v NullableCampaignSettingsLocalRegionDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCampaignSettingsLocalRegionDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


