/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UpdatePromoOffersRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePromoOffersRequest{}

// UpdatePromoOffersRequest Добавление товаров в акцию или обновление их параметров.  Чтобы добавить товары в акцию или обновить параметры каких-то товаров, передайте их в параметре `offers`. 
type UpdatePromoOffersRequest struct {
	// Идентификатор акции.
	PromoId string `json:"promoId"`
	// Товары, которые необходимо добавить в акцию или цены которых нужно изменить.
	Offers []UpdatePromoOfferDTO `json:"offers"`
}

type _UpdatePromoOffersRequest UpdatePromoOffersRequest

// NewUpdatePromoOffersRequest instantiates a new UpdatePromoOffersRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePromoOffersRequest(promoId string, offers []UpdatePromoOfferDTO) *UpdatePromoOffersRequest {
	this := UpdatePromoOffersRequest{}
	this.PromoId = promoId
	this.Offers = offers
	return &this
}

// NewUpdatePromoOffersRequestWithDefaults instantiates a new UpdatePromoOffersRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePromoOffersRequestWithDefaults() *UpdatePromoOffersRequest {
	this := UpdatePromoOffersRequest{}
	return &this
}

// GetPromoId returns the PromoId field value
func (o *UpdatePromoOffersRequest) GetPromoId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.PromoId
}

// GetPromoIdOk returns a tuple with the PromoId field value
// and a boolean to check if the value has been set.
func (o *UpdatePromoOffersRequest) GetPromoIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PromoId, true
}

// SetPromoId sets field value
func (o *UpdatePromoOffersRequest) SetPromoId(v string) {
	o.PromoId = v
}

// GetOffers returns the Offers field value
func (o *UpdatePromoOffersRequest) GetOffers() []UpdatePromoOfferDTO {
	if o == nil {
		var ret []UpdatePromoOfferDTO
		return ret
	}

	return o.Offers
}

// GetOffersOk returns a tuple with the Offers field value
// and a boolean to check if the value has been set.
func (o *UpdatePromoOffersRequest) GetOffersOk() ([]UpdatePromoOfferDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.Offers, true
}

// SetOffers sets field value
func (o *UpdatePromoOffersRequest) SetOffers(v []UpdatePromoOfferDTO) {
	o.Offers = v
}

func (o UpdatePromoOffersRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePromoOffersRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["promoId"] = o.PromoId
	toSerialize["offers"] = o.Offers
	return toSerialize, nil
}

func (o *UpdatePromoOffersRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"promoId",
		"offers",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUpdatePromoOffersRequest := _UpdatePromoOffersRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUpdatePromoOffersRequest)

	if err != nil {
		return err
	}

	*o = UpdatePromoOffersRequest(varUpdatePromoOffersRequest)

	return err
}

type NullableUpdatePromoOffersRequest struct {
	value *UpdatePromoOffersRequest
	isSet bool
}

func (v NullableUpdatePromoOffersRequest) Get() *UpdatePromoOffersRequest {
	return v.value
}

func (v *NullableUpdatePromoOffersRequest) Set(val *UpdatePromoOffersRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePromoOffersRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePromoOffersRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePromoOffersRequest(val *UpdatePromoOffersRequest) *NullableUpdatePromoOffersRequest {
	return &NullableUpdatePromoOffersRequest{value: val, isSet: true}
}

func (v NullableUpdatePromoOffersRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePromoOffersRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


