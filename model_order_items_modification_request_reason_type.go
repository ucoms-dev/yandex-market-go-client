/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов.

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"fmt"
)

// OrderItemsModificationRequestReasonType Причина, почему обновился состав заказа:  * `PARTNER_REQUESTED_REMOVE` — магазин удалил товар. * `USER_REQUESTED_REMOVE` — покупатель попросил удалить товар.
type OrderItemsModificationRequestReasonType string

// List of OrderItemsModificationRequestReasonType
const (
	OrderItemsModificationRequestReasonType_PARTNER_REQUESTED_REMOVE OrderItemsModificationRequestReasonType = "PARTNER_REQUESTED_REMOVE"
	OrderItemsModificationRequestReasonType_USER_REQUESTED_REMOVE    OrderItemsModificationRequestReasonType = "USER_REQUESTED_REMOVE"
)

// All allowed values of OrderItemsModificationRequestReasonType enum
var AllowedOrderItemsModificationRequestReasonTypeEnumValues = []OrderItemsModificationRequestReasonType{
	"PARTNER_REQUESTED_REMOVE",
	"USER_REQUESTED_REMOVE",
}

func (v *OrderItemsModificationRequestReasonType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := OrderItemsModificationRequestReasonType(value)
	for _, existing := range AllowedOrderItemsModificationRequestReasonTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid OrderItemsModificationRequestReasonType", value)
}

// NewOrderItemsModificationRequestReasonTypeFromValue returns a pointer to a valid OrderItemsModificationRequestReasonType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewOrderItemsModificationRequestReasonTypeFromValue(v string) (*OrderItemsModificationRequestReasonType, error) {
	ev := OrderItemsModificationRequestReasonType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for OrderItemsModificationRequestReasonType: valid values are %v", v, AllowedOrderItemsModificationRequestReasonTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v OrderItemsModificationRequestReasonType) IsValid() bool {
	for _, existing := range AllowedOrderItemsModificationRequestReasonTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to OrderItemsModificationRequestReasonType value
func (v OrderItemsModificationRequestReasonType) Ptr() *OrderItemsModificationRequestReasonType {
	return &v
}

type NullableOrderItemsModificationRequestReasonType struct {
	value *OrderItemsModificationRequestReasonType
	isSet bool
}

func (v NullableOrderItemsModificationRequestReasonType) Get() *OrderItemsModificationRequestReasonType {
	return v.value
}

func (v *NullableOrderItemsModificationRequestReasonType) Set(val *OrderItemsModificationRequestReasonType) {
	v.value = val
	v.isSet = true
}

func (v NullableOrderItemsModificationRequestReasonType) IsSet() bool {
	return v.isSet
}

func (v *NullableOrderItemsModificationRequestReasonType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrderItemsModificationRequestReasonType(val *OrderItemsModificationRequestReasonType) *NullableOrderItemsModificationRequestReasonType {
	return &NullableOrderItemsModificationRequestReasonType{value: val, isSet: true}
}

func (v NullableOrderItemsModificationRequestReasonType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrderItemsModificationRequestReasonType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
