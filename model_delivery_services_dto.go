/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the DeliveryServicesDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DeliveryServicesDTO{}

// DeliveryServicesDTO Информация о службах доставки.
type DeliveryServicesDTO struct {
	// Информация о службе доставки.
	DeliveryService []DeliveryServiceInfoDTO `json:"deliveryService"`
}

type _DeliveryServicesDTO DeliveryServicesDTO

// NewDeliveryServicesDTO instantiates a new DeliveryServicesDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDeliveryServicesDTO(deliveryService []DeliveryServiceInfoDTO) *DeliveryServicesDTO {
	this := DeliveryServicesDTO{}
	this.DeliveryService = deliveryService
	return &this
}

// NewDeliveryServicesDTOWithDefaults instantiates a new DeliveryServicesDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDeliveryServicesDTOWithDefaults() *DeliveryServicesDTO {
	this := DeliveryServicesDTO{}
	return &this
}

// GetDeliveryService returns the DeliveryService field value
func (o *DeliveryServicesDTO) GetDeliveryService() []DeliveryServiceInfoDTO {
	if o == nil {
		var ret []DeliveryServiceInfoDTO
		return ret
	}

	return o.DeliveryService
}

// GetDeliveryServiceOk returns a tuple with the DeliveryService field value
// and a boolean to check if the value has been set.
func (o *DeliveryServicesDTO) GetDeliveryServiceOk() ([]DeliveryServiceInfoDTO, bool) {
	if o == nil {
		return nil, false
	}
	return o.DeliveryService, true
}

// SetDeliveryService sets field value
func (o *DeliveryServicesDTO) SetDeliveryService(v []DeliveryServiceInfoDTO) {
	o.DeliveryService = v
}

func (o DeliveryServicesDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DeliveryServicesDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["deliveryService"] = o.DeliveryService
	return toSerialize, nil
}

func (o *DeliveryServicesDTO) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"deliveryService",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varDeliveryServicesDTO := _DeliveryServicesDTO{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varDeliveryServicesDTO)

	if err != nil {
		return err
	}

	*o = DeliveryServicesDTO(varDeliveryServicesDTO)

	return err
}

type NullableDeliveryServicesDTO struct {
	value *DeliveryServicesDTO
	isSet bool
}

func (v NullableDeliveryServicesDTO) Get() *DeliveryServicesDTO {
	return v.value
}

func (v *NullableDeliveryServicesDTO) Set(val *DeliveryServicesDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryServicesDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryServicesDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryServicesDTO(val *DeliveryServicesDTO) *NullableDeliveryServicesDTO {
	return &NullableDeliveryServicesDTO{value: val, isSet: true}
}

func (v NullableDeliveryServicesDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryServicesDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


