/*
Партнерский API Маркета

API Яндекс Маркета помогает продавцам автоматизировать и упростить работу с маркетплейсом.  В числе возможностей интеграции:  * управление каталогом товаров и витриной,  * обработка заказов,  * изменение настроек магазина,  * получение отчетов. 

API version: LATEST
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the UpdatePromoOfferDiscountParamsDTO type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdatePromoOfferDiscountParamsDTO{}

// UpdatePromoOfferDiscountParamsDTO Параметры товара в акции с типом `DIRECT_DISCOUNT` или `BLUE_FLASH`.  Обязательный параметр для акций с этими типами. 
type UpdatePromoOfferDiscountParamsDTO struct {
	// Зачеркнутая цена — та, по которой товар продавался до акции.  Указывается в рублях.  Число должно быть целым. 
	Price *int64 `json:"price,omitempty"`
	// Цена по акции — та, по которой вы хотите продавать товар.  Указывается в рублях.  Число должно быть целым. 
	PromoPrice *int64 `json:"promoPrice,omitempty"`
}

// NewUpdatePromoOfferDiscountParamsDTO instantiates a new UpdatePromoOfferDiscountParamsDTO object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdatePromoOfferDiscountParamsDTO() *UpdatePromoOfferDiscountParamsDTO {
	this := UpdatePromoOfferDiscountParamsDTO{}
	return &this
}

// NewUpdatePromoOfferDiscountParamsDTOWithDefaults instantiates a new UpdatePromoOfferDiscountParamsDTO object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdatePromoOfferDiscountParamsDTOWithDefaults() *UpdatePromoOfferDiscountParamsDTO {
	this := UpdatePromoOfferDiscountParamsDTO{}
	return &this
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *UpdatePromoOfferDiscountParamsDTO) GetPrice() int64 {
	if o == nil || IsNil(o.Price) {
		var ret int64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePromoOfferDiscountParamsDTO) GetPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *UpdatePromoOfferDiscountParamsDTO) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given int64 and assigns it to the Price field.
func (o *UpdatePromoOfferDiscountParamsDTO) SetPrice(v int64) {
	o.Price = &v
}

// GetPromoPrice returns the PromoPrice field value if set, zero value otherwise.
func (o *UpdatePromoOfferDiscountParamsDTO) GetPromoPrice() int64 {
	if o == nil || IsNil(o.PromoPrice) {
		var ret int64
		return ret
	}
	return *o.PromoPrice
}

// GetPromoPriceOk returns a tuple with the PromoPrice field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdatePromoOfferDiscountParamsDTO) GetPromoPriceOk() (*int64, bool) {
	if o == nil || IsNil(o.PromoPrice) {
		return nil, false
	}
	return o.PromoPrice, true
}

// HasPromoPrice returns a boolean if a field has been set.
func (o *UpdatePromoOfferDiscountParamsDTO) HasPromoPrice() bool {
	if o != nil && !IsNil(o.PromoPrice) {
		return true
	}

	return false
}

// SetPromoPrice gets a reference to the given int64 and assigns it to the PromoPrice field.
func (o *UpdatePromoOfferDiscountParamsDTO) SetPromoPrice(v int64) {
	o.PromoPrice = &v
}

func (o UpdatePromoOfferDiscountParamsDTO) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdatePromoOfferDiscountParamsDTO) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.PromoPrice) {
		toSerialize["promoPrice"] = o.PromoPrice
	}
	return toSerialize, nil
}

type NullableUpdatePromoOfferDiscountParamsDTO struct {
	value *UpdatePromoOfferDiscountParamsDTO
	isSet bool
}

func (v NullableUpdatePromoOfferDiscountParamsDTO) Get() *UpdatePromoOfferDiscountParamsDTO {
	return v.value
}

func (v *NullableUpdatePromoOfferDiscountParamsDTO) Set(val *UpdatePromoOfferDiscountParamsDTO) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdatePromoOfferDiscountParamsDTO) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdatePromoOfferDiscountParamsDTO) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdatePromoOfferDiscountParamsDTO(val *UpdatePromoOfferDiscountParamsDTO) *NullableUpdatePromoOfferDiscountParamsDTO {
	return &NullableUpdatePromoOfferDiscountParamsDTO{value: val, isSet: true}
}

func (v NullableUpdatePromoOfferDiscountParamsDTO) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdatePromoOfferDiscountParamsDTO) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


